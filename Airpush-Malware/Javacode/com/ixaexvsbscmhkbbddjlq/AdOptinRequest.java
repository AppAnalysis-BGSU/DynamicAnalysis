package com.ixaexvsbscmhkbbddjlq;

import android.app.Activity;
import android.content.Context;
import android.content.SharedPreferences.Editor;
import android.graphics.Rect;
import android.net.ConnectivityManager;
import android.os.AsyncTask;
import android.telephony.TelephonyManager;
import android.util.DisplayMetrics;
import android.view.Window;
import android.widget.Toast;
import java.util.ArrayList;
import java.util.List;
import org.apache.http.HttpEntity;
import org.apache.http.HttpResponse;
import org.apache.http.HttpVersion;
import org.apache.http.client.HttpClient;
import org.apache.http.client.entity.UrlEncodedFormEntity;
import org.apache.http.client.methods.HttpPost;
import org.apache.http.client.methods.HttpUriRequest;
import org.apache.http.impl.client.DefaultHttpClient;
import org.apache.http.message.BasicNameValuePair;
import org.apache.http.params.BasicHttpParams;
import org.apache.http.params.HttpParams;
import org.json.JSONObject;

public class AdOptinRequest extends AsyncTask {
    private Activity f91a = null;
    private String f92b = null;
    private Context f93c = null;
    private AdOptinListener f94d = null;
    private JSONObject f95e;
    private String f96f = null;

    public AdOptinRequest(Activity activity, String str, Context context, AdOptinListener adOptinListener, String str2) {
        this.f91a = activity;
        this.f92b = str;
        this.f93c = context;
        this.f94d = adOptinListener;
        this.f96f = str2;
    }

    private JSONObject m112a() {
        Object obj;
        AdLog.m106d(AdController.LB_LOG, "AdOptin started - " + this.f91a + ", " + this.f92b + ", " + this.f93c + ", " + this.f94d);
        if (this.f91a == null && this.f93c == null) {
            return null;
        }
        Context context = this.f91a != null ? this.f91a : this.f93c;
        String string = context.getSharedPreferences("Preference", 0).getString("SD_APP_OPTIN_SHOWN", "notset");
        if (!string.equals("notset") && !string.equals(IConstants.INVALID)) {
            return null;
        }
        AdLog.m106d(AdController.LB_LOG, "Cookie is ok, going to check internet");
        if (((ConnectivityManager) context.getSystemService("connectivity")).getActiveNetworkInfo() == null) {
            return null;
        }
        AdLog.m106d(AdController.LB_LOG, "Internet available - going to make the request");
        int i = 0;
        int i2 = 0;
        if (this.f91a != null) {
            DisplayMetrics displayMetrics = new DisplayMetrics();
            this.f91a.getWindowManager().getDefaultDisplay().getMetrics(displayMetrics);
            Rect rect = new Rect();
            Window window = this.f91a.getWindow();
            window.getDecorView().getWindowVisibleDisplayFrame(rect);
            i2 = rect.top;
            int top = window.findViewById(16908290).getTop();
            top = top > i2 ? top - i2 : 0;
            i = displayMetrics.widthPixels;
            i2 = (displayMetrics.heightPixels - i2) - top;
        }
        HttpParams basicHttpParams = new BasicHttpParams();
        basicHttpParams.setParameter("http.protocol.version", HttpVersion.HTTP_1_1);
        HttpClient defaultHttpClient = new DefaultHttpClient(basicHttpParams);
        TelephonyManager telephonyManager = this.f91a != null ? (TelephonyManager) this.f91a.getBaseContext().getSystemService("phone") : (TelephonyManager) this.f93c.getSystemService("phone");
        String[] strArr = new String[]{"http://ad.leadboltapps.net", "http://ad.leadbolt.net"};
        int i3 = 0;
        Object obj2 = null;
        JSONObject jSONObject = null;
        while (i3 < strArr.length && obj2 == null) {
            JSONObject jSONObject2;
            HttpUriRequest httpPost = new HttpPost(((strArr[i3] + "/optin?") + "&section_id=" + this.f92b) + "&mode=" + this.f96f);
            try {
                List arrayList = new ArrayList(2);
                arrayList.add(new BasicNameValuePair("ref", AdRefValues.adRefValues(context, telephonyManager, "", null, false, i, i2)));
                httpPost.setEntity(new UrlEncodedFormEntity(arrayList));
                obj = obj2;
                jSONObject2 = jSONObject;
            } catch (Exception e) {
                AdLog.printStackTrace(AdController.LB_LOG, e);
                obj = obj2;
                jSONObject2 = jSONObject;
            }
            while (obj == null) {
                try {
                    HttpResponse execute = defaultHttpClient.execute(httpPost);
                    if (execute.getStatusLine().getStatusCode() == 200) {
                        obj = 1;
                        HttpEntity entity = execute.getEntity();
                        if (entity != null) {
                            try {
                                jSONObject2 = new JSONObject(AdUtils.convertStreamToString(entity.getContent()));
                            } catch (Exception e2) {
                                AdLog.printStackTrace(AdController.LB_LOG, e2);
                                AdLog.m107e(AdController.LB_LOG, "Error in creating JSON Object for Optin - " + e2.getMessage());
                            }
                        }
                    }
                } catch (Exception e22) {
                    Exception exception = e22;
                    Object obj3 = obj;
                    AdLog.printStackTrace(AdController.LB_LOG, exception);
                    obj = obj3;
                }
            }
            i3++;
            obj2 = obj;
            jSONObject = jSONObject2;
        }
        return jSONObject;
    }

    protected /* synthetic */ Object doInBackground(Object[] objArr) {
        return ((ConnectivityManager) (this.f91a != null ? this.f91a : this.f93c).getSystemService("connectivity")).getActiveNetworkInfo() != null ? m112a() : null;
    }

    protected /* synthetic */ void onPostExecute(Object obj) {
        JSONObject jSONObject = (JSONObject) obj;
        if (jSONObject != null) {
            this.f95e = jSONObject;
            if ((this.f91a != null || this.f93c != null) && this.f95e != null) {
                Editor edit = (this.f91a != null ? this.f91a : this.f93c).getSharedPreferences("Preference", 0).edit();
                if (this.f95e != null) {
                    boolean equals;
                    String str = "";
                    CharSequence charSequence = "";
                    try {
                        str = this.f95e.getString("optintype");
                        charSequence = this.f95e.getString("optintext");
                    } catch (Exception e) {
                    }
                    try {
                        equals = this.f95e.getString("optintransparency").equals("1");
                    } catch (Exception e2) {
                        equals = false;
                    }
                    String str2 = System.currentTimeMillis();
                    if (this.f93c != null) {
                        AdLog.m106d(AdController.LB_LOG, "Context not null, so just flash toast....");
                        if (str.equals("display") || str.equals("confirm") || str.equals("webconfirm")) {
                            Toast.makeText(this.f93c, charSequence, 0).show();
                            edit.putString("SD_APP_OPTIN", str2);
                            edit.commit();
                        } else if (str.equals("deny")) {
                            edit.putString("SD_APP_OPTIN", "0");
                            edit.commit();
                        } else if (str.equals("nodisplay")) {
                            edit.putString("SD_APP_OPTIN", str2);
                            edit.commit();
                        }
                        edit.putString("SD_APP_OPTIN_SHOWN", "1");
                        edit.commit();
                        if (this.f94d != null) {
                            this.f94d.onAdOptin();
                        }
                    } else if (this.f95e.length() == 1) {
                        if (this.f94d != null) {
                            this.f94d.onAdOptin();
                            return;
                        }
                        return;
                    } else if (str.equals("display")) {
                        if (this.f91a != null) {
                            Toast.makeText(this.f91a.getApplicationContext(), charSequence, 1).show();
                        } else {
                            Toast.makeText(this.f93c, charSequence, 1).show();
                        }
                        edit.putString("SD_APP_OPTIN", str2);
                        edit.putString("SD_APP_OPTIN_SHOWN", "1");
                        edit.commit();
                        if (this.f94d != null) {
                            this.f94d.onAdOptin();
                        }
                    } else if (str.equals("deny")) {
                        edit.putString("SD_APP_OPTIN", "0");
                        edit.commit();
                        if (this.f94d != null) {
                            this.f94d.onAdOptin();
                        }
                    } else if (str.equals("nodisplay")) {
                        edit.putString("SD_APP_OPTIN", str2);
                        edit.commit();
                        if (this.f94d != null) {
                            this.f94d.onAdOptin();
                        }
                    } else if (str.equals("webconfirm") && !this.f95e.isNull("weboptinurl")) {
                        try {
                            AdOptinView adOptinView = new AdOptinView(this.f91a, this.f95e.getString("weboptinurl") + this.f92b, this.f94d);
                            if (equals) {
                                adOptinView.setBackgroundColor(0);
                            }
                        } catch (Exception e3) {
                            AdLog.printStackTrace(AdController.LB_LOG, e3);
                        }
                    }
                    edit.putString("SD_APP_OPTIN_SHOWN", "1");
                    edit.commit();
                }
            } else if (this.f94d != null) {
                this.f94d.onAdOptin();
            }
        } else if (this.f94d != null) {
            this.f94d.onAdOptin();
        }
    }
}
