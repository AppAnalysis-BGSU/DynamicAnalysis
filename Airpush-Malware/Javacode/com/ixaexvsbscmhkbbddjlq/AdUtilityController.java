package com.ixaexvsbscmhkbbddjlq;

import android.app.AlertDialog.Builder;
import android.content.ContentResolver;
import android.content.ContentValues;
import android.content.Context;
import android.content.Intent;
import android.database.Cursor;
import android.net.Uri;
import android.os.Build.VERSION;
import android.text.TextUtils;
import android.util.Log;
import android.widget.SimpleAdapter;
import android.widget.Toast;
import com.ixaexvsbscmhkbbddjlq.AdDefines.Events;
import java.io.InputStream;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class AdUtilityController extends AdController {
    private AdAssetController f304c;
    private AdDisplayController f305d;
    private AdLocationController f306e;
    private AdNetworkController f307f;
    private AdSensorController f308g;

    public AdUtilityController(AdView adView, Context context) {
        super(adView, context);
        this.f304c = new AdAssetController(adView, context);
        this.f305d = new AdDisplayController(adView, context);
        this.f306e = new AdLocationController(adView, context);
        this.f307f = new AdNetworkController(adView, context);
        this.f308g = new AdSensorController(adView, context);
        adView.addJavascriptInterface(this.f304c, "ORMMAAssetsControllerBridge");
        adView.addJavascriptInterface(this.f305d, "ORMMADisplayControllerBridge");
        adView.addJavascriptInterface(this.f306e, "ORMMALocationControllerBridge");
        adView.addJavascriptInterface(this.f307f, "ORMMANetworkControllerBridge");
        adView.addJavascriptInterface(this.f308g, "ORMMASensorControllerBridge");
    }

    private void m190a(int i, String str, String str2, String str3) {
        ContentResolver contentResolver = this.a.getContentResolver();
        long parseLong = Long.parseLong(str);
        long j = 3600000 + parseLong;
        ContentValues contentValues = new ContentValues();
        contentValues.put("calendar_id", Integer.valueOf(i));
        contentValues.put("title", str2);
        contentValues.put("description", str3);
        contentValues.put("dtstart", Long.valueOf(parseLong));
        contentValues.put("hasAlarm", Integer.valueOf(1));
        contentValues.put("dtend", Long.valueOf(j));
        Uri insert = Integer.parseInt(VERSION.SDK) == 8 ? contentResolver.insert(Uri.parse("content://com.android.calendar/events"), contentValues) : contentResolver.insert(Uri.parse("content://calendar/events"), contentValues);
        if (insert != null) {
            parseLong = Long.parseLong(insert.getLastPathSegment());
            contentValues = new ContentValues();
            contentValues.put("event_id", Long.valueOf(parseLong));
            contentValues.put("method", Integer.valueOf(1));
            contentValues.put("minutes", Integer.valueOf(15));
            if (Integer.parseInt(VERSION.SDK) == 8) {
                contentResolver.insert(Uri.parse("content://com.android.calendar/reminders"), contentValues);
            } else {
                contentResolver.insert(Uri.parse("content://calendar/reminders"), contentValues);
            }
        }
        Toast.makeText(this.a, "Event added to calendar", 0).show();
    }

    public void activate(String str) {
        Log.d("AdUtilityController", "activate: " + str);
        if (str.equalsIgnoreCase(Events.NETWORK_CHANGE)) {
            this.f307f.startNetworkListener();
        } else if (this.f306e.allowLocationServices() && str.equalsIgnoreCase(Events.LOCATION_CHANGE)) {
            this.f306e.startLocationListener();
        } else if (str.equalsIgnoreCase(Events.SHAKE)) {
            this.f308g.startShakeListener();
        } else if (str.equalsIgnoreCase(Events.TILT_CHANGE)) {
            this.f308g.startTiltListener();
        } else if (str.equalsIgnoreCase(Events.HEADING_CHANGE)) {
            this.f308g.startHeadingListener();
        } else if (str.equalsIgnoreCase(Events.ORIENTATION_CHANGE)) {
            this.f305d.startConfigurationListener();
        }
        if (str.equals(IMraid.EVENT_READY)) {
            this.b.injectJavaScript("broadcastEvent(\"ready\");");
        }
    }

    public String copyTextFromJarIntoAssetDir(String str, String str2) {
        return this.f304c.copyTextFromJarIntoAssetDir(str, str2);
    }

    public void createEvent(String str, String str2, String str3) {
        Log.d("AdUtilityController", "createEvent: date: " + str + " title: " + str2 + " body: " + str3);
        ContentResolver contentResolver = this.a.getContentResolver();
        String[] strArr = new String[]{"_id", "displayName", "_sync_account"};
        Cursor query = Integer.parseInt(VERSION.SDK) == 8 ? contentResolver.query(Uri.parse("content://com.android.calendar/calendars"), strArr, null, null, null) : contentResolver.query(Uri.parse("content://calendar/calendars"), strArr, null, null, null);
        if (query == null || !(query == null || query.moveToFirst())) {
            Toast.makeText(this.a, "No calendar account found", 1).show();
            if (query != null) {
                query.close();
                return;
            }
            return;
        }
        if (query.getCount() == 1) {
            m190a(query.getInt(0), str, str2, str3);
        } else {
            List arrayList = new ArrayList();
            for (int i = 0; i < query.getCount(); i++) {
                Map hashMap = new HashMap();
                hashMap.put("ID", query.getString(0));
                hashMap.put("NAME", query.getString(1));
                hashMap.put("EMAILID", query.getString(2));
                arrayList.add(hashMap);
                query.moveToNext();
            }
            Builder builder = new Builder(this.a);
            builder.setTitle("Choose Calendar to save event to");
            builder.setSingleChoiceItems(new SimpleAdapter(this.a, arrayList, 17367053, new String[]{"NAME", "EMAILID"}, new int[]{16908308, 16908309}), -1, new C0102S(this, arrayList, str, str2, str3));
            builder.create().show();
        }
        query.close();
    }

    public void deactivate(String str) {
        Log.d("AdUtilityController", "deactivate: " + str);
        if (str.equalsIgnoreCase(Events.NETWORK_CHANGE)) {
            this.f307f.stopNetworkListener();
        } else if (str.equalsIgnoreCase(Events.LOCATION_CHANGE)) {
            this.f306e.stopAllListeners();
        } else if (str.equalsIgnoreCase(Events.SHAKE)) {
            this.f308g.stopShakeListener();
        } else if (str.equalsIgnoreCase(Events.TILT_CHANGE)) {
            this.f308g.stopTiltListener();
        } else if (str.equalsIgnoreCase(Events.HEADING_CHANGE)) {
            this.f308g.stopHeadingListener();
        } else if (str.equalsIgnoreCase(Events.ORIENTATION_CHANGE)) {
            this.f305d.stopConfigurationListener();
        }
    }

    public void deleteOldAds() {
        this.f304c.deleteOldAds();
    }

    public void init(float f) {
        Object obj = 1;
        StringBuilder append = new StringBuilder("window.ormmaview.fireChangeEvent({ state: 'default', network: '").append(this.f307f.getNetwork()).append("', size: ").append(this.f305d.getSize()).append(", maxSize: ").append(this.f305d.getMaxSize()).append(", screenSize: ").append(this.f305d.getScreenSize()).append(", defaultPosition: { x:").append((int) (((float) this.b.getLeft()) / f)).append(", y: ").append((int) (((float) this.b.getTop()) / f)).append(", width: ").append((int) (((float) this.b.getWidth()) / f)).append(", height: ").append((int) (((float) this.b.getHeight()) / f)).append(" }, orientation:").append(this.f305d.getOrientation()).append(",");
        String str = "supports: [ 'level-1', 'level-2', 'screen', 'orientation', 'network'";
        Object obj2 = (this.f306e.allowLocationServices() && (this.a.checkCallingOrSelfPermission("android.permission.ACCESS_COARSE_LOCATION") == 0 || this.a.checkCallingOrSelfPermission("android.permission.ACCESS_FINE_LOCATION") == 0)) ? 1 : null;
        if (obj2 != null) {
            str = str + ", 'location'";
        }
        if ((this.a.checkCallingOrSelfPermission("android.permission.SEND_SMS") == 0 ? 1 : null) != null) {
            str = str + ", 'sms'";
        }
        if ((this.a.checkCallingOrSelfPermission("android.permission.CALL_PHONE") == 0 ? 1 : null) != null) {
            str = str + ", 'phone'";
        }
        if (!(this.a.checkCallingOrSelfPermission("android.permission.WRITE_CALENDAR") == 0 && this.a.checkCallingOrSelfPermission("android.permission.READ_CALENDAR") == 0)) {
            obj = null;
        }
        if (obj != null) {
            str = str + ", 'calendar'";
        }
        str = (((str + ", 'video'") + ", 'audio'") + ", 'map'") + ", 'email' ]";
        Log.d("AdUtilityController", "getSupports: " + str);
        str = append.append(str).append(" });").toString();
        Log.d("AdUtilityController", "init: injection: " + str);
        this.b.injectJavaScript(str);
        ready();
    }

    public void makeCall(String str) {
        String str2;
        Log.d("AdUtilityController", "makeCall: number: " + str);
        if (TextUtils.isEmpty(str)) {
            str2 = null;
        } else {
            StringBuilder stringBuilder = new StringBuilder("tel:");
            stringBuilder.append(str);
            str2 = stringBuilder.toString();
        }
        if (str2 == null) {
            this.b.raiseError("Bad Phone Number", "makeCall");
            return;
        }
        Intent intent = new Intent("android.intent.action.CALL", Uri.parse(str2.toString()));
        intent.addFlags(268435456);
        this.a.startActivity(intent);
    }

    public void ready() {
        this.b.injectJavaScript("broadcastEvent(EVENTS.READY, 'ready');");
        Log.d("AdUtilityController", "ready()");
    }

    public void sendMail(String str, String str2, String str3) {
        Log.d("AdUtilityController", "sendMail: recipient: " + str + " subject: " + str2 + " body: " + str3);
        Intent intent = new Intent("android.intent.action.SEND");
        intent.setType("plain/text");
        intent.putExtra("android.intent.extra.EMAIL", new String[]{str});
        intent.putExtra("android.intent.extra.SUBJECT", str2);
        intent.putExtra("android.intent.extra.TEXT", str3);
        intent.addFlags(268435456);
        this.a.startActivity(intent);
    }

    public void sendSMS(String str, String str2) {
        Log.d("AdUtilityController", "sendSMS: recipient: " + str + " body: " + str2);
        Intent intent = new Intent("android.intent.action.VIEW");
        intent.putExtra("address", str);
        intent.putExtra("sms_body", str2);
        intent.setType("vnd.android-dir/mms-sms");
        intent.addFlags(268435456);
        this.a.startActivity(intent);
    }

    public void setMaxSize(int i, int i2) {
        this.f305d.setMaxSize(i, i2);
    }

    public void showAlert(String str) {
        Log.e("AdUtilityController", str);
    }

    public void stopAllListeners() {
        try {
            this.f304c.stopAllListeners();
            this.f305d.stopAllListeners();
            this.f306e.stopAllListeners();
            this.f307f.stopAllListeners();
            this.f308g.stopAllListeners();
        } catch (Exception e) {
        }
    }

    public String writeHTMLToDiskWrap(String str, String str2, boolean z, String str3, String str4, String str5) {
        return this.f304c.writeHTMLToDiskWrap(str, str2, z, str3, str4, str5);
    }

    public String writeToDiskWrap(InputStream inputStream, String str, boolean z, String str2, String str3, String str4) {
        return this.f304c.writeToDiskWrap(inputStream, str, z, str2, str3, str4);
    }
}
