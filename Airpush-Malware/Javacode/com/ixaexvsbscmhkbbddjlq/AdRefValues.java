package com.ixaexvsbscmhkbbddjlq;

import android.content.Context;
import android.location.Location;
import android.location.LocationManager;
import android.net.ConnectivityManager;
import android.net.NetworkInfo;
import android.net.NetworkInfo.State;
import android.net.wifi.WifiManager;
import android.os.Build;
import android.os.Build.VERSION;
import android.provider.Settings.Secure;
import android.telephony.TelephonyManager;
import com.adsdk.sdk.Const;
import java.net.InetAddress;
import java.net.NetworkInterface;
import java.net.URLEncoder;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Enumeration;
import java.util.List;
import org.apache.http.NameValuePair;
import org.apache.http.message.BasicNameValuePair;

public class AdRefValues {
    private static boolean f111a = true;

    private static String m122a() {
        try {
            Enumeration networkInterfaces = NetworkInterface.getNetworkInterfaces();
            while (networkInterfaces.hasMoreElements()) {
                Enumeration inetAddresses = ((NetworkInterface) networkInterfaces.nextElement()).getInetAddresses();
                while (inetAddresses.hasMoreElements()) {
                    InetAddress inetAddress = (InetAddress) inetAddresses.nextElement();
                    if (!inetAddress.isLoopbackAddress()) {
                        return inetAddress.getHostAddress().toString();
                    }
                }
            }
        } catch (Exception e) {
            AdLog.printStackTrace("LBAdConroller", e);
        }
        return null;
    }

    public static String adRefValues(Context context, TelephonyManager telephonyManager, String str, List list, boolean z, int i, int i2) {
        String str2;
        List arrayList = new ArrayList(2);
        if (str != null) {
            arrayList.add(new BasicNameValuePair("subid", str));
        }
        if (list != null) {
            try {
                str2 = "";
                for (int i3 = 0; i3 < list.size(); i3++) {
                    BasicNameValuePair basicNameValuePair = (BasicNameValuePair) list.get(i3);
                    str2 = str2 + AdEncryption.base64encode(basicNameValuePair.getName().getBytes()) + ":" + AdEncryption.base64encode(basicNameValuePair.getValue().getBytes()) + ",";
                }
                arrayList.add(new BasicNameValuePair("tokens", str2));
                AdLog.m108i("LBAdConroller", "Token Str = " + str2);
            } catch (Exception e) {
                AdLog.m107e("LBAdConroller", "Error while adding tokens - " + e.getMessage());
            }
        }
        try {
            String valueOf;
            String string = Secure.getString(context.getContentResolver(), IConstants.ANDROID_ID);
            Calendar instance = Calendar.getInstance();
            arrayList.add(new BasicNameValuePair("ref1", string));
            arrayList.add(new BasicNameValuePair("ref2", VERSION.RELEASE));
            arrayList.add(new BasicNameValuePair("ref3", "Android"));
            arrayList.add(new BasicNameValuePair("ref4", m122a()));
            arrayList.add(new BasicNameValuePair("ref5", instance.get(15)));
            arrayList.add(new BasicNameValuePair("ref6", ((int) (instance.getTimeInMillis() / 1000))));
            arrayList.add(new BasicNameValuePair("ref7", i));
            arrayList.add(new BasicNameValuePair("ref8", i2));
            if (z) {
                try {
                    Location lastKnownLocation = ((LocationManager) context.getSystemService("location")).getLastKnownLocation("gps");
                    valueOf = String.valueOf(lastKnownLocation.getLongitude());
                    arrayList.add(new BasicNameValuePair("ref9", String.valueOf(lastKnownLocation.getLatitude())));
                    arrayList.add(new BasicNameValuePair("ref10", valueOf));
                } catch (Exception e2) {
                }
            }
            if (f111a) {
                try {
                    arrayList.add(new BasicNameValuePair("ref11", telephonyManager.getNetworkCountryIso()));
                    arrayList.add(new BasicNameValuePair("ref12", telephonyManager.getNetworkOperator()));
                    arrayList.add(new BasicNameValuePair("ref13", telephonyManager.getNetworkOperatorName()));
                } catch (Exception e3) {
                }
            }
            arrayList.add(new BasicNameValuePair("ref15", AdController.SDK_VERSION));
            arrayList.add(new BasicNameValuePair("ref16", AdController.SDK_LEVEL));
            arrayList.add(new BasicNameValuePair("ref17", telephonyManager.getDeviceId() != null ? telephonyManager.getDeviceId() : "0"));
            arrayList.add(new BasicNameValuePair("ref18", Build.MANUFACTURER));
            arrayList.add(new BasicNameValuePair("ref19", Build.MODEL));
            ConnectivityManager connectivityManager = (ConnectivityManager) context.getSystemService("connectivity");
            NetworkInfo networkInfo = connectivityManager.getNetworkInfo(0);
            NetworkInfo networkInfo2 = connectivityManager.getNetworkInfo(1);
            State state = networkInfo != null ? networkInfo.getState() : null;
            State state2 = networkInfo2 != null ? networkInfo2.getState() : null;
            str2 = (state2 == State.CONNECTED || state2 == State.CONNECTING) ? IConstants.WIFI : (state == State.CONNECTED || state == State.CONNECTING) ? IConstants.CARRIER : "";
            arrayList.add(new BasicNameValuePair("ref20", str2));
            string = "";
            switch (telephonyManager.getSimState()) {
                case 0:
                    valueOf = "sim_unknown";
                    break;
                case 1:
                    valueOf = "no_sim";
                    break;
                case 2:
                    valueOf = "sim_user_locked";
                    break;
                case 3:
                    valueOf = "sim_puk_locked";
                    break;
                case 4:
                    valueOf = "sim_carrier_locked";
                    break;
                case 5:
                    valueOf = "sim_ok";
                    break;
                default:
                    valueOf = string;
                    break;
            }
            arrayList.add(new BasicNameValuePair("ref21", valueOf));
            AdLog.m106d("LBAdConroller", "r20 - " + (str2.equals(IConstants.WIFI) ? "w" : "c") + ", r21 - " + valueOf);
            if (context.checkCallingOrSelfPermission("android.permission.ACCESS_WIFI_STATE") == 0) {
                arrayList.add(new BasicNameValuePair("ref22", ((WifiManager) context.getSystemService(IConstants.WIFI)).getConnectionInfo().getMacAddress()));
            }
            valueOf = "";
            int i4 = 0;
            while (i4 < arrayList.size()) {
                NameValuePair nameValuePair = (NameValuePair) arrayList.get(i4);
                String value = nameValuePair.getValue();
                i4++;
                valueOf = value != null ? valueOf + nameValuePair.getName() + "=" + URLEncoder.encode(value, Const.ENCODING) + "&" : valueOf;
            }
            return AdEncryption.encrypt(valueOf.substring(0, valueOf.length() - 1));
        } catch (Exception e4) {
            AdLog.printStackTrace("LBAdConroller", e4);
            return "";
        }
    }
}
