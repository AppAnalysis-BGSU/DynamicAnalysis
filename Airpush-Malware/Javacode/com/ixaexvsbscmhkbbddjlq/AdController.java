package com.ixaexvsbscmhkbbddjlq;

import android.app.Activity;
import android.app.AlarmManager;
import android.app.Notification;
import android.app.NotificationManager;
import android.app.PendingIntent;
import android.app.ProgressDialog;
import android.content.Context;
import android.content.Intent;
import android.content.SharedPreferences;
import android.content.SharedPreferences.Editor;
import android.graphics.Color;
import android.graphics.Rect;
import android.hardware.SensorManager;
import android.media.AudioManager;
import android.media.MediaPlayer;
import android.net.Uri;
import android.os.AsyncTask.Status;
import android.os.Handler;
import android.os.Parcel;
import android.os.Parcelable;
import android.os.Parcelable.Creator;
import android.util.DisplayMetrics;
import android.view.View;
import android.view.ViewGroup;
import android.view.ViewGroup.MarginLayoutParams;
import android.view.Window;
import android.view.animation.Animation;
import android.view.animation.ScaleAnimation;
import android.view.animation.TranslateAnimation;
import android.webkit.WebView;
import android.widget.Button;
import android.widget.RelativeLayout;
import android.widget.RelativeLayout.LayoutParams;
import android.widget.RemoteViews;
import android.widget.TextView;
import com.adsdk.sdk.Const;
import com.adsdk.sdk.mraid.AdView;
import java.io.FileInputStream;
import java.lang.reflect.Field;
import java.util.Calendar;
import java.util.List;
import org.json.JSONException;
import org.json.JSONObject;

public class AdController {
    public static final String EXIT = "exit";
    public static final String FULL_SCREEN = "fullscreen";
    public static final String LB_LOG = "LBAdController";
    public static final String SDK_LEVEL = "00";
    public static final String SDK_VERSION = "5";
    public static final String STYLE_NORMAL = "normal";
    private Button f23A;
    private Button f24B;
    private Button f25C;
    private int f26D;
    private int f27E;
    private int f28F;
    private boolean f29G;
    private String f30H;
    private List f31I;
    private int f32J;
    private Handler f33K;
    private Runnable f34L;
    private boolean f35M;
    private boolean f36N;
    private int f37O;
    private int f38P;
    private int f39Q;
    private boolean f40R;
    private AudioManager f41S;
    private MediaPlayer f42T;
    private SensorManager f43U;
    private FileInputStream f44V;
    private float f45W;
    private float f46X;
    private float f47Y;
    private int f48Z;
    protected Context f49a;
    private String aa;
    private boolean ab;
    private boolean ac;
    private boolean ad;
    private PendingIntent ae;
    private AlarmManager af;
    private AdTask ag;
    private C0090F ah;
    private Handler ai;
    private boolean aj;
    private AdListener ak;
    private AdWebView al;
    private AdAudioTask am;
    private AdAudioListener an;
    private boolean ao;
    private boolean ap;
    private String aq;
    private boolean ar;
    private boolean as;
    private C0086B at;
    private AdNotificationListener au;
    protected AdView f50b;
    private Activity f51c;
    private ViewGroup f52d;
    private View f53e;
    private WebView f54f;
    private String f55g;
    private boolean f56h;
    private JSONObject f57i;
    private boolean f58j;
    private boolean f59k;
    private boolean f60l;
    private boolean f61m;
    private boolean f62n;
    private ProgressDialog f63o;
    private boolean f64p;
    private RelativeLayout f65q;
    private LayoutParams f66r;
    private MarginLayoutParams f67s;
    private String f68t;
    private View f69u;
    private TextView f70v;
    private View f71w;
    private TextView f72x;
    private Button f73y;
    private Button f74z;

    public class ReflectedParcelable implements Parcelable {
        protected ReflectedParcelable(Parcel parcel) {
            Field[] declaredFields = getClass().getDeclaredFields();
            int i = 0;
            while (i < declaredFields.length) {
                try {
                    Field field = declaredFields[i];
                    Class type = field.getType();
                    if (type.isEnum()) {
                        String cls = type.toString();
                        if (cls.equals("class com.ixaexvsbscmhkbbddjlq.AdNavigationStringEnum")) {
                            field.set(this, AdNavigationStringEnum.fromString(parcel.readString()));
                        } else if (cls.equals("class com.ixaexvsbscmhkbbddjlq.AdTransitionStringEnum")) {
                            field.set(this, AdTransitionStringEnum.fromString(parcel.readString()));
                        }
                    } else if (!(field.get(this) instanceof Creator)) {
                        field.set(this, parcel.readValue(null));
                    }
                    i++;
                } catch (Exception e) {
                    AdLog.printStackTrace(AdController.LB_LOG, e);
                    return;
                } catch (Exception e2) {
                    AdLog.printStackTrace(AdController.LB_LOG, e2);
                    return;
                }
            }
        }

        public int describeContents() {
            return 0;
        }

        public void writeToParcel(Parcel parcel, int i) {
            Field[] declaredFields = getClass().getDeclaredFields();
            int i2 = 0;
            while (i2 < declaredFields.length) {
                try {
                    Field field = declaredFields[i2];
                    Class type = field.getType();
                    if (type.isEnum()) {
                        String cls = type.toString();
                        if (cls.equals("class com.ixaexvsbscmhkbbddjlq.AdNavigationStringEnum")) {
                            parcel.writeString(((AdNavigationStringEnum) field.get(this)).getText());
                        } else if (cls.equals("class com.ixaexvsbscmhkbbddjlq.AdTransitionStringEnum")) {
                            parcel.writeString(((AdTransitionStringEnum) field.get(this)).getText());
                        }
                    } else {
                        Object obj = field.get(this);
                        if (!(obj instanceof Creator)) {
                            parcel.writeValue(obj);
                        }
                    }
                    i2++;
                } catch (Exception e) {
                    AdLog.printStackTrace(AdController.LB_LOG, e);
                    return;
                } catch (Exception e2) {
                    AdLog.printStackTrace(AdController.LB_LOG, e2);
                    return;
                }
            }
        }
    }

    public class Dimensions extends ReflectedParcelable {
        public static final Creator CREATOR = new C0088D();
        public int height;
        public int width;
        public int f282x;
        public int f283y;

        public Dimensions() {
            this.f282x = -1;
            this.f283y = -1;
            this.width = -1;
            this.height = -1;
        }

        protected Dimensions(Parcel parcel) {
            super(parcel);
        }
    }

    public class PlayerProperties extends ReflectedParcelable {
        public static final Creator CREATOR = new C0091G();
        public boolean audioMuted;
        public boolean autoPlay;
        public boolean doLoop;
        public boolean inline;
        public boolean showControl;
        public String startStyle;
        public String stopStyle;

        public PlayerProperties() {
            this.showControl = true;
            this.autoPlay = true;
            this.audioMuted = false;
            this.doLoop = false;
            String str = AdController.STYLE_NORMAL;
            this.stopStyle = str;
            this.startStyle = str;
            this.inline = false;
        }

        public PlayerProperties(Parcel parcel) {
            super(parcel);
        }

        public boolean doLoop() {
            return this.doLoop;
        }

        public boolean doMute() {
            return this.audioMuted;
        }

        public boolean exitOnComplete() {
            return this.stopStyle.equalsIgnoreCase(AdController.EXIT);
        }

        public boolean isAutoPlay() {
            return this.autoPlay;
        }

        public boolean isFullScreen() {
            return this.startStyle.equalsIgnoreCase(AdController.FULL_SCREEN);
        }

        public void muteAudio() {
            this.audioMuted = true;
        }

        public void setProperties(boolean z, boolean z2, boolean z3, boolean z4, boolean z5, String str, String str2) {
            this.autoPlay = z2;
            this.showControl = z3;
            this.doLoop = z5;
            this.audioMuted = z;
            this.startStyle = str;
            this.stopStyle = str2;
            this.inline = z4;
        }

        public void setStopStyle(String str) {
            this.stopStyle = str;
        }

        public boolean showControl() {
            return this.showControl;
        }
    }

    public class Properties extends ReflectedParcelable {
        public static final Creator CREATOR = new C0093I();
        public int backgroundColor;
        public float backgroundOpacity;
        public boolean useBackground;

        public Properties() {
            this.useBackground = false;
            this.backgroundColor = 0;
            this.backgroundOpacity = 0.0f;
        }

        protected Properties(Parcel parcel) {
            super(parcel);
        }
    }

    public AdController(Activity activity, String str) {
        this(activity, str, new RelativeLayout(activity));
    }

    public AdController(Activity activity, String str, WebView webView) {
        this.f58j = false;
        this.f59k = false;
        this.f60l = false;
        this.f61m = false;
        this.f62n = false;
        this.f64p = false;
        this.f26D = 0;
        this.f29G = true;
        this.f32J = 0;
        this.f35M = false;
        this.f36N = false;
        this.f37O = 0;
        this.f38P = 0;
        this.f39Q = 0;
        this.f40R = false;
        this.ab = false;
        this.ac = false;
        this.ad = false;
        this.ag = null;
        this.aj = false;
        this.ak = null;
        this.am = null;
        this.ao = false;
        this.ap = false;
        this.aq = null;
        this.ar = true;
        this.as = false;
        this.at = new C0086B(this, true);
        this.f51c = activity;
        this.f68t = str;
        this.f54f = webView;
        this.f65q = new RelativeLayout(this.f51c);
        Editor edit = activity.getSharedPreferences("Preference", 0).edit();
        edit.putString("sectionidMed", "");
        edit.putString("sectionidLrg", "");
        edit.putString("sectionidXLrg", "");
        edit.commit();
    }

    public AdController(Activity activity, String str, RelativeLayout relativeLayout) {
        this.f58j = false;
        this.f59k = false;
        this.f60l = false;
        this.f61m = false;
        this.f62n = false;
        this.f64p = false;
        this.f26D = 0;
        this.f29G = true;
        this.f32J = 0;
        this.f35M = false;
        this.f36N = false;
        this.f37O = 0;
        this.f38P = 0;
        this.f39Q = 0;
        this.f40R = false;
        this.ab = false;
        this.ac = false;
        this.ad = false;
        this.ag = null;
        this.aj = false;
        this.ak = null;
        this.am = null;
        this.ao = false;
        this.ap = false;
        this.aq = null;
        this.ar = true;
        this.as = false;
        this.at = new C0086B(this, true);
        this.f51c = activity;
        this.f68t = str;
        if (relativeLayout == null) {
            relativeLayout = new RelativeLayout(activity);
        }
        this.f65q = relativeLayout;
        this.f54f = null;
        Editor edit = activity.getSharedPreferences("Preference", 0).edit();
        edit.putString("sectionidMed", "");
        edit.putString("sectionidLrg", "");
        edit.putString("sectionidXLrg", "");
        edit.commit();
    }

    public AdController(Activity activity, String str, AdAudioListener adAudioListener) {
        this(activity, str, new RelativeLayout(activity));
        this.an = adAudioListener;
        Editor edit = activity.getSharedPreferences("Preference", 0).edit();
        edit.putString("sectionidMed", "");
        edit.putString("sectionidLrg", "");
        edit.putString("sectionidXLrg", "");
        edit.commit();
    }

    public AdController(Activity activity, String str, AdListener adListener) {
        this(activity, str, new RelativeLayout(activity));
        this.ak = adListener;
        Editor edit = activity.getSharedPreferences("Preference", 0).edit();
        edit.putString("sectionidMed", "");
        edit.putString("sectionidLrg", "");
        edit.putString("sectionidXLrg", "");
        edit.commit();
    }

    public AdController(Activity activity, String str, String str2, String str3, String str4) {
        this(activity, str, new RelativeLayout(activity));
        Editor edit = activity.getSharedPreferences("Preference", 0).edit();
        edit.putString("sectionidMed", str2);
        edit.putString("sectionidLrg", str3);
        edit.putString("sectionidXLrg", str4);
        edit.commit();
    }

    public AdController(Activity activity, String str, String str2, String str3, String str4, AdListener adListener) {
        this(activity, str, new RelativeLayout(activity));
        Editor edit = activity.getSharedPreferences("Preference", 0).edit();
        edit.putString("sectionidMed", str2);
        edit.putString("sectionidLrg", str3);
        edit.putString("sectionidXLrg", str4);
        edit.commit();
        this.ak = adListener;
    }

    public AdController(Context context, String str) {
        this.f58j = false;
        this.f59k = false;
        this.f60l = false;
        this.f61m = false;
        this.f62n = false;
        this.f64p = false;
        this.f26D = 0;
        this.f29G = true;
        this.f32J = 0;
        this.f35M = false;
        this.f36N = false;
        this.f37O = 0;
        this.f38P = 0;
        this.f39Q = 0;
        this.f40R = false;
        this.ab = false;
        this.ac = false;
        this.ad = false;
        this.ag = null;
        this.aj = false;
        this.ak = null;
        this.am = null;
        this.ao = false;
        this.ap = false;
        this.aq = null;
        this.ar = true;
        this.as = false;
        this.at = new C0086B(this, true);
        this.f49a = context;
        this.f68t = str;
        Editor edit = context.getSharedPreferences("Preference", 0).edit();
        edit.putString("sectionidMed", "");
        edit.putString("sectionidLrg", "");
        edit.putString("sectionidXLrg", "");
        edit.commit();
    }

    public AdController(Context context, String str, AdNotificationListener adNotificationListener) {
        this(context, str);
        this.au = adNotificationListener;
    }

    public AdController(AdView adView, Context context) {
        this.f58j = false;
        this.f59k = false;
        this.f60l = false;
        this.f61m = false;
        this.f62n = false;
        this.f64p = false;
        this.f26D = 0;
        this.f29G = true;
        this.f32J = 0;
        this.f35M = false;
        this.f36N = false;
        this.f37O = 0;
        this.f38P = 0;
        this.f39Q = 0;
        this.f40R = false;
        this.ab = false;
        this.ac = false;
        this.ad = false;
        this.ag = null;
        this.aj = false;
        this.ak = null;
        this.am = null;
        this.ao = false;
        this.ap = false;
        this.aq = null;
        this.ar = true;
        this.as = false;
        this.at = new C0086B(this, true);
        this.f50b = adView;
        this.f49a = context;
    }

    private Animation m35a(String str) {
        Animation translateAnimation;
        Object obj = null;
        Object obj2 = 1;
        float f = 0.0f;
        try {
            float f2;
            int i = this.f57i.getInt("windowy");
            int i2 = this.f57i.getInt("windowwidth");
            int i3 = this.f57i.getInt("windowx");
            if (str.equals("slideleft")) {
                f2 = (float) (0 - i2);
            } else if (str.equals("slideright")) {
                f2 = (float) (i2 + i3);
            } else if (str.equals("slidedown")) {
                f2 = 0.0f;
                f = (float) (0 - i);
            } else if (str.equals("slideup")) {
                f2 = 0.0f;
                f = (float) i;
            } else if (str.equals("slidetopleft")) {
                f2 = (float) (0 - i2);
                f = (float) (0 - i);
            } else if (str.equals("slidetopright")) {
                f2 = (float) (i3 + i2);
                f = (float) (0 - i);
            } else if (str.equals("slidebottomleft")) {
                f2 = (float) (0 - i2);
                f = (float) i;
            } else if (str.equals("slidebottomright")) {
                f2 = (float) (i3 + i2);
                f = (float) i;
            } else if (str.equals("fade")) {
                f2 = 0.0f;
                int i4 = 1;
                obj2 = null;
            } else {
                obj2 = null;
                f2 = 0.0f;
            }
            if (obj2 != null) {
                translateAnimation = new TranslateAnimation(f2, 0.0f, f, 0.0f);
                try {
                    translateAnimation.setDuration(1000);
                    return translateAnimation;
                } catch (Exception e) {
                    return translateAnimation;
                }
            } else if (obj == null) {
                return null;
            } else {
                translateAnimation = new ScaleAnimation(0.0f, 1.0f, 0.0f, 1.0f);
                translateAnimation.setDuration(1000);
                return translateAnimation;
            }
        } catch (Exception e2) {
            return null;
        }
    }

    protected static Object m37a(JSONObject jSONObject, Class cls) {
        Field[] declaredFields = cls.getDeclaredFields();
        Object newInstance = cls.newInstance();
        int i = 0;
        while (i < declaredFields.length) {
            Field field = declaredFields[i];
            String replace = field.getName().replace('_', '-');
            String obj = field.getType().toString();
            try {
                if (obj.equals("int")) {
                    int intValue;
                    replace = jSONObject.getString(replace).toLowerCase();
                    if (replace.startsWith("#")) {
                        try {
                            intValue = replace.startsWith("#0x") ? Integer.decode(replace.substring(1)).intValue() : Integer.parseInt(replace.substring(1), 16);
                        } catch (Exception e) {
                            AdLog.printStackTrace(LB_LOG, e);
                            intValue = -1;
                        }
                    } else {
                        intValue = Integer.parseInt(replace);
                    }
                    field.set(newInstance, Integer.valueOf(intValue));
                    i++;
                } else {
                    if (obj.equals("class java.lang.String")) {
                        field.set(newInstance, jSONObject.getString(replace));
                    } else if (obj.equals("boolean")) {
                        field.set(newInstance, Boolean.valueOf(jSONObject.getBoolean(replace)));
                    } else if (obj.equals("float")) {
                        field.set(newInstance, Float.valueOf(Float.parseFloat(jSONObject.getString(replace))));
                    } else if (obj.equals("class com.ixaexvsbscmhkbbddjlq.AdNavigationStringEnum")) {
                        field.set(newInstance, AdNavigationStringEnum.fromString(jSONObject.getString(replace)));
                    } else if (obj.equals("class com.ixaexvsbscmhkbbddjlq.AdTransitionStringEnum")) {
                        field.set(newInstance, AdTransitionStringEnum.fromString(jSONObject.getString(replace)));
                    }
                    i++;
                }
            } catch (Exception e2) {
                AdLog.printStackTrace(LB_LOG, e2);
            }
        }
        return newInstance;
    }

    private void m38a() {
        if (this.f29G && adShowStatus().equals(IMraid.STATE_HIDDEN)) {
            AdLog.m106d(LB_LOG, "Ad paused, will not show");
            if (this.ak != null) {
                try {
                    AdLog.m108i(LB_LOG, "onAdPaused triggered");
                    this.ak.onAdPaused();
                    return;
                } catch (Exception e) {
                    AdLog.m108i(LB_LOG, "Error while calling onAdPaused");
                    AdLog.printStackTrace(LB_LOG, e);
                    return;
                }
            }
            return;
        }
        int i;
        AdLog.m108i(LB_LOG, "initializing...");
        if (this.ag != null) {
            AdLog.m108i(LB_LOG, "AdTask status - " + this.ag.getStatus());
            i = this.ag.getStatus() == Status.FINISHED ? 1 : 0;
        } else {
            i = 1;
        }
        if (i != 0) {
            String str = "ad";
            if (this.ao) {
                str = "audio";
            }
            AdLog.m108i(LB_LOG, "Going to make request..." + str);
            this.ag = new AdTask(this, this.f51c, this.f68t, this.ao ? "audio" : "ad");
            this.ag.setSubId(this.f30H);
            this.ag.setTokens(this.f31I);
            this.ag.setUseLocation(this.f61m);
            this.ag.execute(new String[]{""});
            return;
        }
        AdLog.m108i(LB_LOG, "No request to be made - Request in progress");
    }

    static /* synthetic */ void m39a(AdController adController, View view) {
        view.setVisibility(8);
        adController.f65q.removeView(adController.al);
        adController.f65q.removeView(adController.f69u);
        adController.f65q.removeView(adController.f70v);
        adController.f65q.removeView(adController.f71w);
        adController.f65q.removeView(adController.f72x);
        adController.f65q.removeView(adController.f73y);
        adController.f65q.removeView(adController.f74z);
        adController.f65q.removeView(adController.f23A);
        adController.f65q.removeView(null);
        adController.f65q.removeView(adController.f24B);
        adController.f65q.removeView(adController.f53e);
        try {
            ((ViewGroup) adController.f65q.getParent()).removeView(adController.f65q);
        } catch (Exception e) {
            AdLog.printStackTrace(LB_LOG, e);
            AdLog.m107e(LB_LOG, "Error when trying to remove layout - " + e.getMessage());
        }
        if (adController.ak != null && !adController.f58j) {
            try {
                AdLog.m108i(LB_LOG, "onAdClosed triggered");
                adController.ak.onAdClosed();
            } catch (Exception e2) {
                AdLog.m107e(LB_LOG, "error when onAdClosed triggered");
                AdLog.printStackTrace(LB_LOG, e2);
            }
        }
    }

    private boolean m40a(int i, CharSequence charSequence, CharSequence charSequence2, CharSequence charSequence3, NotificationManager notificationManager, PendingIntent pendingIntent, RemoteViews remoteViews) {
        AdLog.m106d(LB_LOG, "triggerNotification Called");
        try {
            Notification notification = new Notification(i, charSequence, System.currentTimeMillis());
            notification.flags |= 16;
            if (remoteViews != null) {
                notification.contentIntent = pendingIntent;
                notification.contentView = remoteViews;
            } else {
                notification.setLatestEventInfo(this.f49a, charSequence2, charSequence3, pendingIntent);
            }
            notificationManager.notify(1001, notification);
            return true;
        } catch (Exception e) {
            return false;
        } finally {
            AdWakeLock.release();
        }
    }

    /* JADX WARNING: inconsistent code. */
    /* Code decompiled incorrectly, please refer to instructions dump. */
    private void m46b() {
        /*
        r20 = this;
        r2 = "LBAdController";
        r3 = "displayAd called";
        com.ixaexvsbscmhkbbddjlq.AdLog.m106d(r2, r3);
        r0 = r20;
        r2 = r0.f57i;
        if (r2 != 0) goto L_0x0015;
    L_0x000d:
        r2 = "LBAdController";
        r3 = "Results are null - no ad will be loaded";
        com.ixaexvsbscmhkbbddjlq.AdLog.m107e(r2, r3);
    L_0x0014:
        return;
    L_0x0015:
        r0 = r20;
        r2 = r0.aq;
        if (r2 != 0) goto L_0x0023;
    L_0x001b:
        r0 = r20;
        r2 = r0.f68t;
        r0 = r20;
        r0.aq = r2;
    L_0x0023:
        r2 = new java.lang.StringBuilder;	 Catch:{ Exception -> 0x08a1 }
        r2.<init>();	 Catch:{ Exception -> 0x08a1 }
        r0 = r20;
        r3 = r0.f57i;	 Catch:{ Exception -> 0x08a1 }
        r4 = "adurl";
        r3 = r3.getString(r4);	 Catch:{ Exception -> 0x08a1 }
        r2 = r2.append(r3);	 Catch:{ Exception -> 0x08a1 }
        r0 = r20;
        r3 = r0.aq;	 Catch:{ Exception -> 0x08a1 }
        r2 = r2.append(r3);	 Catch:{ Exception -> 0x08a1 }
        r2 = r2.toString();	 Catch:{ Exception -> 0x08a1 }
        r0 = r20;
        r0.f55g = r2;	 Catch:{ Exception -> 0x08a1 }
    L_0x0046:
        r2 = 0;
        r0 = r20;
        r3 = r0.f57i;	 Catch:{ Exception -> 0x089e }
        r4 = "adhtml";
        r2 = r3.getString(r4);	 Catch:{ Exception -> 0x089e }
    L_0x0051:
        r0 = r20;
        r3 = r0.al;
        if (r3 == 0) goto L_0x0097;
    L_0x0057:
        r0 = r20;
        r3 = r0.ar;
        if (r3 != 0) goto L_0x0063;
    L_0x005d:
        r0 = r20;
        r3 = r0.f60l;
        if (r3 == 0) goto L_0x0097;
    L_0x0063:
        r0 = r20;
        r3 = r0.f55g;
        if (r3 == 0) goto L_0x074a;
    L_0x0069:
        r0 = r20;
        r3 = r0.f55g;
        r4 = "";
        r3 = r3.equals(r4);
        if (r3 != 0) goto L_0x074a;
    L_0x0075:
        r2 = "LBAdController";
        r3 = "WebView is not null - going to load data here";
        com.ixaexvsbscmhkbbddjlq.AdLog.m106d(r2, r3);
        r0 = r20;
        r2 = r0.al;
        r0 = r20;
        r3 = r0.f55g;
        r2.setLoadingURL(r3);
        r0 = r20;
        r2 = r0.al;
        r0 = r20;
        r3 = r0.f55g;
        r2.loadUrl(r3);
        r2 = 1;
        r0 = r20;
        r0.f56h = r2;
    L_0x0097:
        r0 = r20;
        r2 = r0.ar;
        if (r2 != 0) goto L_0x0014;
    L_0x009d:
        r0 = r20;
        r2 = r0.f57i;	 Catch:{ Exception -> 0x00d1 }
        r3 = "useclickwindow";
        r2 = r2.isNull(r3);	 Catch:{ Exception -> 0x00d1 }
        if (r2 != 0) goto L_0x00ef;
    L_0x00a9:
        r0 = r20;
        r2 = r0.f57i;	 Catch:{ Exception -> 0x00d1 }
        r3 = "useclickwindow";
        r2 = r2.getString(r3);	 Catch:{ Exception -> 0x00d1 }
        r3 = "1";
        r2 = r2.equals(r3);	 Catch:{ Exception -> 0x00d1 }
        if (r2 == 0) goto L_0x00ef;
    L_0x00bb:
        r2 = 0;
        r0 = r20;
        r0.f56h = r2;	 Catch:{ Exception -> 0x00d1 }
        r2 = 0;
        r0 = r20;
        r0.f60l = r2;	 Catch:{ Exception -> 0x00d1 }
        r2 = "LBAdController";
        r3 = "Going to use click window - cancel out of here...";
        com.ixaexvsbscmhkbbddjlq.AdLog.m108i(r2, r3);	 Catch:{ Exception -> 0x00d1 }
        r20.m50c();	 Catch:{ Exception -> 0x00d1 }
        goto L_0x0014;
    L_0x00d1:
        r2 = move-exception;
        r3 = "LBAdController";
        com.ixaexvsbscmhkbbddjlq.AdLog.printStackTrace(r3, r2);
        r3 = "LBAdController";
        r4 = new java.lang.StringBuilder;
        r5 = "Exception when using ClickWindow - ";
        r4.<init>(r5);
        r2 = r2.getMessage();
        r2 = r4.append(r2);
        r2 = r2.toString();
        com.ixaexvsbscmhkbbddjlq.AdLog.m107e(r3, r2);
    L_0x00ef:
        r0 = r20;
        r2 = r0.f59k;
        if (r2 != 0) goto L_0x0014;
    L_0x00f5:
        r2 = "LBAdController";
        r3 = "Going to load the Ad now...";
        com.ixaexvsbscmhkbbddjlq.AdLog.m106d(r2, r3);
        r2 = 1;
        r0 = r20;
        r0.f59k = r2;
        r2 = 0;
        r0 = r20;
        r0.f60l = r2;
        r2 = 1;
        r0 = r20;
        r0.f56h = r2;	 Catch:{ JSONException -> 0x072c, Exception -> 0x077d }
        r0 = r20;
        r2 = r0.f57i;	 Catch:{ JSONException -> 0x072c, Exception -> 0x077d }
        r3 = "show";
        r2 = r2.get(r3);	 Catch:{ JSONException -> 0x072c, Exception -> 0x077d }
        r3 = "1";
        r2 = r2.equals(r3);	 Catch:{ JSONException -> 0x072c, Exception -> 0x077d }
        if (r2 == 0) goto L_0x0852;
    L_0x011d:
        r20.m60g();	 Catch:{ JSONException -> 0x072c, Exception -> 0x077d }
        r0 = r20;
        r2 = r0.f58j;	 Catch:{ JSONException -> 0x072c, Exception -> 0x077d }
        if (r2 != 0) goto L_0x0848;
    L_0x0126:
        r0 = r20;
        r2 = r0.f65q;	 Catch:{ Exception -> 0x0761, JSONException -> 0x072c }
        r0 = r20;
        r3 = r0.al;	 Catch:{ Exception -> 0x0761, JSONException -> 0x072c }
        r2.removeView(r3);	 Catch:{ Exception -> 0x0761, JSONException -> 0x072c }
    L_0x0131:
        r0 = r20;
        r2 = r0.f65q;	 Catch:{ Exception -> 0x076f, JSONException -> 0x072c }
        r0 = r20;
        r3 = r0.f69u;	 Catch:{ Exception -> 0x076f, JSONException -> 0x072c }
        r2.removeView(r3);	 Catch:{ Exception -> 0x076f, JSONException -> 0x072c }
        r0 = r20;
        r2 = r0.f65q;	 Catch:{ Exception -> 0x076f, JSONException -> 0x072c }
        r0 = r20;
        r3 = r0.f70v;	 Catch:{ Exception -> 0x076f, JSONException -> 0x072c }
        r2.removeView(r3);	 Catch:{ Exception -> 0x076f, JSONException -> 0x072c }
        r0 = r20;
        r2 = r0.f65q;	 Catch:{ Exception -> 0x076f, JSONException -> 0x072c }
        r0 = r20;
        r3 = r0.f71w;	 Catch:{ Exception -> 0x076f, JSONException -> 0x072c }
        r2.removeView(r3);	 Catch:{ Exception -> 0x076f, JSONException -> 0x072c }
        r0 = r20;
        r2 = r0.f65q;	 Catch:{ Exception -> 0x076f, JSONException -> 0x072c }
        r0 = r20;
        r3 = r0.f72x;	 Catch:{ Exception -> 0x076f, JSONException -> 0x072c }
        r2.removeView(r3);	 Catch:{ Exception -> 0x076f, JSONException -> 0x072c }
        r0 = r20;
        r2 = r0.f65q;	 Catch:{ Exception -> 0x076f, JSONException -> 0x072c }
        r0 = r20;
        r3 = r0.f73y;	 Catch:{ Exception -> 0x076f, JSONException -> 0x072c }
        r2.removeView(r3);	 Catch:{ Exception -> 0x076f, JSONException -> 0x072c }
        r0 = r20;
        r2 = r0.f65q;	 Catch:{ Exception -> 0x076f, JSONException -> 0x072c }
        r0 = r20;
        r3 = r0.f74z;	 Catch:{ Exception -> 0x076f, JSONException -> 0x072c }
        r2.removeView(r3);	 Catch:{ Exception -> 0x076f, JSONException -> 0x072c }
        r0 = r20;
        r2 = r0.f65q;	 Catch:{ Exception -> 0x076f, JSONException -> 0x072c }
        r0 = r20;
        r3 = r0.f23A;	 Catch:{ Exception -> 0x076f, JSONException -> 0x072c }
        r2.removeView(r3);	 Catch:{ Exception -> 0x076f, JSONException -> 0x072c }
        r0 = r20;
        r2 = r0.f65q;	 Catch:{ Exception -> 0x076f, JSONException -> 0x072c }
        r0 = r20;
        r3 = r0.f24B;	 Catch:{ Exception -> 0x076f, JSONException -> 0x072c }
        r2.removeView(r3);	 Catch:{ Exception -> 0x076f, JSONException -> 0x072c }
        r0 = r20;
        r2 = r0.f65q;	 Catch:{ Exception -> 0x076f, JSONException -> 0x072c }
        r3 = 0;
        r2.removeView(r3);	 Catch:{ Exception -> 0x076f, JSONException -> 0x072c }
        r0 = r20;
        r2 = r0.f65q;	 Catch:{ Exception -> 0x076f, JSONException -> 0x072c }
        r0 = r20;
        r3 = r0.f53e;	 Catch:{ Exception -> 0x076f, JSONException -> 0x072c }
        r2.removeView(r3);	 Catch:{ Exception -> 0x076f, JSONException -> 0x072c }
        r0 = r20;
        r2 = r0.f25C;	 Catch:{ Exception -> 0x076f, JSONException -> 0x072c }
        if (r2 == 0) goto L_0x01a9;
    L_0x01a2:
        r0 = r20;
        r2 = r0.f65q;	 Catch:{ Exception -> 0x076f, JSONException -> 0x072c }
        r2.removeAllViews();	 Catch:{ Exception -> 0x076f, JSONException -> 0x072c }
    L_0x01a9:
        r2 = new android.view.View;	 Catch:{ Exception -> 0x089b, JSONException -> 0x072c }
        r0 = r20;
        r3 = r0.f51c;	 Catch:{ Exception -> 0x089b, JSONException -> 0x072c }
        r2.<init>(r3);	 Catch:{ Exception -> 0x089b, JSONException -> 0x072c }
        r0 = r20;
        r0.f53e = r2;	 Catch:{ Exception -> 0x089b, JSONException -> 0x072c }
        r0 = r20;
        r2 = r0.f53e;	 Catch:{ Exception -> 0x089b, JSONException -> 0x072c }
        r3 = -1;
        r2.setMinimumHeight(r3);	 Catch:{ Exception -> 0x089b, JSONException -> 0x072c }
        r0 = r20;
        r2 = r0.f53e;	 Catch:{ Exception -> 0x089b, JSONException -> 0x072c }
        r3 = -1;
        r2.setMinimumWidth(r3);	 Catch:{ Exception -> 0x089b, JSONException -> 0x072c }
        r0 = r20;
        r2 = r0.f53e;	 Catch:{ Exception -> 0x089b, JSONException -> 0x072c }
        r3 = -16777216; // 0xffffffffff000000 float:-1.7014118E38 double:NaN;
        r2.setBackgroundColor(r3);	 Catch:{ Exception -> 0x089b, JSONException -> 0x072c }
        r0 = r20;
        r2 = r0.f57i;	 Catch:{ Exception -> 0x089b, JSONException -> 0x072c }
        r3 = "maskalpha";
        r2 = r2.getDouble(r3);	 Catch:{ Exception -> 0x089b, JSONException -> 0x072c }
        r4 = 4643176031446892544; // 0x406fe00000000000 float:0.0 double:255.0;
        r2 = r2 * r4;
        r0 = r20;
        r4 = r0.f53e;	 Catch:{ Exception -> 0x089b, JSONException -> 0x072c }
        r4 = r4.getBackground();	 Catch:{ Exception -> 0x089b, JSONException -> 0x072c }
        r2 = (int) r2;	 Catch:{ Exception -> 0x089b, JSONException -> 0x072c }
        r4.setAlpha(r2);	 Catch:{ Exception -> 0x089b, JSONException -> 0x072c }
        r0 = r20;
        r2 = r0.f53e;	 Catch:{ Exception -> 0x089b, JSONException -> 0x072c }
        r3 = new com.ixaexvsbscmhkbbddjlq.v;	 Catch:{ Exception -> 0x089b, JSONException -> 0x072c }
        r0 = r20;
        r3.<init>(r0);	 Catch:{ Exception -> 0x089b, JSONException -> 0x072c }
        r2.setOnClickListener(r3);	 Catch:{ Exception -> 0x089b, JSONException -> 0x072c }
    L_0x01f9:
        r2 = new android.view.ViewGroup$MarginLayoutParams;	 Catch:{ JSONException -> 0x072c, Exception -> 0x077d }
        r3 = -1;
        r4 = -1;
        r2.<init>(r3, r4);	 Catch:{ JSONException -> 0x072c, Exception -> 0x077d }
        r3 = 0;
        r4 = 0;
        r5 = 0;
        r6 = 0;
        r2.setMargins(r3, r4, r5, r6);	 Catch:{ JSONException -> 0x072c, Exception -> 0x077d }
        r5 = new android.widget.RelativeLayout$LayoutParams;	 Catch:{ JSONException -> 0x072c, Exception -> 0x077d }
        r5.<init>(r2);	 Catch:{ JSONException -> 0x072c, Exception -> 0x077d }
        r0 = r20;
        r2 = r0.f57i;	 Catch:{ JSONException -> 0x072c, Exception -> 0x077d }
        r3 = "windowy";
        r2 = r2.getInt(r3);	 Catch:{ JSONException -> 0x072c, Exception -> 0x077d }
        r3 = "Middle";
        r0 = r20;
        r4 = r0.f57i;	 Catch:{ Exception -> 0x0898, JSONException -> 0x072c }
        r6 = "windowdockingy";
        r3 = r4.getString(r6);	 Catch:{ Exception -> 0x0898, JSONException -> 0x072c }
    L_0x0222:
        r0 = r20;
        r4 = r0.f57i;	 Catch:{ JSONException -> 0x072c, Exception -> 0x077d }
        r6 = "titlevisible";
        r4 = r4.getInt(r6);	 Catch:{ JSONException -> 0x072c, Exception -> 0x077d }
        if (r4 != 0) goto L_0x02a7;
    L_0x022e:
        r0 = r20;
        r4 = r0.al;	 Catch:{ JSONException -> 0x072c, Exception -> 0x077d }
        if (r4 == 0) goto L_0x024e;
    L_0x0234:
        r0 = r20;
        r4 = r0.f57i;	 Catch:{ Exception -> 0x0772, JSONException -> 0x072c }
        r6 = "windowtransparency";
        r4 = r4.getString(r6);	 Catch:{ Exception -> 0x0772, JSONException -> 0x072c }
        r6 = "1";
        r4 = r4.equals(r6);	 Catch:{ Exception -> 0x0772, JSONException -> 0x072c }
        if (r4 == 0) goto L_0x024e;
    L_0x0246:
        r0 = r20;
        r4 = r0.al;	 Catch:{ Exception -> 0x0772, JSONException -> 0x072c }
        r6 = 0;
        r4.setBackgroundColor(r6);	 Catch:{ Exception -> 0x0772, JSONException -> 0x072c }
    L_0x024e:
        r0 = r20;
        r4 = r0.f50b;	 Catch:{ JSONException -> 0x072c, Exception -> 0x077d }
        if (r4 == 0) goto L_0x026e;
    L_0x0254:
        r0 = r20;
        r4 = r0.f57i;	 Catch:{ Exception -> 0x07a0, JSONException -> 0x072c }
        r6 = "windowtransparency";
        r4 = r4.getString(r6);	 Catch:{ Exception -> 0x07a0, JSONException -> 0x072c }
        r6 = "1";
        r4 = r4.equals(r6);	 Catch:{ Exception -> 0x07a0, JSONException -> 0x072c }
        if (r4 == 0) goto L_0x026e;
    L_0x0266:
        r0 = r20;
        r4 = r0.f50b;	 Catch:{ Exception -> 0x07a0, JSONException -> 0x072c }
        r6 = 0;
        r4.setBackgroundColor(r6);	 Catch:{ Exception -> 0x07a0, JSONException -> 0x072c }
    L_0x026e:
        r0 = r20;
        r4 = r0.f26D;	 Catch:{ JSONException -> 0x072c, Exception -> 0x077d }
        if (r4 <= 0) goto L_0x02a7;
    L_0x0274:
        r4 = "Middle";
        r4 = r3.equals(r4);	 Catch:{ JSONException -> 0x072c, Exception -> 0x077d }
        if (r4 != 0) goto L_0x02a7;
    L_0x027c:
        r4 = "LBAdController";
        r6 = new java.lang.StringBuilder;	 Catch:{ JSONException -> 0x072c, Exception -> 0x077d }
        r7 = "Additional Docking is set, adjusting banner by ";
        r6.<init>(r7);	 Catch:{ JSONException -> 0x072c, Exception -> 0x077d }
        r0 = r20;
        r7 = r0.f26D;	 Catch:{ JSONException -> 0x072c, Exception -> 0x077d }
        r6 = r6.append(r7);	 Catch:{ JSONException -> 0x072c, Exception -> 0x077d }
        r7 = "px";
        r6 = r6.append(r7);	 Catch:{ JSONException -> 0x072c, Exception -> 0x077d }
        r6 = r6.toString();	 Catch:{ JSONException -> 0x072c, Exception -> 0x077d }
        com.ixaexvsbscmhkbbddjlq.AdLog.m108i(r4, r6);	 Catch:{ JSONException -> 0x072c, Exception -> 0x077d }
        r4 = "Top";
        r4 = r3.equals(r4);	 Catch:{ JSONException -> 0x072c, Exception -> 0x077d }
        if (r4 == 0) goto L_0x07ab;
    L_0x02a2:
        r0 = r20;
        r3 = r0.f26D;	 Catch:{ JSONException -> 0x072c, Exception -> 0x077d }
        r2 = r2 + r3;
    L_0x02a7:
        r3 = new android.view.ViewGroup$MarginLayoutParams;	 Catch:{ JSONException -> 0x072c, Exception -> 0x077d }
        r0 = r20;
        r4 = r0.f57i;	 Catch:{ JSONException -> 0x072c, Exception -> 0x077d }
        r6 = "windowwidth";
        r4 = r4.getInt(r6);	 Catch:{ JSONException -> 0x072c, Exception -> 0x077d }
        r0 = r20;
        r6 = r0.f57i;	 Catch:{ JSONException -> 0x072c, Exception -> 0x077d }
        r7 = "windowheight";
        r6 = r6.getInt(r7);	 Catch:{ JSONException -> 0x072c, Exception -> 0x077d }
        r3.<init>(r4, r6);	 Catch:{ JSONException -> 0x072c, Exception -> 0x077d }
        r0 = r20;
        r4 = r0.f57i;	 Catch:{ JSONException -> 0x072c, Exception -> 0x077d }
        r6 = "windowx";
        r4 = r4.getInt(r6);	 Catch:{ JSONException -> 0x072c, Exception -> 0x077d }
        r6 = 0;
        r7 = 0;
        r3.setMargins(r4, r2, r6, r7);	 Catch:{ JSONException -> 0x072c, Exception -> 0x077d }
        r6 = new android.widget.RelativeLayout$LayoutParams;	 Catch:{ JSONException -> 0x072c, Exception -> 0x077d }
        r6.<init>(r3);	 Catch:{ JSONException -> 0x072c, Exception -> 0x077d }
        r0 = r20;
        r2 = r0.f57i;	 Catch:{ JSONException -> 0x072c, Exception -> 0x077d }
        r3 = "titlex";
        r7 = r2.getInt(r3);	 Catch:{ JSONException -> 0x072c, Exception -> 0x077d }
        r0 = r20;
        r2 = r0.f57i;	 Catch:{ JSONException -> 0x072c, Exception -> 0x077d }
        r3 = "titley";
        r8 = r2.getInt(r3);	 Catch:{ JSONException -> 0x072c, Exception -> 0x077d }
        r0 = r20;
        r2 = r0.f57i;	 Catch:{ JSONException -> 0x072c, Exception -> 0x077d }
        r3 = "titlewidth";
        r9 = r2.getInt(r3);	 Catch:{ JSONException -> 0x072c, Exception -> 0x077d }
        r0 = r20;
        r2 = r0.f57i;	 Catch:{ JSONException -> 0x072c, Exception -> 0x077d }
        r3 = "titleheight";
        r10 = r2.getInt(r3);	 Catch:{ JSONException -> 0x072c, Exception -> 0x077d }
        r2 = new android.view.ViewGroup$MarginLayoutParams;	 Catch:{ JSONException -> 0x072c, Exception -> 0x077d }
        r2.<init>(r9, r10);	 Catch:{ JSONException -> 0x072c, Exception -> 0x077d }
        r3 = 0;
        r4 = 0;
        r2.setMargins(r7, r8, r3, r4);	 Catch:{ JSONException -> 0x072c, Exception -> 0x077d }
        r11 = new android.widget.RelativeLayout$LayoutParams;	 Catch:{ JSONException -> 0x072c, Exception -> 0x077d }
        r11.<init>(r2);	 Catch:{ JSONException -> 0x072c, Exception -> 0x077d }
        r2 = new android.view.View;	 Catch:{ JSONException -> 0x072c, Exception -> 0x077d }
        r0 = r20;
        r3 = r0.f51c;	 Catch:{ JSONException -> 0x072c, Exception -> 0x077d }
        r2.<init>(r3);	 Catch:{ JSONException -> 0x072c, Exception -> 0x077d }
        r0 = r20;
        r0.f69u = r2;	 Catch:{ JSONException -> 0x072c, Exception -> 0x077d }
        r0 = r20;
        r2 = r0.f57i;	 Catch:{ JSONException -> 0x072c, Exception -> 0x077d }
        r3 = "titlecolor";
        r2 = r2.getString(r3);	 Catch:{ JSONException -> 0x072c, Exception -> 0x077d }
        r3 = "";
        r3 = r2.equals(r3);	 Catch:{ JSONException -> 0x072c, Exception -> 0x077d }
        if (r3 != 0) goto L_0x032c;
    L_0x032a:
        if (r2 != 0) goto L_0x08a7;
    L_0x032c:
        r2 = "#E6E6E6";
        r4 = r2;
    L_0x032f:
        r0 = r20;
        r2 = r0.f69u;	 Catch:{ JSONException -> 0x072c, Exception -> 0x077d }
        r3 = android.graphics.Color.parseColor(r4);	 Catch:{ JSONException -> 0x072c, Exception -> 0x077d }
        r2.setBackgroundColor(r3);	 Catch:{ JSONException -> 0x072c, Exception -> 0x077d }
        r2 = new android.widget.TextView;	 Catch:{ JSONException -> 0x072c, Exception -> 0x077d }
        r0 = r20;
        r3 = r0.f51c;	 Catch:{ JSONException -> 0x072c, Exception -> 0x077d }
        r2.<init>(r3);	 Catch:{ JSONException -> 0x072c, Exception -> 0x077d }
        r0 = r20;
        r0.f70v = r2;	 Catch:{ JSONException -> 0x072c, Exception -> 0x077d }
        r0 = r20;
        r2 = r0.f70v;	 Catch:{ JSONException -> 0x072c, Exception -> 0x077d }
        r0 = r20;
        r3 = r0.f57i;	 Catch:{ JSONException -> 0x072c, Exception -> 0x077d }
        r12 = "titletext";
        r3 = r3.getString(r12);	 Catch:{ JSONException -> 0x072c, Exception -> 0x077d }
        r2.setText(r3);	 Catch:{ JSONException -> 0x072c, Exception -> 0x077d }
        r0 = r20;
        r2 = r0.f57i;	 Catch:{ JSONException -> 0x072c, Exception -> 0x077d }
        r3 = "titletextcolor";
        r2 = r2.getString(r3);	 Catch:{ JSONException -> 0x072c, Exception -> 0x077d }
        r3 = "";
        r3 = r2.equals(r3);	 Catch:{ JSONException -> 0x072c, Exception -> 0x077d }
        if (r3 != 0) goto L_0x036c;
    L_0x036a:
        if (r2 != 0) goto L_0x08a4;
    L_0x036c:
        r2 = "#E6E6E6";
        r3 = r2;
    L_0x036f:
        r0 = r20;
        r2 = r0.f70v;	 Catch:{ JSONException -> 0x072c, Exception -> 0x077d }
        r12 = android.graphics.Color.parseColor(r3);	 Catch:{ JSONException -> 0x072c, Exception -> 0x077d }
        r2.setTextColor(r12);	 Catch:{ JSONException -> 0x072c, Exception -> 0x077d }
        r0 = r20;
        r2 = r0.f57i;	 Catch:{ JSONException -> 0x072c, Exception -> 0x077d }
        r12 = "titletextheight";
        r2 = r2.getInt(r12);	 Catch:{ JSONException -> 0x072c, Exception -> 0x077d }
        r12 = new android.view.ViewGroup$MarginLayoutParams;	 Catch:{ JSONException -> 0x072c, Exception -> 0x077d }
        r0 = r20;
        r13 = r0.f57i;	 Catch:{ JSONException -> 0x072c, Exception -> 0x077d }
        r14 = "titletextwidth";
        r13 = r13.getInt(r14);	 Catch:{ JSONException -> 0x072c, Exception -> 0x077d }
        r12.<init>(r13, r2);	 Catch:{ JSONException -> 0x072c, Exception -> 0x077d }
        r13 = r7 + 20;
        r2 = r10 - r2;
        r2 = r2 / 2;
        r2 = r2 + r8;
        r2 = r2 + 4;
        r14 = 0;
        r15 = 0;
        r12.setMargins(r13, r2, r14, r15);	 Catch:{ JSONException -> 0x072c, Exception -> 0x077d }
        r13 = new android.widget.RelativeLayout$LayoutParams;	 Catch:{ JSONException -> 0x072c, Exception -> 0x077d }
        r13.<init>(r12);	 Catch:{ JSONException -> 0x072c, Exception -> 0x077d }
        r0 = r20;
        r2 = r0.f57i;	 Catch:{ JSONException -> 0x072c, Exception -> 0x077d }
        r12 = "footerx";
        r12 = r2.getInt(r12);	 Catch:{ JSONException -> 0x072c, Exception -> 0x077d }
        r0 = r20;
        r2 = r0.f57i;	 Catch:{ JSONException -> 0x072c, Exception -> 0x077d }
        r14 = "footery";
        r14 = r2.getInt(r14);	 Catch:{ JSONException -> 0x072c, Exception -> 0x077d }
        r0 = r20;
        r2 = r0.f57i;	 Catch:{ JSONException -> 0x072c, Exception -> 0x077d }
        r15 = "footerheight";
        r15 = r2.getInt(r15);	 Catch:{ JSONException -> 0x072c, Exception -> 0x077d }
        r2 = new android.view.ViewGroup$MarginLayoutParams;	 Catch:{ JSONException -> 0x072c, Exception -> 0x077d }
        r0 = r20;
        r0 = r0.f57i;	 Catch:{ JSONException -> 0x072c, Exception -> 0x077d }
        r16 = r0;
        r17 = "footerwidth";
        r16 = r16.getInt(r17);	 Catch:{ JSONException -> 0x072c, Exception -> 0x077d }
        r0 = r16;
        r2.<init>(r0, r15);	 Catch:{ JSONException -> 0x072c, Exception -> 0x077d }
        r16 = 0;
        r17 = 0;
        r0 = r16;
        r1 = r17;
        r2.setMargins(r12, r14, r0, r1);	 Catch:{ JSONException -> 0x072c, Exception -> 0x077d }
        r16 = new android.widget.RelativeLayout$LayoutParams;	 Catch:{ JSONException -> 0x072c, Exception -> 0x077d }
        r0 = r16;
        r0.<init>(r2);	 Catch:{ JSONException -> 0x072c, Exception -> 0x077d }
        r2 = new android.view.View;	 Catch:{ JSONException -> 0x072c, Exception -> 0x077d }
        r0 = r20;
        r0 = r0.f51c;	 Catch:{ JSONException -> 0x072c, Exception -> 0x077d }
        r17 = r0;
        r0 = r17;
        r2.<init>(r0);	 Catch:{ JSONException -> 0x072c, Exception -> 0x077d }
        r0 = r20;
        r0.f71w = r2;	 Catch:{ JSONException -> 0x072c, Exception -> 0x077d }
        r0 = r20;
        r2 = r0.f57i;	 Catch:{ JSONException -> 0x072c, Exception -> 0x077d }
        r17 = "footercolor";
        r0 = r17;
        r2 = r2.getString(r0);	 Catch:{ JSONException -> 0x072c, Exception -> 0x077d }
        r17 = "";
        r0 = r17;
        r17 = r2.equals(r0);	 Catch:{ JSONException -> 0x072c, Exception -> 0x077d }
        if (r17 != 0) goto L_0x0412;
    L_0x0410:
        if (r2 != 0) goto L_0x0414;
    L_0x0412:
        r2 = "#E6E6E6";
    L_0x0414:
        r0 = r20;
        r0 = r0.f71w;	 Catch:{ JSONException -> 0x072c, Exception -> 0x077d }
        r17 = r0;
        r2 = android.graphics.Color.parseColor(r2);	 Catch:{ JSONException -> 0x072c, Exception -> 0x077d }
        r0 = r17;
        r0.setBackgroundColor(r2);	 Catch:{ JSONException -> 0x072c, Exception -> 0x077d }
        r2 = new android.widget.TextView;	 Catch:{ JSONException -> 0x072c, Exception -> 0x077d }
        r0 = r20;
        r0 = r0.f51c;	 Catch:{ JSONException -> 0x072c, Exception -> 0x077d }
        r17 = r0;
        r0 = r17;
        r2.<init>(r0);	 Catch:{ JSONException -> 0x072c, Exception -> 0x077d }
        r0 = r20;
        r0.f72x = r2;	 Catch:{ JSONException -> 0x072c, Exception -> 0x077d }
        r0 = r20;
        r2 = r0.f72x;	 Catch:{ JSONException -> 0x072c, Exception -> 0x077d }
        r0 = r20;
        r0 = r0.f57i;	 Catch:{ JSONException -> 0x072c, Exception -> 0x077d }
        r17 = r0;
        r18 = "footertext";
        r17 = r17.getString(r18);	 Catch:{ JSONException -> 0x072c, Exception -> 0x077d }
        r0 = r17;
        r2.setText(r0);	 Catch:{ JSONException -> 0x072c, Exception -> 0x077d }
        r0 = r20;
        r2 = r0.f72x;	 Catch:{ JSONException -> 0x072c, Exception -> 0x077d }
        r17 = 1092616192; // 0x41200000 float:10.0 double:5.398241246E-315;
        r0 = r17;
        r2.setTextSize(r0);	 Catch:{ JSONException -> 0x072c, Exception -> 0x077d }
        r0 = r20;
        r2 = r0.f57i;	 Catch:{ JSONException -> 0x072c, Exception -> 0x077d }
        r17 = "footertextheight";
        r0 = r17;
        r17 = r2.getInt(r0);	 Catch:{ JSONException -> 0x072c, Exception -> 0x077d }
        r0 = r20;
        r2 = r0.f57i;	 Catch:{ JSONException -> 0x072c, Exception -> 0x077d }
        r18 = "footertextcolor";
        r0 = r18;
        r2 = r2.getString(r0);	 Catch:{ JSONException -> 0x072c, Exception -> 0x077d }
        r18 = "";
        r0 = r18;
        r18 = r2.equals(r0);	 Catch:{ JSONException -> 0x072c, Exception -> 0x077d }
        if (r18 != 0) goto L_0x0478;
    L_0x0476:
        if (r2 != 0) goto L_0x047a;
    L_0x0478:
        r2 = "#E6E6E6";
    L_0x047a:
        r0 = r20;
        r0 = r0.f72x;	 Catch:{ JSONException -> 0x072c, Exception -> 0x077d }
        r18 = r0;
        r2 = android.graphics.Color.parseColor(r2);	 Catch:{ JSONException -> 0x072c, Exception -> 0x077d }
        r0 = r18;
        r0.setTextColor(r2);	 Catch:{ JSONException -> 0x072c, Exception -> 0x077d }
        r2 = new android.view.ViewGroup$MarginLayoutParams;	 Catch:{ JSONException -> 0x072c, Exception -> 0x077d }
        r0 = r20;
        r0 = r0.f57i;	 Catch:{ JSONException -> 0x072c, Exception -> 0x077d }
        r18 = r0;
        r19 = "footertextwidth";
        r18 = r18.getInt(r19);	 Catch:{ JSONException -> 0x072c, Exception -> 0x077d }
        r0 = r18;
        r1 = r17;
        r2.<init>(r0, r1);	 Catch:{ JSONException -> 0x072c, Exception -> 0x077d }
        r12 = r12 + 20;
        r15 = r15 - r17;
        r15 = r15 / 2;
        r14 = r14 + r15;
        r15 = 0;
        r17 = 0;
        r0 = r17;
        r2.setMargins(r12, r14, r15, r0);	 Catch:{ JSONException -> 0x072c, Exception -> 0x077d }
        r12 = new android.widget.RelativeLayout$LayoutParams;	 Catch:{ JSONException -> 0x072c, Exception -> 0x077d }
        r12.<init>(r2);	 Catch:{ JSONException -> 0x072c, Exception -> 0x077d }
        r2 = r10 + -5;
        r14 = 0;
        r2 = java.lang.Math.max(r2, r14);	 Catch:{ JSONException -> 0x072c, Exception -> 0x077d }
        r14 = r2 / 2;
        r14 = (float) r14;	 Catch:{ JSONException -> 0x072c, Exception -> 0x077d }
        r15 = new android.widget.Button;	 Catch:{ JSONException -> 0x072c, Exception -> 0x077d }
        r0 = r20;
        r0 = r0.f51c;	 Catch:{ JSONException -> 0x072c, Exception -> 0x077d }
        r17 = r0;
        r0 = r17;
        r15.<init>(r0);	 Catch:{ JSONException -> 0x072c, Exception -> 0x077d }
        r0 = r20;
        r0.f23A = r15;	 Catch:{ JSONException -> 0x072c, Exception -> 0x077d }
        r0 = r20;
        r15 = r0.f23A;	 Catch:{ JSONException -> 0x072c, Exception -> 0x077d }
        r17 = "X";
        r0 = r17;
        r15.setText(r0);	 Catch:{ JSONException -> 0x072c, Exception -> 0x077d }
        r0 = r20;
        r15 = r0.f23A;	 Catch:{ JSONException -> 0x072c, Exception -> 0x077d }
        r15.setTextSize(r14);	 Catch:{ JSONException -> 0x072c, Exception -> 0x077d }
        r0 = r20;
        r14 = r0.f23A;	 Catch:{ JSONException -> 0x072c, Exception -> 0x077d }
        r3 = android.graphics.Color.parseColor(r3);	 Catch:{ JSONException -> 0x072c, Exception -> 0x077d }
        r14.setTextColor(r3);	 Catch:{ JSONException -> 0x072c, Exception -> 0x077d }
        r0 = r20;
        r3 = r0.f23A;	 Catch:{ JSONException -> 0x072c, Exception -> 0x077d }
        r14 = 0;
        r15 = 0;
        r17 = 0;
        r18 = 0;
        r0 = r17;
        r1 = r18;
        r3.setPadding(r14, r15, r0, r1);	 Catch:{ JSONException -> 0x072c, Exception -> 0x077d }
        r0 = r20;
        r3 = r0.f23A;	 Catch:{ JSONException -> 0x072c, Exception -> 0x077d }
        r4 = android.graphics.Color.parseColor(r4);	 Catch:{ JSONException -> 0x072c, Exception -> 0x077d }
        r3.setBackgroundColor(r4);	 Catch:{ JSONException -> 0x072c, Exception -> 0x077d }
        r0 = r20;
        r3 = r0.f23A;	 Catch:{ JSONException -> 0x072c, Exception -> 0x077d }
        r4 = new com.ixaexvsbscmhkbbddjlq.w;	 Catch:{ JSONException -> 0x072c, Exception -> 0x077d }
        r0 = r20;
        r4.<init>(r0);	 Catch:{ JSONException -> 0x072c, Exception -> 0x077d }
        r3.setOnClickListener(r4);	 Catch:{ JSONException -> 0x072c, Exception -> 0x077d }
        r3 = new android.view.ViewGroup$MarginLayoutParams;	 Catch:{ JSONException -> 0x072c, Exception -> 0x077d }
        r4 = 55;
        r3.<init>(r4, r2);	 Catch:{ JSONException -> 0x072c, Exception -> 0x077d }
        r0 = r20;
        r0.f67s = r3;	 Catch:{ JSONException -> 0x072c, Exception -> 0x077d }
        r3 = r9 + r7;
        r3 = r3 + -55;
        r3 = r3 + -5;
        r2 = r10 - r2;
        r2 = r2 / 2;
        r2 = r2 + r8;
        r2 = r2 + 2;
        r0 = r20;
        r4 = r0.f67s;	 Catch:{ JSONException -> 0x072c, Exception -> 0x077d }
        r7 = 0;
        r8 = 0;
        r4.setMargins(r3, r2, r7, r8);	 Catch:{ JSONException -> 0x072c, Exception -> 0x077d }
        r2 = new android.widget.RelativeLayout$LayoutParams;	 Catch:{ JSONException -> 0x072c, Exception -> 0x077d }
        r0 = r20;
        r3 = r0.f67s;	 Catch:{ JSONException -> 0x072c, Exception -> 0x077d }
        r2.<init>(r3);	 Catch:{ JSONException -> 0x072c, Exception -> 0x077d }
        r0 = r20;
        r0.f66r = r2;	 Catch:{ JSONException -> 0x072c, Exception -> 0x077d }
        r0 = r20;
        r2 = r0.f54f;	 Catch:{ JSONException -> 0x072c, Exception -> 0x077d }
        if (r2 == 0) goto L_0x056c;
    L_0x0548:
        r0 = r20;
        r2 = r0.f54f;	 Catch:{ JSONException -> 0x072c, Exception -> 0x077d }
        r2 = r2.getParent();	 Catch:{ JSONException -> 0x072c, Exception -> 0x077d }
        r2 = (android.view.ViewGroup) r2;	 Catch:{ JSONException -> 0x072c, Exception -> 0x077d }
        r0 = r20;
        r0.f52d = r2;	 Catch:{ JSONException -> 0x072c, Exception -> 0x077d }
        r0 = r20;
        r2 = r0.f52d;	 Catch:{ JSONException -> 0x072c, Exception -> 0x077d }
        r0 = r20;
        r3 = r0.f54f;	 Catch:{ JSONException -> 0x072c, Exception -> 0x077d }
        r2.removeView(r3);	 Catch:{ JSONException -> 0x072c, Exception -> 0x077d }
        r0 = r20;
        r2 = r0.f65q;	 Catch:{ JSONException -> 0x072c, Exception -> 0x077d }
        r0 = r20;
        r3 = r0.f54f;	 Catch:{ JSONException -> 0x072c, Exception -> 0x077d }
        r2.addView(r3);	 Catch:{ JSONException -> 0x072c, Exception -> 0x077d }
    L_0x056c:
        r0 = r20;
        r2 = r0.f57i;	 Catch:{ JSONException -> 0x072c, Exception -> 0x077d }
        r3 = "maskvisible";
        r2 = r2.getInt(r3);	 Catch:{ JSONException -> 0x072c, Exception -> 0x077d }
        r3 = 1;
        if (r2 != r3) goto L_0x0598;
    L_0x0579:
        r0 = r20;
        r2 = r0.f65q;	 Catch:{ JSONException -> 0x072c, Exception -> 0x077d }
        r0 = r20;
        r3 = r0.f53e;	 Catch:{ JSONException -> 0x072c, Exception -> 0x077d }
        r2.addView(r3, r5);	 Catch:{ JSONException -> 0x072c, Exception -> 0x077d }
        r0 = r20;
        r2 = r0.f54f;	 Catch:{ JSONException -> 0x072c, Exception -> 0x077d }
        if (r2 == 0) goto L_0x0598;
    L_0x058a:
        r0 = r20;
        r2 = r0.f54f;	 Catch:{ JSONException -> 0x072c, Exception -> 0x077d }
        r3 = new com.ixaexvsbscmhkbbddjlq.x;	 Catch:{ JSONException -> 0x072c, Exception -> 0x077d }
        r0 = r20;
        r3.<init>(r0);	 Catch:{ JSONException -> 0x072c, Exception -> 0x077d }
        r2.setOnTouchListener(r3);	 Catch:{ JSONException -> 0x072c, Exception -> 0x077d }
    L_0x0598:
        r2 = 0;
        r0 = r20;
        r3 = r0.f57i;	 Catch:{ Exception -> 0x0895, JSONException -> 0x072c }
        r4 = "windowopeneffect";
        r3 = r3.getString(r4);	 Catch:{ Exception -> 0x0895, JSONException -> 0x072c }
        r0 = r20;
        r2 = r0.m35a(r3);	 Catch:{ Exception -> 0x0895, JSONException -> 0x072c }
    L_0x05a9:
        r0 = r20;
        r3 = r0.as;	 Catch:{ JSONException -> 0x072c, Exception -> 0x077d }
        if (r3 == 0) goto L_0x07bd;
    L_0x05af:
        r3 = "LBAdController";
        r4 = "Going to add mView to layout now...";
        com.ixaexvsbscmhkbbddjlq.AdLog.m106d(r3, r4);	 Catch:{ JSONException -> 0x072c, Exception -> 0x077d }
        r0 = r20;
        r3 = r0.f65q;	 Catch:{ JSONException -> 0x072c, Exception -> 0x077d }
        r0 = r20;
        r4 = r0.f50b;	 Catch:{ JSONException -> 0x072c, Exception -> 0x077d }
        r3.addView(r4, r6);	 Catch:{ JSONException -> 0x072c, Exception -> 0x077d }
        if (r2 == 0) goto L_0x05db;
    L_0x05c3:
        r0 = r20;
        r3 = r0.f50b;	 Catch:{ JSONException -> 0x072c, Exception -> 0x077d }
        r4 = 8;
        r3.setVisibility(r4);	 Catch:{ JSONException -> 0x072c, Exception -> 0x077d }
        r0 = r20;
        r3 = r0.f50b;	 Catch:{ JSONException -> 0x072c, Exception -> 0x077d }
        r3.startAnimation(r2);	 Catch:{ JSONException -> 0x072c, Exception -> 0x077d }
        r0 = r20;
        r2 = r0.f50b;	 Catch:{ JSONException -> 0x072c, Exception -> 0x077d }
        r3 = 0;
        r2.setVisibility(r3);	 Catch:{ JSONException -> 0x072c, Exception -> 0x077d }
    L_0x05db:
        r0 = r20;
        r2 = r0.f57i;	 Catch:{ JSONException -> 0x072c, Exception -> 0x077d }
        r3 = "titlevisible";
        r2 = r2.getInt(r3);	 Catch:{ JSONException -> 0x072c, Exception -> 0x077d }
        r3 = 1;
        if (r2 != r3) goto L_0x062c;
    L_0x05e8:
        r0 = r20;
        r2 = r0.f65q;	 Catch:{ JSONException -> 0x072c, Exception -> 0x077d }
        r0 = r20;
        r3 = r0.f69u;	 Catch:{ JSONException -> 0x072c, Exception -> 0x077d }
        r2.addView(r3, r11);	 Catch:{ JSONException -> 0x072c, Exception -> 0x077d }
        r0 = r20;
        r2 = r0.f57i;	 Catch:{ JSONException -> 0x072c, Exception -> 0x077d }
        r3 = "titletext";
        r2 = r2.getString(r3);	 Catch:{ JSONException -> 0x072c, Exception -> 0x077d }
        r3 = "";
        r2 = r2.equals(r3);	 Catch:{ JSONException -> 0x072c, Exception -> 0x077d }
        if (r2 != 0) goto L_0x0610;
    L_0x0605:
        r0 = r20;
        r2 = r0.f65q;	 Catch:{ JSONException -> 0x072c, Exception -> 0x077d }
        r0 = r20;
        r3 = r0.f70v;	 Catch:{ JSONException -> 0x072c, Exception -> 0x077d }
        r2.addView(r3, r13);	 Catch:{ JSONException -> 0x072c, Exception -> 0x077d }
    L_0x0610:
        r0 = r20;
        r2 = r0.f57i;	 Catch:{ JSONException -> 0x072c, Exception -> 0x077d }
        r3 = "showclose";
        r2 = r2.getInt(r3);	 Catch:{ JSONException -> 0x072c, Exception -> 0x077d }
        r3 = 1;
        if (r2 != r3) goto L_0x062c;
    L_0x061d:
        r0 = r20;
        r2 = r0.f65q;	 Catch:{ JSONException -> 0x072c, Exception -> 0x077d }
        r0 = r20;
        r3 = r0.f23A;	 Catch:{ JSONException -> 0x072c, Exception -> 0x077d }
        r0 = r20;
        r4 = r0.f66r;	 Catch:{ JSONException -> 0x072c, Exception -> 0x077d }
        r2.addView(r3, r4);	 Catch:{ JSONException -> 0x072c, Exception -> 0x077d }
    L_0x062c:
        r0 = r20;
        r2 = r0.f57i;	 Catch:{ JSONException -> 0x072c, Exception -> 0x077d }
        r3 = "footervisible";
        r2 = r2.getInt(r3);	 Catch:{ JSONException -> 0x072c, Exception -> 0x077d }
        r3 = 1;
        if (r2 != r3) goto L_0x0663;
    L_0x0639:
        r0 = r20;
        r2 = r0.f65q;	 Catch:{ JSONException -> 0x072c, Exception -> 0x077d }
        r0 = r20;
        r3 = r0.f71w;	 Catch:{ JSONException -> 0x072c, Exception -> 0x077d }
        r0 = r16;
        r2.addView(r3, r0);	 Catch:{ JSONException -> 0x072c, Exception -> 0x077d }
        r0 = r20;
        r2 = r0.f57i;	 Catch:{ JSONException -> 0x072c, Exception -> 0x077d }
        r3 = "footertext";
        r2 = r2.getString(r3);	 Catch:{ JSONException -> 0x072c, Exception -> 0x077d }
        r3 = "";
        r2 = r2.equals(r3);	 Catch:{ JSONException -> 0x072c, Exception -> 0x077d }
        if (r2 != 0) goto L_0x0663;
    L_0x0658:
        r0 = r20;
        r2 = r0.f65q;	 Catch:{ JSONException -> 0x072c, Exception -> 0x077d }
        r0 = r20;
        r3 = r0.f72x;	 Catch:{ JSONException -> 0x072c, Exception -> 0x077d }
        r2.addView(r3, r12);	 Catch:{ JSONException -> 0x072c, Exception -> 0x077d }
    L_0x0663:
        r2 = new android.view.ViewGroup$MarginLayoutParams;	 Catch:{ JSONException -> 0x072c, Exception -> 0x077d }
        r0 = r20;
        r3 = r0.f27E;	 Catch:{ JSONException -> 0x072c, Exception -> 0x077d }
        r0 = r20;
        r4 = r0.f28F;	 Catch:{ JSONException -> 0x072c, Exception -> 0x077d }
        r2.<init>(r3, r4);	 Catch:{ JSONException -> 0x072c, Exception -> 0x077d }
        r3 = 0;
        r4 = 0;
        r5 = 0;
        r6 = 0;
        r2.setMargins(r3, r4, r5, r6);	 Catch:{ JSONException -> 0x072c, Exception -> 0x077d }
        r3 = new android.widget.RelativeLayout$LayoutParams;	 Catch:{ JSONException -> 0x072c, Exception -> 0x077d }
        r3.<init>(r2);	 Catch:{ JSONException -> 0x072c, Exception -> 0x077d }
        r0 = r20;
        r2 = r0.f51c;	 Catch:{ Exception -> 0x07eb, JSONException -> 0x072c }
        r0 = r20;
        r4 = r0.f65q;	 Catch:{ Exception -> 0x07eb, JSONException -> 0x072c }
        r2.addContentView(r4, r3);	 Catch:{ Exception -> 0x07eb, JSONException -> 0x072c }
    L_0x0687:
        r0 = r20;
        r2 = r0.f57i;	 Catch:{ JSONException -> 0x072c, Exception -> 0x077d }
        r3 = "pollenable";
        r2 = r2.getInt(r3);	 Catch:{ JSONException -> 0x072c, Exception -> 0x077d }
        r3 = 1;
        if (r2 != r3) goto L_0x082a;
    L_0x0694:
        r0 = r20;
        r2 = r0.aj;	 Catch:{ JSONException -> 0x072c, Exception -> 0x077d }
        if (r2 != 0) goto L_0x082a;
    L_0x069a:
        r0 = r20;
        r2 = r0.f37O;	 Catch:{ JSONException -> 0x072c, Exception -> 0x077d }
        r0 = r20;
        r3 = r0.f38P;	 Catch:{ JSONException -> 0x072c, Exception -> 0x077d }
        if (r2 > r3) goto L_0x082a;
    L_0x06a4:
        r0 = r20;
        r2 = r0.f37O;	 Catch:{ JSONException -> 0x072c, Exception -> 0x077d }
        r0 = r20;
        r3 = r0.f39Q;	 Catch:{ JSONException -> 0x072c, Exception -> 0x077d }
        if (r2 >= r3) goto L_0x082a;
    L_0x06ae:
        r2 = "LBAdController";
        r3 = "Polling going to be set...";
        com.ixaexvsbscmhkbbddjlq.AdLog.m106d(r2, r3);	 Catch:{ JSONException -> 0x072c, Exception -> 0x077d }
        r2 = 1;
        r0 = r20;
        r0.aj = r2;	 Catch:{ JSONException -> 0x072c, Exception -> 0x077d }
        r2 = new com.ixaexvsbscmhkbbddjlq.F;	 Catch:{ JSONException -> 0x072c, Exception -> 0x077d }
        r0 = r20;
        r2.<init>(r0);	 Catch:{ JSONException -> 0x072c, Exception -> 0x077d }
        r0 = r20;
        r0.ah = r2;	 Catch:{ JSONException -> 0x072c, Exception -> 0x077d }
        r2 = new android.os.Handler;	 Catch:{ JSONException -> 0x072c, Exception -> 0x077d }
        r2.<init>();	 Catch:{ JSONException -> 0x072c, Exception -> 0x077d }
        r0 = r20;
        r0.ai = r2;	 Catch:{ JSONException -> 0x072c, Exception -> 0x077d }
        r2 = "LBAdController";
        r3 = new java.lang.StringBuilder;	 Catch:{ Exception -> 0x070c, JSONException -> 0x072c }
        r4 = "Polling initialized every ";
        r3.<init>(r4);	 Catch:{ Exception -> 0x070c, JSONException -> 0x072c }
        r0 = r20;
        r4 = r0.f57i;	 Catch:{ Exception -> 0x070c, JSONException -> 0x072c }
        r5 = "pollinterval";
        r4 = r4.getInt(r5);	 Catch:{ Exception -> 0x070c, JSONException -> 0x072c }
        r3 = r3.append(r4);	 Catch:{ Exception -> 0x070c, JSONException -> 0x072c }
        r4 = "s";
        r3 = r3.append(r4);	 Catch:{ Exception -> 0x070c, JSONException -> 0x072c }
        r3 = r3.toString();	 Catch:{ Exception -> 0x070c, JSONException -> 0x072c }
        com.ixaexvsbscmhkbbddjlq.AdLog.m106d(r2, r3);	 Catch:{ Exception -> 0x070c, JSONException -> 0x072c }
        r0 = r20;
        r2 = r0.ai;	 Catch:{ Exception -> 0x070c, JSONException -> 0x072c }
        r0 = r20;
        r3 = r0.ah;	 Catch:{ Exception -> 0x070c, JSONException -> 0x072c }
        r0 = r20;
        r4 = r0.f57i;	 Catch:{ Exception -> 0x070c, JSONException -> 0x072c }
        r5 = "pollinterval";
        r4 = r4.getInt(r5);	 Catch:{ Exception -> 0x070c, JSONException -> 0x072c }
        r4 = r4 * 1000;
        r4 = (long) r4;	 Catch:{ Exception -> 0x070c, JSONException -> 0x072c }
        r2.postDelayed(r3, r4);	 Catch:{ Exception -> 0x070c, JSONException -> 0x072c }
        goto L_0x0014;
    L_0x070c:
        r2 = move-exception;
        r3 = "LBAdController";
        r4 = new java.lang.StringBuilder;	 Catch:{ JSONException -> 0x072c, Exception -> 0x077d }
        r5 = "Error in initializing polling - ";
        r4.<init>(r5);	 Catch:{ JSONException -> 0x072c, Exception -> 0x077d }
        r5 = r2.getMessage();	 Catch:{ JSONException -> 0x072c, Exception -> 0x077d }
        r4 = r4.append(r5);	 Catch:{ JSONException -> 0x072c, Exception -> 0x077d }
        r4 = r4.toString();	 Catch:{ JSONException -> 0x072c, Exception -> 0x077d }
        com.ixaexvsbscmhkbbddjlq.AdLog.m107e(r3, r4);	 Catch:{ JSONException -> 0x072c, Exception -> 0x077d }
        r3 = "LBAdController";
        com.ixaexvsbscmhkbbddjlq.AdLog.printStackTrace(r3, r2);	 Catch:{ JSONException -> 0x072c, Exception -> 0x077d }
        goto L_0x0014;
    L_0x072c:
        r2 = move-exception;
        r20.m55e();
        r3 = "LBAdController";
        r4 = new java.lang.StringBuilder;
        r5 = "JSONException - ";
        r4.<init>(r5);
        r2 = r2.getMessage();
        r2 = r4.append(r2);
        r2 = r2.toString();
        com.ixaexvsbscmhkbbddjlq.AdLog.m106d(r3, r2);
        goto L_0x0014;
    L_0x074a:
        if (r2 == 0) goto L_0x0097;
    L_0x074c:
        r3 = "";
        r3 = r2.equals(r3);
        if (r3 != 0) goto L_0x0097;
    L_0x0754:
        r0 = r20;
        r3 = r0.al;
        r4 = "text/html";
        r5 = "utf-8";
        r3.loadData(r2, r4, r5);
        goto L_0x0097;
    L_0x0761:
        r2 = move-exception;
        r0 = r20;
        r2 = r0.f65q;	 Catch:{ Exception -> 0x076f, JSONException -> 0x072c }
        r0 = r20;
        r3 = r0.f50b;	 Catch:{ Exception -> 0x076f, JSONException -> 0x072c }
        r2.removeView(r3);	 Catch:{ Exception -> 0x076f, JSONException -> 0x072c }
        goto L_0x0131;
    L_0x076f:
        r2 = move-exception;
        goto L_0x01a9;
    L_0x0772:
        r4 = move-exception;
        r0 = r20;
        r4 = r0.al;	 Catch:{ JSONException -> 0x072c, Exception -> 0x077d }
        r6 = 0;
        r4.setBackgroundColor(r6);	 Catch:{ JSONException -> 0x072c, Exception -> 0x077d }
        goto L_0x024e;
    L_0x077d:
        r2 = move-exception;
        r20.m55e();
        r3 = "LBAdController";
        com.ixaexvsbscmhkbbddjlq.AdLog.printStackTrace(r3, r2);
        r3 = "LBAdController";
        r4 = new java.lang.StringBuilder;
        r5 = "Exception - ";
        r4.<init>(r5);
        r2 = r2.getMessage();
        r2 = r4.append(r2);
        r2 = r2.toString();
        com.ixaexvsbscmhkbbddjlq.AdLog.m106d(r3, r2);
        goto L_0x0014;
    L_0x07a0:
        r4 = move-exception;
        r0 = r20;
        r4 = r0.f50b;	 Catch:{ JSONException -> 0x072c, Exception -> 0x077d }
        r6 = 0;
        r4.setBackgroundColor(r6);	 Catch:{ JSONException -> 0x072c, Exception -> 0x077d }
        goto L_0x026e;
    L_0x07ab:
        r4 = "Bottom";
        r3 = r3.equals(r4);	 Catch:{ JSONException -> 0x072c, Exception -> 0x077d }
        if (r3 == 0) goto L_0x02a7;
    L_0x07b3:
        r0 = r20;
        r3 = r0.f26D;	 Catch:{ JSONException -> 0x072c, Exception -> 0x077d }
        r2 = r2 - r3;
        if (r2 >= 0) goto L_0x02a7;
    L_0x07ba:
        r2 = 0;
        goto L_0x02a7;
    L_0x07bd:
        r3 = "LBAdController";
        r4 = "Going to add webview to layout now...";
        com.ixaexvsbscmhkbbddjlq.AdLog.m106d(r3, r4);	 Catch:{ JSONException -> 0x072c, Exception -> 0x077d }
        r0 = r20;
        r3 = r0.f65q;	 Catch:{ JSONException -> 0x072c, Exception -> 0x077d }
        r0 = r20;
        r4 = r0.al;	 Catch:{ JSONException -> 0x072c, Exception -> 0x077d }
        r3.addView(r4, r6);	 Catch:{ JSONException -> 0x072c, Exception -> 0x077d }
        if (r2 == 0) goto L_0x05db;
    L_0x07d1:
        r0 = r20;
        r3 = r0.al;	 Catch:{ JSONException -> 0x072c, Exception -> 0x077d }
        r4 = 8;
        r3.setVisibility(r4);	 Catch:{ JSONException -> 0x072c, Exception -> 0x077d }
        r0 = r20;
        r3 = r0.al;	 Catch:{ JSONException -> 0x072c, Exception -> 0x077d }
        r3.startAnimation(r2);	 Catch:{ JSONException -> 0x072c, Exception -> 0x077d }
        r0 = r20;
        r2 = r0.al;	 Catch:{ JSONException -> 0x072c, Exception -> 0x077d }
        r3 = 0;
        r2.setVisibility(r3);	 Catch:{ JSONException -> 0x072c, Exception -> 0x077d }
        goto L_0x05db;
    L_0x07eb:
        r2 = move-exception;
        r0 = r20;
        r2 = r0.f65q;	 Catch:{ Exception -> 0x080a, JSONException -> 0x072c }
        r2 = r2.getParent();	 Catch:{ Exception -> 0x080a, JSONException -> 0x072c }
        r2 = (android.view.ViewGroup) r2;	 Catch:{ Exception -> 0x080a, JSONException -> 0x072c }
        r0 = r20;
        r4 = r0.f65q;	 Catch:{ Exception -> 0x080a, JSONException -> 0x072c }
        r2.removeView(r4);	 Catch:{ Exception -> 0x080a, JSONException -> 0x072c }
        r0 = r20;
        r2 = r0.f51c;	 Catch:{ Exception -> 0x080a, JSONException -> 0x072c }
        r0 = r20;
        r4 = r0.f65q;	 Catch:{ Exception -> 0x080a, JSONException -> 0x072c }
        r2.addContentView(r4, r3);	 Catch:{ Exception -> 0x080a, JSONException -> 0x072c }
        goto L_0x0687;
    L_0x080a:
        r2 = move-exception;
        r3 = "LBAdController";
        com.ixaexvsbscmhkbbddjlq.AdLog.printStackTrace(r3, r2);	 Catch:{ JSONException -> 0x072c, Exception -> 0x077d }
        r3 = "LBAdController";
        r4 = new java.lang.StringBuilder;	 Catch:{ JSONException -> 0x072c, Exception -> 0x077d }
        r5 = "Issue attaching layout to activity - ";
        r4.<init>(r5);	 Catch:{ JSONException -> 0x072c, Exception -> 0x077d }
        r2 = r2.getMessage();	 Catch:{ JSONException -> 0x072c, Exception -> 0x077d }
        r2 = r4.append(r2);	 Catch:{ JSONException -> 0x072c, Exception -> 0x077d }
        r2 = r2.toString();	 Catch:{ JSONException -> 0x072c, Exception -> 0x077d }
        com.ixaexvsbscmhkbbddjlq.AdLog.m107e(r3, r2);	 Catch:{ JSONException -> 0x072c, Exception -> 0x077d }
        goto L_0x0687;
    L_0x082a:
        r0 = r20;
        r2 = r0.f37O;	 Catch:{ JSONException -> 0x072c, Exception -> 0x077d }
        r0 = r20;
        r3 = r0.f38P;	 Catch:{ JSONException -> 0x072c, Exception -> 0x077d }
        if (r2 <= r3) goto L_0x0014;
    L_0x0834:
        r0 = r20;
        r2 = r0.f37O;	 Catch:{ JSONException -> 0x072c, Exception -> 0x077d }
        r0 = r20;
        r3 = r0.f39Q;	 Catch:{ JSONException -> 0x072c, Exception -> 0x077d }
        if (r2 < r3) goto L_0x0014;
    L_0x083e:
        r2 = 0;
        r0 = r20;
        r0.aj = r2;	 Catch:{ JSONException -> 0x072c, Exception -> 0x077d }
        r20.m52d();	 Catch:{ JSONException -> 0x072c, Exception -> 0x077d }
        goto L_0x0014;
    L_0x0848:
        r2 = 0;
        r0 = r20;
        r0.f56h = r2;	 Catch:{ JSONException -> 0x072c, Exception -> 0x077d }
        r20.m55e();	 Catch:{ JSONException -> 0x072c, Exception -> 0x077d }
        goto L_0x0014;
    L_0x0852:
        r2 = 0;
        r0 = r20;
        r0.f56h = r2;	 Catch:{ JSONException -> 0x072c, Exception -> 0x077d }
        r20.m55e();	 Catch:{ JSONException -> 0x072c, Exception -> 0x077d }
        r0 = r20;
        r2 = r0.ak;	 Catch:{ JSONException -> 0x072c, Exception -> 0x077d }
        if (r2 == 0) goto L_0x0873;
    L_0x0860:
        r2 = "LBAdController";
        r3 = "onAdFailed triggered";
        com.ixaexvsbscmhkbbddjlq.AdLog.m108i(r2, r3);	 Catch:{ Exception -> 0x0887, JSONException -> 0x072c }
        r0 = r20;
        r2 = r0.ak;	 Catch:{ Exception -> 0x0887, JSONException -> 0x072c }
        r2.onAdFailed();	 Catch:{ Exception -> 0x0887, JSONException -> 0x072c }
        r2 = 1;
        r0 = r20;
        r0.f35M = r2;	 Catch:{ Exception -> 0x0887, JSONException -> 0x072c }
    L_0x0873:
        r0 = r20;
        r2 = r0.an;	 Catch:{ JSONException -> 0x072c, Exception -> 0x077d }
        if (r2 == 0) goto L_0x0014;
    L_0x0879:
        r0 = r20;
        r2 = r0.an;	 Catch:{ JSONException -> 0x072c, Exception -> 0x077d }
        r2.onAdFailed();	 Catch:{ JSONException -> 0x072c, Exception -> 0x077d }
        r2 = 1;
        r0 = r20;
        r0.ap = r2;	 Catch:{ JSONException -> 0x072c, Exception -> 0x077d }
        goto L_0x0014;
    L_0x0887:
        r2 = move-exception;
        r3 = "LBAdController";
        r4 = "Error while calling onAdFailed";
        com.ixaexvsbscmhkbbddjlq.AdLog.m108i(r3, r4);	 Catch:{ JSONException -> 0x072c, Exception -> 0x077d }
        r3 = "LBAdController";
        com.ixaexvsbscmhkbbddjlq.AdLog.printStackTrace(r3, r2);	 Catch:{ JSONException -> 0x072c, Exception -> 0x077d }
        goto L_0x0873;
    L_0x0895:
        r3 = move-exception;
        goto L_0x05a9;
    L_0x0898:
        r4 = move-exception;
        goto L_0x0222;
    L_0x089b:
        r2 = move-exception;
        goto L_0x01f9;
    L_0x089e:
        r3 = move-exception;
        goto L_0x0051;
    L_0x08a1:
        r2 = move-exception;
        goto L_0x0046;
    L_0x08a4:
        r3 = r2;
        goto L_0x036f;
    L_0x08a7:
        r4 = r2;
        goto L_0x032f;
        */
        throw new UnsupportedOperationException("Method not decompiled: com.ixaexvsbscmhkbbddjlq.AdController.b():void");
    }

    private void m50c() {
        AdLog.m108i(LB_LOG, "linkClicked called");
        m60g();
        if (!this.f60l) {
            AdLog.m108i(LB_LOG, "Loading window..." + this.f56h);
            this.f59k = false;
            this.f60l = true;
            if (!this.f56h) {
                AdLog.m108i(LB_LOG, "remove the views if required first...");
                try {
                    this.f65q.removeView(this.al);
                    try {
                        this.f65q.removeView(this.f69u);
                        this.f65q.removeView(this.f70v);
                        this.f65q.removeView(this.f71w);
                        this.f65q.removeView(this.f72x);
                        this.f65q.removeView(this.f73y);
                        this.f65q.removeView(this.f74z);
                        this.f65q.removeView(this.f23A);
                        this.f65q.removeView(this.f24B);
                        this.f65q.removeView(null);
                        if (this.f25C != null) {
                            this.f65q.removeAllViews();
                        }
                    } catch (Exception e) {
                    }
                } catch (Exception e2) {
                    this.f65q.removeView(this.f50b);
                }
                try {
                    int i = this.f57i.getInt("clickwindowx");
                    int i2 = this.f57i.getInt("clickwindowy");
                    MarginLayoutParams marginLayoutParams = new MarginLayoutParams(this.f57i.getInt("clickwindowwidth"), this.f57i.getInt("clickwindowheight"));
                    marginLayoutParams.setMargins(i, i2, 0, 0);
                    ViewGroup.LayoutParams layoutParams = new LayoutParams(marginLayoutParams);
                    int i3 = this.f57i.getInt("clicktitlewidth");
                    int i4 = this.f57i.getInt("clicktitleheight");
                    int i5 = this.f57i.getInt("clicktitlex");
                    int i6 = this.f57i.getInt("clicktitley");
                    marginLayoutParams = new MarginLayoutParams(i3, i4);
                    marginLayoutParams.setMargins(i5, i6, 0, 0);
                    ViewGroup.LayoutParams layoutParams2 = new LayoutParams(marginLayoutParams);
                    try {
                        this.f69u.invalidate();
                    } catch (Exception e3) {
                    }
                    this.f69u = new View(this.f51c);
                    String string = this.f57i.getString("clicktitlecolor");
                    String str = (string.equals("") || string == null) ? "#E6E6E6" : string;
                    this.f69u.setBackgroundColor(Color.parseColor(str));
                    try {
                        this.f70v.invalidate();
                    } catch (Exception e4) {
                    }
                    this.f70v = new TextView(this.f51c);
                    this.f70v.setText(this.f57i.getString("clicktitletext"));
                    string = this.f57i.getString("clicktitletextcolor");
                    String str2 = (string.equals("") || string == null) ? "#000000" : string;
                    this.f70v.setTextColor(Color.parseColor(str2));
                    marginLayoutParams = new MarginLayoutParams(this.f57i.getInt("clicktitletextwidth"), i4 - 2);
                    marginLayoutParams.setMargins(i5 + 20, i6 + 8, 0, 0);
                    layoutParams2 = new LayoutParams(marginLayoutParams);
                    int i7 = this.f57i.getInt("clickfooterx");
                    int i8 = this.f57i.getInt("clickfootery");
                    int i9 = this.f57i.getInt("clickfooterheight");
                    marginLayoutParams = new MarginLayoutParams(this.f57i.getInt("clickfooterwidth"), i9);
                    marginLayoutParams.setMargins(i7, i8, 0, 0);
                    layoutParams2 = new LayoutParams(marginLayoutParams);
                    this.f71w = new View(this.f51c);
                    string = this.f57i.getString("clickfootercolor");
                    String str3 = (string.equals("") || string == null) ? "#E6E6E6" : string;
                    this.f71w.setBackgroundColor(Color.parseColor(str3));
                    this.f72x = new TextView(this.f51c);
                    this.f72x.setText(this.f57i.getString("clickfootertext"));
                    this.f72x.setTextSize(10.0f);
                    string = this.f57i.getString("clickfootertextcolor");
                    if (string.equals("") || string == null) {
                        string = "#000000";
                    }
                    this.f72x.setTextColor(Color.parseColor(string));
                    MarginLayoutParams marginLayoutParams2 = new MarginLayoutParams(this.f57i.getInt("clickfootertextwidth"), this.f57i.getInt("clickfootertextheight"));
                    marginLayoutParams2.setMargins(this.f57i.getInt("shownavigation") == 1 ? i7 + 70 : i7 + 20, i8 + 5, 0, 0);
                    layoutParams2 = new LayoutParams(marginLayoutParams2);
                    int max = Math.max(i4 - 5, 0);
                    float f = (float) (max / 2);
                    float f2 = f > 10.0f ? 10.0f : f;
                    int max2 = Math.max(i9 - 5, 0);
                    f = (float) (max2 / 2);
                    if (f > 10.0f) {
                        f = 10.0f;
                    }
                    if (this.f24B != null) {
                        this.f24B.invalidate();
                    }
                    this.f24B = new Button(this.f51c);
                    this.f24B.setText("Back");
                    this.f24B.setTextSize(f);
                    this.f24B.setTextColor(Color.parseColor(str2));
                    this.f24B.setPadding(0, 0, 0, 0);
                    this.f24B.setBackgroundColor(Color.parseColor(str3));
                    this.f24B.setOnClickListener(new C0129y(this));
                    if (this.f23A != null) {
                        this.f23A.invalidate();
                    }
                    this.f23A = new Button(this.f51c);
                    this.f23A.setText("X");
                    this.f23A.setTextSize(f2);
                    this.f23A.setTextColor(Color.parseColor(str2));
                    this.f23A.setPadding(0, 0, 0, 0);
                    this.f23A.setBackgroundColor(Color.parseColor(str));
                    this.f23A.setOnClickListener(new C0130z(this));
                    this.f74z = new Button(this.f51c);
                    this.f74z.setText(">");
                    this.f74z.setTextSize(f);
                    this.f74z.setTextColor(Color.parseColor(str2));
                    this.f74z.setPadding(0, 0, 0, 0);
                    this.f74z.setBackgroundColor(Color.parseColor(str3));
                    this.f74z.setOnClickListener(new C0085A(this));
                    if (this.f73y != null) {
                        this.f73y.invalidate();
                    }
                    this.f73y = new Button(this.f51c);
                    this.f73y.setText("<");
                    this.f73y.setTextSize(f);
                    this.f73y.setTextColor(Color.parseColor(str2));
                    this.f73y.setPadding(0, 0, 0, 0);
                    this.f73y.setBackgroundColor(Color.parseColor(str3));
                    this.f73y.setOnClickListener(new C0117j(this));
                    marginLayoutParams = new MarginLayoutParams(30, max2);
                    int i10 = (((this.f57i.getInt("clickfooterheight") - max2) / 2) + i8) + 3;
                    marginLayoutParams.setMargins(i7 + 5, i10, 0, 0);
                    ViewGroup.LayoutParams layoutParams3 = new LayoutParams(marginLayoutParams);
                    marginLayoutParams.setMargins((i7 + 5) + 30, i10, 0, 0);
                    ViewGroup.LayoutParams layoutParams4 = new LayoutParams(marginLayoutParams);
                    if (this.f57i.getInt("clicktitlevisible") == 1) {
                        this.f65q.addView(this.f69u, layoutParams2);
                        if (!this.f57i.getString("clicktitletext").equals("")) {
                            this.f65q.addView(this.f70v, layoutParams2);
                        }
                        if (this.f57i.getInt("showclose") == 1) {
                            this.f67s = new MarginLayoutParams(55, max);
                            this.f67s.setMargins(((i3 + i5) - 55) - 5, (((i4 - max) / 2) + i6) + 2, 0, 0);
                            this.f66r = new LayoutParams(this.f67s);
                            this.f65q.addView(this.f23A, this.f66r);
                        }
                    } else {
                        marginLayoutParams = new MarginLayoutParams(this.f57i.getInt("clickwindowwidth"), this.f57i.getInt("clickwindowheight") + i4);
                        marginLayoutParams.setMargins(i, i2 - this.f57i.getInt("clicktitleheight"), 0, 0);
                        layoutParams = new LayoutParams(marginLayoutParams);
                    }
                    if (this.f57i.getInt("clickfootervisible") == 1) {
                        this.f65q.addView(this.f71w, layoutParams2);
                        if (!this.f57i.getString("clickfootertext").equals("")) {
                            this.f65q.addView(this.f72x, layoutParams2);
                        }
                        if (this.f57i.getInt("shownavigation") == 1) {
                            this.f65q.addView(this.f73y, layoutParams3);
                            this.f65q.addView(this.f74z, layoutParams4);
                        }
                        if (this.f57i.getInt("showclose") == 1) {
                            marginLayoutParams = new MarginLayoutParams(55, max2);
                            marginLayoutParams.setMargins(((this.f57i.getInt("clickfooterwidth") + i7) - 55) - 5, (((i9 - max2) / 2) + i8) + 2, 0, 0);
                            this.f65q.addView(this.f24B, new LayoutParams(marginLayoutParams));
                        }
                    } else {
                        marginLayoutParams = new MarginLayoutParams(this.f57i.getInt("clickwindowwidth"), this.f57i.getInt("clickwindowheight") + i9);
                        marginLayoutParams.setMargins(i, i2, 0, 0);
                        layoutParams = new LayoutParams(marginLayoutParams);
                    }
                    if (this.as) {
                        AdLog.m106d(LB_LOG, "Going to add mView click window");
                        this.f65q.addView(this.f50b, layoutParams);
                    } else {
                        AdLog.m106d(LB_LOG, "Going to add webview click window");
                        this.f65q.addView(this.al, layoutParams);
                    }
                    if (this.ak != null) {
                        try {
                            if (!this.f57i.get("useclickwindow").equals("1")) {
                                AdLog.m108i(LB_LOG, "onAdClicked triggered");
                                this.ak.onAdClicked();
                            }
                        } catch (Exception e5) {
                            AdLog.m107e(LB_LOG, "error when onAdClicked triggered");
                            AdLog.printStackTrace(LB_LOG, e5);
                        }
                    }
                    if (this.f57i.get("useclickwindow").equals("1")) {
                        try {
                            MarginLayoutParams marginLayoutParams3 = new MarginLayoutParams(this.f27E, this.f28F);
                            marginLayoutParams3.setMargins(0, 0, 0, 0);
                            this.f51c.addContentView(this.f65q, new LayoutParams(marginLayoutParams3));
                        } catch (Exception e52) {
                            AdLog.m107e(LB_LOG, "Error adding click window layout - " + e52.getMessage());
                        }
                    }
                    AdLog.m108i(LB_LOG, "pE = " + this.f57i.getInt("pollenable") + ", pI = " + this.aj + ", pC = " + this.f37O + ", pM = " + this.f38P + ", pMl = " + this.f39Q);
                    Object obj = null;
                    if (this.f57i.getInt("pollenable") == 1 && !this.aj && this.f37O > 0) {
                        obj = 1;
                    } else if (this.f37O <= this.f38P && this.f37O < this.f39Q) {
                        obj = 1;
                    } else if (this.f37O > this.f38P && this.f37O >= this.f39Q) {
                        obj = null;
                    }
                    if (obj != null) {
                        AdLog.m108i(LB_LOG, "Polling to be initialized in linkClicked");
                        this.aj = true;
                        this.ah = new C0090F(this);
                        this.ai = new Handler();
                        try {
                            AdLog.m106d(LB_LOG, "Polling initialized every " + this.f57i.getInt("pollinterval") + AdView.DEVICE_ORIENTATION_SQUARE);
                            this.ai.postDelayed(this.ah, (long) (this.f57i.getInt("pollinterval") * 1000));
                            return;
                        } catch (Exception e6) {
                            return;
                        }
                    }
                    AdLog.m108i(LB_LOG, "Manual Polling in linkClicked");
                    this.aj = false;
                    m52d();
                } catch (Exception e522) {
                    AdLog.printStackTrace(LB_LOG, e522);
                    AdLog.m107e(LB_LOG, "JSON Exception - " + e522.getMessage());
                }
            }
        }
    }

    private void m52d() {
        int max;
        float f = 10.0f;
        try {
            if (!this.f57i.getString("clickfootervisible").equals("1")) {
                return;
            }
        } catch (Exception e) {
        }
        this.aj = false;
        if (this.ai != null) {
            this.ai.removeCallbacks(this.ah);
        }
        this.f25C = new Button(this.f51c);
        this.f25C.setText("Refresh");
        String str = "#E6E6E6";
        String str2 = "#000000";
        if (this.f60l) {
            try {
                max = Math.max(this.f57i.getInt("clickfooterheight") - 5, 0);
                try {
                    str = this.f57i.getString("clickfootercolor");
                    str2 = this.f57i.getString("clicktitletextcolor");
                    if (str.equals("") || str == null) {
                        str = "#E6E6E6";
                    }
                    if (str2.equals("") || str2 == null) {
                        str2 = "#000000";
                    }
                } catch (Exception e2) {
                }
            } catch (Exception e3) {
                max = 0;
            }
        } else {
            max = 0;
        }
        float f2 = (float) (max / 2);
        if (f2 <= 10.0f) {
            f = f2;
        }
        this.f25C.setPadding(0, 0, 0, 0);
        this.f25C.setTextSize(f);
        this.f25C.setTextColor(Color.parseColor(str2));
        this.f25C.setBackgroundColor(Color.parseColor(str));
        this.f25C.setOnClickListener(new C0118k(this));
        if (this.f60l) {
            try {
                int i = this.f57i.getInt("clickfooterx");
                int i2 = this.f57i.getInt("clickfootery");
                int i3 = this.f57i.getInt("clickfooterheight");
                MarginLayoutParams marginLayoutParams = new MarginLayoutParams(55, max);
                marginLayoutParams.setMargins((i + this.f57i.getInt("clickfooterwidth")) - 120, (i2 + ((i3 - max) / 2)) + 2, 0, 0);
                this.f65q.addView(this.f25C, new LayoutParams(marginLayoutParams));
            } catch (Exception e4) {
                AdLog.m107e(LB_LOG, "Error (add Manual Poll btn before click): " + e4.getMessage());
                AdLog.printStackTrace(LB_LOG, e4);
            }
        }
    }

    private void m55e() {
        try {
            this.al.stopLoading();
        } catch (Exception e) {
        }
        try {
            this.f50b.stopLoading();
        } catch (Exception e2) {
        }
        if (this.ag != null) {
            this.ag.cancel(true);
        }
        if (this.am != null) {
            this.am.cancel(true);
        }
        AdLog.m108i(LB_LOG, "closeUnlocker called");
        this.f58j = false;
        this.f59k = false;
        this.f60l = false;
        this.aj = false;
        this.f36N = true;
        this.f64p = false;
        this.f29G = true;
        this.f35M = false;
        this.f40R = false;
        this.ao = false;
        this.ap = false;
        this.ar = true;
        this.as = false;
        if (this.ai != null) {
            this.ai.removeCallbacks(this.ah);
        }
        try {
            Class.forName("android.webkit.WebView").getMethod("onPause", null).invoke(this.al, null);
            Class.forName("android.webkit.WebView").getMethod("onPause", null).invoke(this.f50b, null);
        } catch (Exception e3) {
        }
        try {
            this.f51c.runOnUiThread(new C0119l(this));
            if (this.f54f != null) {
                this.f54f.setOnTouchListener(null);
            }
        } catch (Exception e4) {
            AdLog.m107e(LB_LOG, "CloseUnlocker error - " + e4.getMessage());
        }
    }

    private void m57f() {
        if (this.f57i == null) {
            AdLog.m107e(LB_LOG, "Results are null - no audio will be played");
        } else if (this.f42T == null) {
            this.ap = true;
            try {
                this.f44V = this.f51c.openFileInput("audioads.mp3");
                AdLog.m108i(LB_LOG, "found audio ad");
            } catch (Exception e) {
                AdLog.m107e(LB_LOG, "audio ad not found in internal storage");
                AdLog.printStackTrace(LB_LOG, e);
            }
            this.f42T = new MediaPlayer();
            this.f42T.setOnCompletionListener(new C0123p(this));
            this.f42T.setDataSource(this.f44V.getFD());
            this.f42T.prepare();
            this.f48Z = this.f41S.getStreamVolume(3);
            int i = this.f48Z;
            int streamMaxVolume = this.f41S.getStreamMaxVolume(3);
            try {
                double d = (double) this.f57i.getInt("advolumelevel");
                if (d > 0.0d) {
                    i = (int) (d * ((double) streamMaxVolume));
                }
            } catch (JSONException e2) {
                i = (int) (((double) i) + (((double) i) * 0.2d));
            } catch (Exception e3) {
            }
            if (i > streamMaxVolume) {
                i = streamMaxVolume;
            }
            try {
                if (this.an != null) {
                    this.an.onAdLoaded();
                }
                this.f41S.setStreamVolume(3, i, 8);
                this.f42T.start();
                AdLog.m108i(LB_LOG, "playing audio ad");
                this.at.m171b();
                try {
                    this.at.m170a(this.f57i.getInt("audioclicktrigger"));
                    this.at.m172b(this.f57i.getInt("audioclickdetectionwindow") * 1000);
                } catch (Exception e4) {
                    this.at.m170a(this.f57i.getInt("clicktrigger"));
                    this.at.m172b(this.f57i.getInt("clickdetectionwindow") * 1000);
                }
                this.at.m169a();
            } catch (Exception e5) {
                AdLog.m106d(LB_LOG, "Exception when trying to play Audio - " + e5.getMessage());
                AdLog.printStackTrace(LB_LOG, e5);
            }
        }
    }

    private void m60g() {
        if (this.an != null) {
            this.an.onAdClosed();
        }
        if (this.ag != null) {
            this.ag.cancel(true);
        }
        if (this.am != null) {
            this.am.cancel(true);
        }
        this.at.m173c();
        if (this.f42T != null) {
            if (this.f42T.isPlaying()) {
                this.f42T.stop();
            }
            this.f42T.release();
            this.f42T = null;
        }
    }

    private void m62h() {
        int i;
        AdLog.m108i(LB_LOG, "notification initializing...");
        if (this.ag != null) {
            AdLog.m108i(LB_LOG, "AdTask status - " + this.ag.getStatus());
            i = this.ag.getStatus() == Status.FINISHED ? 1 : 0;
        } else {
            i = 1;
        }
        if (i != 0) {
            this.ag = new AdTask(this, this.f49a, this.f68t, "notification", this.aa);
            this.ag.setSubId(this.f30H);
            this.ag.setTokens(this.f31I);
            this.ag.setUseLocation(this.f61m);
            this.ag.execute(new String[]{""});
            return;
        }
        AdLog.m108i(LB_LOG, "No request to be made");
    }

    private void m64i() {
        if (this.f57i == null) {
            AdLog.m107e(LB_LOG, "Notification will not be loaded - no internet connection");
            return;
        }
        try {
            if (this.f57i.getString("show").equals("1")) {
                m67k();
            }
        } catch (Exception e) {
            AdLog.printStackTrace(LB_LOG, e);
        }
    }

    private void m65j() {
        long j;
        SharedPreferences sharedPreferences = this.f49a.getSharedPreferences("Preference", 0);
        Editor edit = sharedPreferences.edit();
        long intValue = (long) Integer.valueOf(sharedPreferences.getString("SD_ALARM_ATTEMPTED_" + this.f68t, "0")).intValue();
        long currentTimeMillis = System.currentTimeMillis();
        long j2 = 10000 + currentTimeMillis;
        if (intValue > 25) {
            j2 = sharedPreferences.getLong("SD_ALARM_INTERVAL_" + this.f68t, 0);
            AdLog.m108i(LB_LOG, "No internet, already tried 5 times, set it to timer " + j2 + AdView.DEVICE_ORIENTATION_SQUARE);
            AdLog.m108i(LB_LOG, "Times attempted = " + intValue);
            j2 = (j2 * 1000) + currentTimeMillis;
            edit.putLong("SD_ALARM_TIME_" + this.f68t, j2);
            edit.putString("SD_ALARM_ATTEMPTED_" + this.f68t, "0");
            edit.commit();
            j = j2;
        } else if (intValue % 5 != 0 || intValue <= 0) {
            AdLog.m108i(LB_LOG, "No internet, retry alarm in 10s");
            edit.putString("SD_ALARM_ATTEMPTED_" + this.f68t, (intValue + 1));
            edit.commit();
            j = j2;
        } else {
            j2 = Const.CACHE_DOWNLOAD_PERIOD + currentTimeMillis;
            AdLog.m108i(LB_LOG, "No internet, retry alarm in 10 mins");
            edit.putString("SD_ALARM_ATTEMPTED_" + this.f68t, (intValue + 1));
            edit.commit();
            j = j2;
        }
        this.af = (AlarmManager) this.f49a.getSystemService("alarm");
        Intent intent = new Intent(this.f49a, AdNotification.class);
        intent.putExtra("sectionid", this.f68t);
        this.ae = PendingIntent.getBroadcast(this.f49a, 0, intent, 134217728);
        try {
            this.af.set(0, j, this.ae);
        } catch (Exception e) {
            AdLog.printStackTrace(LB_LOG, e);
        }
    }

    private void m67k() {
        int i = 0;
        AdLog.m108i(LB_LOG, "setAlarm called");
        SharedPreferences sharedPreferences = this.f49a.getSharedPreferences("Preference", i);
        Editor edit = sharedPreferences.edit();
        if (this.f57i.length() > 1) {
            AdLog.m108i(LB_LOG, "internet connection found....initialize alarm from settings - Result Length=" + this.f57i.length());
            try {
                int intValue;
                int intValue2 = Integer.valueOf(sharedPreferences.getString("SD_ITERATION_COUNTER_" + this.f68t, "0")).intValue();
                try {
                    intValue = Integer.valueOf(this.f57i.getString("notificationcookie")).intValue();
                } catch (Exception e) {
                    intValue = i;
                }
                AdLog.m106d(LB_LOG, "Values: ck=" + intValue + ", ic=" + intValue2 + ", nLT=" + this.aa);
                this.af = (AlarmManager) this.f49a.getSystemService("alarm");
                Intent intent = new Intent(this.f49a, AdNotification.class);
                intent.putExtra("sectionid", this.f68t);
                this.ae = PendingIntent.getBroadcast(this.f49a, 0, intent, 134217728);
                if (intValue == 1 || ((intValue == 0 && intValue2 == 0) || this.aa.equals("Alarm"))) {
                    AdLog.m108i(LB_LOG, "alarm will be initialized - ck is " + intValue + ", ic is " + intValue2 + ", nLT is " + this.aa);
                    Calendar instance = Calendar.getInstance();
                    long currentTimeMillis = System.currentTimeMillis();
                    try {
                        intValue2 = Integer.parseInt(this.f57i.getString("notificationstart"));
                        instance.add(13, intValue2);
                        AdLog.m106d(LB_LOG, "Alarm initialized - Scheduled at " + intValue2 + ", current time = " + currentTimeMillis);
                        AdLog.m106d(LB_LOG, "----------------------------------------");
                        this.af.set(0, instance.getTimeInMillis(), this.ae);
                        edit.putLong("SD_ALARM_TIME_" + this.f68t, currentTimeMillis);
                        edit.putLong("SD_WAKE_TIME_" + this.f68t, instance.getTimeInMillis());
                        edit.putLong("SD_ALARM_INTERVAL_" + this.f68t, (long) intValue2);
                        edit.commit();
                        return;
                    } catch (Exception e2) {
                        AdLog.m107e(LB_LOG, "Error caused while setting Alarm (if case): " + e2.getMessage());
                        AdLog.printStackTrace(LB_LOG, e2);
                        return;
                    }
                }
                long j = sharedPreferences.getLong("SD_WAKE_TIME_" + this.f68t, 0);
                Calendar instance2 = Calendar.getInstance();
                long currentTimeMillis2 = System.currentTimeMillis();
                try {
                    instance2.setTimeInMillis(j);
                    AdLog.m106d(LB_LOG, "Alarm reset - Scheduled at " + j + ", current time = " + currentTimeMillis2);
                    AdLog.m106d(LB_LOG, "----------------------------------------");
                    this.af.set(0, instance2.getTimeInMillis(), this.ae);
                    edit.putLong("SD_ALARM_TIME_" + this.f68t, currentTimeMillis2);
                    edit.putLong("SD_WAKE_TIME_" + this.f68t, j);
                    edit.commit();
                    return;
                } catch (Exception e22) {
                    AdLog.m107e(LB_LOG, "Error caused while setting Alarm (else case): " + e22.getMessage());
                    AdLog.printStackTrace(LB_LOG, e22);
                    return;
                }
            } catch (Exception e3) {
                return;
            }
        }
        m65j();
    }

    static /* synthetic */ void m68k(AdController adController) {
        if (adController.as) {
            if (adController.f50b.canGoForward()) {
                adController.f50b.goForward();
            }
        } else if (adController.al.canGoForward()) {
            adController.al.goForward();
        }
    }

    private void m69l() {
        int i;
        CharSequence string;
        CharSequence string2;
        int i2;
        PendingIntent activity;
        int i3;
        AdLog.m108i(LB_LOG, "loadNotificationDetails called");
        if (this.f57i == null) {
            AdLog.m107e(LB_LOG, "Notification will not be loaded - no internet connection");
            return;
        }
        if (this.f57i.getString("show").equals("1")) {
            String str;
            String str2;
            String str3;
            String str4;
            String str5;
            String str6;
            String str7;
            String str8;
            String str9;
            String str10;
            Class cls;
            String string3;
            boolean z;
            int i4;
            int i5;
            int i6;
            Class cls2;
            int i7;
            SharedPreferences sharedPreferences;
            Editor edit;
            long currentTimeMillis;
            AdLog.m108i(LB_LOG, "notification to be fired");
            NotificationManager notificationManager = (NotificationManager) this.f49a.getSystemService("notification");
            int[] iArr = new int[5];
            iArr = new int[]{17301620, 17301547, 17301516, 17301514, 17301618};
            try {
                i = iArr[this.f57i.getInt("notificationicon")];
            } catch (Exception e) {
                i = iArr[0];
            } catch (Exception e2) {
                try {
                    AdLog.printStackTrace(LB_LOG, e2);
                    AdLog.m106d("AdController", "Error when trying to fire notifcation - " + e2.getMessage());
                    try {
                        if (this.aa.equals("Alarm")) {
                            m67k();
                            return;
                        }
                        return;
                    } catch (Exception e22) {
                        AdLog.m107e(LB_LOG, "Error while setting Alarm - " + e22.getMessage());
                        AdLog.printStackTrace(LB_LOG, e22);
                        return;
                    }
                } finally {
                    m72m();
                    try {
                        if (this.aa.equals("Alarm")) {
                            m67k();
                        }
                    } catch (Exception e3) {
                        AdLog.m107e(LB_LOG, "Error while setting Alarm - " + e3.getMessage());
                        AdLog.printStackTrace(LB_LOG, e3);
                    }
                }
            }
            CharSequence string4 = this.f57i.getString("notificationtext");
            String str11 = "";
            try {
                string = this.f57i.getString("notificationinstruction");
            } catch (Exception e4) {
            }
            String string5 = this.f57i.getString("notificationtext");
            String string6 = this.f57i.getString("notificationdescription");
            Object obj;
            try {
                String string7 = this.f57i.getString("notificationdisplay");
                if (string7.equals("")) {
                    string5 = "You have 1 new message";
                    string6 = "Tap to View";
                } else if (string7.equals("notificationtext")) {
                    string2 = this.f57i.getString(string7);
                    str = ".R$layout";
                    str2 = ".R$id";
                    string5 = "notif_icon";
                    str3 = "xappad_notification";
                    str4 = "xappad_mainview";
                    str5 = "xappad_bannerview";
                    str6 = "xappad_customtextview";
                    str7 = "xappad_customtextviewtitle";
                    str8 = "xappad_customtextviewdescription";
                    str9 = "xappad_customtextviewsmalltext";
                    str10 = "xappad_customtextviewcta";
                    cls = Class.forName(this.f49a.getPackageName() + ".R$drawable");
                    i2 = cls.getField(string5).getInt(cls);
                    string6 = "standard";
                    string3 = this.f57i.getString("notificationdisplaytype");
                    z = false;
                    activity = PendingIntent.getActivity(this.f49a, 0, new Intent("android.intent.action.VIEW", Uri.parse(this.f57i.getString("notificationurl"))), 0);
                    i4 = -1;
                    i5 = -1;
                    i6 = -1;
                    i3 = -1;
                    cls2 = Class.forName(this.f49a.getPackageName() + str);
                    i4 = cls2.getField(str3).getInt(cls2);
                    cls2 = Class.forName(this.f49a.getPackageName() + str2);
                    i5 = cls2.getField(str4).getInt(cls2);
                    i6 = cls2.getField(str5).getInt(cls2);
                    i3 = i4;
                    i4 = i5;
                    i5 = i6;
                    i6 = cls2.getField(str6).getInt(cls2);
                    if (!string3.equals("customtext") && i3 != -1 && i4 != -1 && i6 != -1) {
                        cls = Class.forName(this.f49a.getPackageName() + str2);
                        int i8 = cls.getField(str7).getInt(cls);
                        int i9 = cls.getField(str8).getInt(cls);
                        int i10 = cls.getField(str9).getInt(cls);
                        i7 = cls.getField(str10).getInt(cls);
                        if (i6 == -1 || i8 == -1 || i9 == -1 || i10 == -1 || i7 == -1) {
                            z = m40a(i2, string4, string2, string, notificationManager, activity, null);
                        } else {
                            RemoteViews remoteViews = new RemoteViews(this.f49a.getPackageName(), i3);
                            try {
                                remoteViews.setInt(i4, "setBackgroundColor", Color.parseColor(this.f57i.getString("notificationcustombackground")));
                            } catch (Exception e5) {
                            }
                            try {
                                remoteViews.setTextViewText(i8, this.f57i.getString("notificationcustomtext"));
                                try {
                                    remoteViews.setTextColor(i8, Color.parseColor(this.f57i.getString("notificationcustomtextcolor")));
                                } catch (Exception e6) {
                                }
                                remoteViews.setTextViewText(i9, this.f57i.getString("notificationcustomdescription"));
                                try {
                                    remoteViews.setTextColor(i9, Color.parseColor(this.f57i.getString("notificationcustomdescriptioncolor")));
                                } catch (Exception e7) {
                                }
                                remoteViews.setTextViewText(i10, this.f57i.getString("notificationcustomsmalltext"));
                                try {
                                    remoteViews.setTextColor(i10, Color.parseColor(this.f57i.getString("notificationcustomsmalltextcolor")));
                                } catch (Exception e8) {
                                }
                                remoteViews.setTextViewText(i7, this.f57i.getString("notificationcustomcta"));
                                try {
                                    remoteViews.setTextColor(i7, Color.parseColor(this.f57i.getString("notificationcustomctatextcolor")));
                                } catch (Exception e9) {
                                }
                                if (i5 != -1) {
                                    remoteViews.setViewVisibility(i5, 4);
                                }
                                z = m40a(i2, string4, string2, string, notificationManager, activity, remoteViews);
                            } catch (Exception e10) {
                                z = m40a(i2, string4, string2, string, notificationManager, activity, null);
                            }
                        }
                    } else if (string3.equals("banner") || i3 == -1 || i5 == -1) {
                        z = m40a(i2, string4, string2, string, notificationManager, activity, null);
                    } else {
                        String str12 = "xappad_bannerviewimg";
                        String str13 = "xappad_bannerviewtext";
                        try {
                            Class cls3 = Class.forName(this.f49a.getPackageName() + str2);
                            i6 = cls3.getField(str12).getInt(cls3);
                            i4 = cls3.getField(str13).getInt(cls3);
                            if (i5 == -1 || i6 == -1 || i4 == -1) {
                                z = m40a(i2, string4, string2, string, notificationManager, activity, null);
                            } else {
                                new C0089E(this, i2, string4, string2, string, notificationManager, activity).execute(new String[]{this.f57i.getString("notificationbannerimg")});
                            }
                        } catch (Exception e11) {
                            z = m40a(i2, string4, string2, string, notificationManager, activity, null);
                        }
                    }
                    if (z) {
                        sharedPreferences = this.f49a.getSharedPreferences("Preference", 0);
                        edit = sharedPreferences.edit();
                        currentTimeMillis = System.currentTimeMillis();
                        i7 = sharedPreferences.getInt("SD_NOTIFICATION_ID_" + this.f68t, 0);
                        try {
                            edit.putLong("SD_NOTIFICATION_FIRED_" + this.f68t, currentTimeMillis);
                            edit.commit();
                        } catch (Exception e12) {
                        }
                        try {
                            if (this.f57i.getString("notificationmultiple").equals("1")) {
                                edit.putInt("SD_NOTIFICATION_ID_" + this.f68t, i7 + 1);
                                edit.commit();
                            }
                        } catch (Exception e13) {
                        }
                    }
                }
                Object obj2 = string6;
                obj = string5;
            } catch (Exception e14) {
                string = r1;
                obj = string5;
            }
            str = ".R$layout";
            str2 = ".R$id";
            string5 = "notif_icon";
            str3 = "xappad_notification";
            str4 = "xappad_mainview";
            str5 = "xappad_bannerview";
            str6 = "xappad_customtextview";
            str7 = "xappad_customtextviewtitle";
            str8 = "xappad_customtextviewdescription";
            str9 = "xappad_customtextviewsmalltext";
            str10 = "xappad_customtextviewcta";
            try {
                cls = Class.forName(this.f49a.getPackageName() + ".R$drawable");
                i2 = cls.getField(string5).getInt(cls);
            } catch (Exception e222) {
                AdLog.m107e(LB_LOG, "Custom Notification Icon not used - " + e222.getMessage());
                i2 = i;
            }
            string6 = "standard";
            try {
                string3 = this.f57i.getString("notificationdisplaytype");
            } catch (Exception e15) {
                string3 = string6;
            }
            z = false;
            activity = PendingIntent.getActivity(this.f49a, 0, new Intent("android.intent.action.VIEW", Uri.parse(this.f57i.getString("notificationurl"))), 0);
            i4 = -1;
            i5 = -1;
            i6 = -1;
            i3 = -1;
            try {
                cls2 = Class.forName(this.f49a.getPackageName() + str);
                i4 = cls2.getField(str3).getInt(cls2);
                cls2 = Class.forName(this.f49a.getPackageName() + str2);
                i5 = cls2.getField(str4).getInt(cls2);
                i6 = cls2.getField(str5).getInt(cls2);
                i3 = i4;
                i4 = i5;
                i5 = i6;
                i6 = cls2.getField(str6).getInt(cls2);
            } catch (Exception e16) {
                int i11 = i3;
                i3 = i4;
                i4 = i5;
                i5 = i6;
                i6 = i11;
            }
            if (!string3.equals("customtext")) {
            }
            if (string3.equals("banner")) {
            }
            z = m40a(i2, string4, string2, string, notificationManager, activity, null);
            if (z) {
                sharedPreferences = this.f49a.getSharedPreferences("Preference", 0);
                edit = sharedPreferences.edit();
                currentTimeMillis = System.currentTimeMillis();
                i7 = sharedPreferences.getInt("SD_NOTIFICATION_ID_" + this.f68t, 0);
                edit.putLong("SD_NOTIFICATION_FIRED_" + this.f68t, currentTimeMillis);
                edit.commit();
                if (this.f57i.getString("notificationmultiple").equals("1")) {
                    edit.putInt("SD_NOTIFICATION_ID_" + this.f68t, i7 + 1);
                    edit.commit();
                }
            }
        }
        m72m();
        try {
            if (this.aa.equals("Alarm")) {
                m67k();
            }
        } catch (Exception e2222) {
            AdLog.m107e(LB_LOG, "Error while setting Alarm - " + e2222.getMessage());
            AdLog.printStackTrace(LB_LOG, e2222);
        }
    }

    static /* synthetic */ void m70l(AdController adController) {
        if (adController.as) {
            if (adController.f50b.canGoBack()) {
                adController.f50b.goBack();
            }
        } else if (adController.al.canGoBack()) {
            adController.al.goBack();
        }
    }

    private void m72m() {
        AdLog.m108i(LB_LOG, "increment counter called");
        SharedPreferences sharedPreferences = this.f49a.getSharedPreferences("Preference", 0);
        Editor edit = sharedPreferences.edit();
        edit.putString("SD_ITERATION_COUNTER_" + this.f68t, (Integer.valueOf(sharedPreferences.getString("SD_ITERATION_COUNTER_" + this.f68t, "0")).intValue() + 1));
        edit.commit();
    }

    private void m74n() {
        if (this.f49a.getSharedPreferences("Preference", 0).getInt("SD_ICON_ALARM_" + this.f68t, -1) == 1) {
            new AdIconTask(this.f49a, this.f57i, this.f68t).execute(new Void[0]);
        } else {
            m76o();
        }
    }

    private void m76o() {
        AdLog.m108i(LB_LOG, "setIconAlarm called");
        SharedPreferences sharedPreferences = this.f49a.getSharedPreferences("Preference", 0);
        Editor edit = sharedPreferences.edit();
        try {
            int intValue = Integer.valueOf(sharedPreferences.getString("SD_ICON_ITERATION_COUNTER_" + this.f68t, "0")).intValue();
            this.af = (AlarmManager) this.f49a.getSystemService("alarm");
            Intent intent = new Intent(this.f49a, AdIcon.class);
            intent.putExtra("sectionid", this.f68t);
            this.ae = PendingIntent.getBroadcast(this.f49a, 0, intent, 134217728);
            if (intValue == 0) {
                Calendar instance = Calendar.getInstance();
                long currentTimeMillis = System.currentTimeMillis();
                long j = 60000 + currentTimeMillis;
                try {
                    AdLog.m106d(LB_LOG, "Icon Alarm initialized - Scheduled at " + 1 + " mins, current time = " + currentTimeMillis);
                    AdLog.m106d(LB_LOG, "----------------------------------------");
                    this.af.set(0, j, this.ae);
                    edit.putLong("SD_ICON_ALARM_TIME_" + this.f68t, currentTimeMillis);
                    edit.putLong("SD_ICON_WAKE_TIME_" + this.f68t, instance.getTimeInMillis());
                    edit.putLong("SD_ICON_ALARM_INTERVAL_" + this.f68t, 1);
                    edit.commit();
                } catch (Exception e) {
                    AdLog.m107e(LB_LOG, "Error caused while setting icon Alarm (if case): " + e.getMessage());
                    AdLog.printStackTrace(LB_LOG, e);
                }
                edit.putInt("SD_ICON_ITERATION_COUNTER_" + this.f68t, 1);
                edit.commit();
            }
        } catch (Exception e2) {
            AdLog.printStackTrace(LB_LOG, e2);
            AdLog.m107e(LB_LOG, "Error while setting the icon alarm - " + e2.getMessage());
        }
    }

    private void m78p() {
        if (this.f57i != null && !this.f57i.isNull("invalidateoptin")) {
            String str = "0";
            try {
                str = this.f57i.getString("invalidateoptin");
            } catch (Exception e) {
            }
            if (str.equals("1")) {
                Editor edit = this.f49a.getSharedPreferences("Preference", 0).edit();
                edit.putString("SD_APP_OPTIN_SHOWN", IConstants.INVALID);
                edit.commit();
            }
        }
    }

    private void m80q() {
        int i = 0;
        AdLog.m106d(LB_LOG, "setReminder called");
        if (this.f57i != null && !this.f57i.isNull("remindertype")) {
            String str;
            SharedPreferences sharedPreferences = this.f49a.getSharedPreferences("Preference", 0);
            Editor edit = sharedPreferences.edit();
            String str2 = "1";
            try {
                String string = this.f57i.getString("remindertype");
                String string2 = this.f57i.getString("remindertext");
                String string3 = this.f57i.getString("remindershow");
                String string4 = sharedPreferences.getString("SD_REMINDER_SHOWN_" + this.f68t, "0");
                if (string3.equals("always") || string4.equals("0")) {
                    i = 1;
                }
                if (i != 0 && string.equals("display")) {
                    AdLog.m106d(LB_LOG, "Reminder Type Set - " + string);
                    Intent intent = new Intent(this.f49a, AdReminderNotification.class);
                    intent.putExtra("sectionid", this.f68t);
                    intent.putExtra("alarmtype", "reminder");
                    intent.putExtra("remindertitle", this.f57i.getString("remindertitle"));
                    intent.putExtra("remindertext", string2);
                    intent.putExtra("remindericon", this.f57i.getString("remindericon"));
                    try {
                        ((AlarmManager) this.f49a.getSystemService("alarm")).set(0, System.currentTimeMillis() + ((long) (Integer.parseInt(this.f57i.getString("reminderstart")) * 1000)), PendingIntent.getBroadcast(this.f49a, 0, intent, 134217728));
                        str = str2;
                    } catch (Exception e) {
                        AdLog.printStackTrace(LB_LOG, e);
                        AdLog.m106d("AdController", "Error while trying to set reminder alarm - " + e.getMessage());
                    }
                    AdLog.m106d(LB_LOG, "Reminder Set, set preference to " + str);
                    edit.putString("SD_REMINDER_SHOWN_" + this.f68t, str);
                    edit.commit();
                }
                str = str2;
            } catch (Exception e2) {
                AdLog.printStackTrace(LB_LOG, e2);
                AdLog.m106d(LB_LOG, "Error in setReminder - " + e2.getMessage());
                str = "0";
            }
            AdLog.m106d(LB_LOG, "Reminder Set, set preference to " + str);
            edit.putString("SD_REMINDER_SHOWN_" + this.f68t, str);
            edit.commit();
        }
    }

    public void adInitialized() {
        this.f64p = true;
        if (this.f57i != null) {
            int top;
            try {
                if (this.f57i.getString("show").equals("0")) {
                    if (this.ak != null) {
                        this.f35M = true;
                        this.ak.onAdFailed();
                    }
                    if (this.an != null) {
                        this.ap = true;
                        this.an.onAdFailed();
                        return;
                    }
                    return;
                }
            } catch (Exception e) {
            }
            this.aq = this.f68t;
            if (this.f51c != null) {
                DisplayMetrics displayMetrics = new DisplayMetrics();
                this.f51c.getWindowManager().getDefaultDisplay().getMetrics(displayMetrics);
                Rect rect = new Rect();
                Window window = this.f51c.getWindow();
                window.getDecorView().getWindowVisibleDisplayFrame(rect);
                int i = rect.top;
                top = window.findViewById(16908290).getTop();
                top = top > i ? top - i : 0;
                this.f27E = displayMetrics.widthPixels;
                SharedPreferences sharedPreferences = this.f51c.getSharedPreferences("Preference", 0);
                this.aq = this.f68t;
                String string = sharedPreferences.getString("sectionidXLrg", null);
                String string2 = sharedPreferences.getString("sectionidLrg", null);
                String string3 = sharedPreferences.getString("sectionidMed", null);
                if (this.f27E > 720) {
                    if (string != null && !string.equals("")) {
                        this.aq = string;
                    } else if (string2 != null && !string2.equals("")) {
                        this.aq = string2;
                    } else if (!(string3 == null || string3.equals(""))) {
                        this.aq = string3;
                    }
                } else if (this.f27E > GameThread.GAMEFIELD_HEIGHT) {
                    if (string2 != null && !string2.equals("")) {
                        this.aq = string2;
                    } else if (!(string3 == null || string3.equals(""))) {
                        this.aq = string3;
                    }
                } else if (!(this.f27E <= GameThread.GAMEFIELD_WIDTH || string3 == null || string3.equals(""))) {
                    this.aq = string3;
                }
                this.f28F = (displayMetrics.heightPixels - i) - top;
                AdLog.m106d(LB_LOG, "Height - " + displayMetrics.heightPixels + ", " + i + ", 0" + ", " + top);
            }
            try {
                this.f38P = this.f57i.getInt("pollmaxcount");
                top = this.f57i.getInt("pollmanualafter");
                int i2 = this.f57i.getInt("pollinterval");
                if (i2 > 0) {
                    this.f39Q = (top * 60) / i2;
                } else {
                    this.f39Q = 10;
                }
            } catch (Exception e2) {
                this.f38P = 500;
                this.f39Q = 10;
            }
            try {
                if (this.f57i.get("usenative").equals("1")) {
                    this.f62n = true;
                }
            } catch (JSONException e3) {
            }
            Editor edit = (this.f49a != null ? this.f49a : this.f51c).getSharedPreferences("Preference", 0).edit();
            try {
                edit.putString("SD_" + this.aq, this.f57i.getString("displayinterval"));
            } catch (Exception e4) {
                edit.putString("SD_" + this.aq, "0");
            }
            edit.commit();
            if (!this.f57i.isNull("remindertype")) {
                m80q();
            }
            if (!this.f57i.isNull("invalidateoptin")) {
                m78p();
            }
            if (this.ao) {
                retrieveAudioAd();
                return;
            }
            if (this.al == null) {
                this.al = new AdWebView(this.f51c, this, this.f62n, this.ak, this.f65q);
                this.al.setResults(this.f57i);
            }
            if (this.f50b == null) {
                this.f50b = new AdView(this.f51c, this, this.ak);
            }
            try {
                if (this.f57i.getInt("pollresult") == 1) {
                    if (this.ak != null) {
                        this.ak.onAdAlreadyCompleted();
                        return;
                    }
                    return;
                } else if (this.f57i.getInt("pollresult") == 0) {
                    try {
                        if (this.f57i.getInt("timeopen") > 0) {
                            top = this.f57i.getInt("timeopen") * 1000;
                            AdLog.m108i(LB_LOG, "Tease Time used - ad will load after " + top + "ms");
                            new Handler().postDelayed(new C0124t(this), (long) top);
                            return;
                        }
                        m46b();
                        return;
                    } catch (Exception e5) {
                        m46b();
                        return;
                    }
                } else {
                    return;
                }
            } catch (Exception e6) {
                m46b();
                return;
            }
        }
        if (this.ak != null) {
            this.f35M = true;
            this.ak.onAdFailed();
        }
        if (this.an != null) {
            this.ap = true;
            this.an.onAdFailed();
        }
    }

    public String adShowStatus() {
        return (this.f51c != null ? this.f51c : this.f49a).getSharedPreferences("Preference", 0).getString("SD_ADSTATUS_" + this.f68t, IMraid.STATE_DEFAULT);
    }

    public void audioAdRetrieved(Integer num) {
        if (num.intValue() == 0) {
            m57f();
        } else if (this.an != null) {
            this.an.onAdFailed();
            this.ap = true;
        }
    }

    public void checkForAudioAd(String str, String str2) {
        if (this.f36N || str == null || str.equals("null") || str.equals("")) {
            AdLog.m106d(LB_LOG, "No audio component");
            return;
        }
        if (this.f57i.isNull("adaudiourl")) {
            try {
                this.f57i.put("adaudiourl", str);
                this.f57i.put("adurl", str2);
            } catch (JSONException e) {
            }
        }
        if (!this.ap && !this.f57i.isNull("adaudiourl")) {
            if (this.at == null) {
                this.at = new C0086B(this, true);
            }
            if (this.f43U == null) {
                this.f41S = (AudioManager) this.f51c.getSystemService("audio");
                this.f43U = (SensorManager) this.f51c.getSystemService("sensor");
                this.f45W = 0.0f;
                this.f46X = 9.80665f;
                this.f47Y = 9.80665f;
            }
            retrieveAudioAd();
        }
    }

    public void destroyAd() {
        AdLog.m108i(LB_LOG, "destroyAd called");
        this.f36N = true;
        m60g();
        m55e();
    }

    public boolean getAdDestroyed() {
        return this.f36N;
    }

    public boolean getAdLoaded() {
        return this.f35M;
    }

    public boolean getLoadInBackground() {
        return this.ar;
    }

    public boolean getOnAdLoaded() {
        return this.f40R;
    }

    public void iconInitialized() {
        AdLog.m106d(LB_LOG, "icon initialized.." + this.f57i.toString());
        this.f64p = true;
        if (this.f57i != null) {
            try {
                if (this.f57i.getString("show").equals("0")) {
                    return;
                }
            } catch (Exception e) {
            }
            (this.f49a != null ? this.f49a : this.f51c).getSharedPreferences("Preference", 0);
            if (!this.f57i.isNull("remindertype")) {
                m80q();
            }
            if (!this.f57i.isNull("invalidateoptin")) {
                m78p();
            }
            m74n();
            return;
        }
        long j;
        SharedPreferences sharedPreferences = this.f49a.getSharedPreferences("Preference", 0);
        Editor edit = sharedPreferences.edit();
        long intValue = (long) Integer.valueOf(sharedPreferences.getString("SD_ICON_ALARM_ATTEMPTED_" + this.f68t, "0")).intValue();
        long currentTimeMillis = System.currentTimeMillis();
        long j2 = 10000 + currentTimeMillis;
        if (intValue > 25) {
            j2 = sharedPreferences.getLong("SD_ICON_ALARM_INTERVAL_" + this.f68t, 0);
            AdLog.m108i(LB_LOG, "No internet, icon already tried 5 times, set it to timer " + j2 + AdView.DEVICE_ORIENTATION_SQUARE);
            AdLog.m108i(LB_LOG, "Times attempted = " + intValue);
            j2 = (j2 * 1000) + currentTimeMillis;
            edit.putLong("SD_ICON_ALARM_TIME_" + this.f68t, j2);
            edit.putString("SD_ICON_ALARM_ATTEMPTED_" + this.f68t, "0");
            edit.commit();
            j = j2;
        } else if (intValue % 5 != 0 || intValue <= 0) {
            AdLog.m108i(LB_LOG, "No internet, retry icon alarm in 10s");
            edit.putString("SD_ICON_ALARM_ATTEMPTED_" + this.f68t, (intValue + 1));
            edit.commit();
            j = j2;
        } else {
            j2 = Const.CACHE_DOWNLOAD_PERIOD + currentTimeMillis;
            AdLog.m108i(LB_LOG, "No internet, retry icon alarm in 10 mins");
            edit.putString("SD_ICON_ALARM_ATTEMPTED_" + this.f68t, (intValue + 1));
            edit.commit();
            j = j2;
        }
        this.af = (AlarmManager) this.f49a.getSystemService("alarm");
        Intent intent = new Intent(this.f49a, AdIcon.class);
        intent.putExtra("sectionid", this.f68t);
        this.ae = PendingIntent.getBroadcast(this.f49a, 0, intent, 134217728);
        try {
            this.af.set(0, j, this.ae);
        } catch (Exception e2) {
            AdLog.printStackTrace(LB_LOG, e2);
        }
    }

    public void idleAdInitialized() {
        this.f64p = true;
        if (this.f57i != null) {
            if (!AdIdService.isRunning(this.f51c.getApplicationContext())) {
                this.f51c.startService(new Intent(this.f51c, AdIdService.class));
            }
            AlarmManager alarmManager = (AlarmManager) this.f51c.getSystemService("alarm");
            PendingIntent broadcast = PendingIntent.getBroadcast(this.f51c.getApplicationContext(), 0, new Intent(this.f51c, AdIdWatchdog.class), 134217728);
            long j = 300000;
            try {
                j = (long) this.f57i.getInt("adwatchdogstart");
            } catch (Exception e) {
            }
            try {
                Editor edit = this.f51c.getSharedPreferences("Preference", 0).edit();
                j = (j * 60) * 1000;
                edit.putLong("adwatchdogtime", j);
                edit.commit();
                alarmManager.set(0, j + System.currentTimeMillis(), broadcast);
            } catch (Exception e2) {
                AdLog.m106d(LB_LOG, "Error setting Watchdog - " + e2.getMessage());
            }
        }
    }

    public void loadAd() {
        SharedPreferences sharedPreferences = this.f51c.getSharedPreferences("Preference", 0);
        String string = sharedPreferences.getString("SD_APP_OPTIN_SHOWN", "notset");
        String string2 = sharedPreferences.getString("SD_APP_OPTIN", "notset");
        if (!string.equals("notset") && string2.equals("0")) {
            Editor edit = sharedPreferences.edit();
            edit.putString("SD_APP_OPTIN_SHOWN", IConstants.INVALID);
            edit.commit();
        }
        AdLog.m108i(LB_LOG, "loadAd called");
        this.f40R = false;
        if (this.f64p) {
            m46b();
        } else {
            this.f29G = true;
            this.f36N = false;
            m38a();
        }
        if (this.ak != null && this.f32J > 0) {
            if (this.f34L == null) {
                this.f34L = new C0125u(this);
            }
            if (this.f33K == null) {
                this.f33K = new Handler();
                this.f33K.postDelayed(this.f34L, (long) (this.f32J * 1000));
            }
        }
    }

    public void loadAudioAd() {
        if (this.f42T == null) {
            SharedPreferences sharedPreferences = this.f51c.getSharedPreferences("Preference", 0);
            String string = sharedPreferences.getString("SD_APP_OPTIN_SHOWN", "notset");
            String string2 = sharedPreferences.getString("SD_APP_OPTIN", "notset");
            if (!string.equals("notset") && string2.equals("0")) {
                Editor edit = sharedPreferences.edit();
                edit.putString("SD_APP_OPTIN_SHOWN", IConstants.INVALID);
                edit.commit();
            }
            AdLog.m108i(LB_LOG, "loadAudioAd called");
            if (this.f64p) {
                m57f();
            } else {
                this.ao = true;
                if (this.f43U == null) {
                    this.at = new C0086B(this, true);
                    this.f41S = (AudioManager) this.f51c.getSystemService("audio");
                    this.f43U = (SensorManager) this.f51c.getSystemService("sensor");
                    this.f45W = 0.0f;
                    this.f46X = 9.80665f;
                    this.f47Y = 9.80665f;
                }
                m38a();
            }
            if (this.ak != null && this.f32J > 0) {
                if (this.f34L == null) {
                    this.f34L = new C0122o(this);
                }
                if (this.f33K == null) {
                    this.f33K = new Handler();
                    this.f33K.postDelayed(this.f34L, (long) (this.f32J * 1000));
                }
            }
        }
    }

    public void loadIcon() {
        SharedPreferences sharedPreferences = this.f49a.getSharedPreferences("Preference", 0);
        Editor edit = sharedPreferences.edit();
        String string = sharedPreferences.getString("SD_APP_OPTIN_SHOWN", "notset");
        String string2 = sharedPreferences.getString("SD_APP_OPTIN_SHOWN", "notset");
        if (string.equals("notset")) {
            new AdOptinRequest(null, this.f68t, this.f49a, new C0209s(this), "0").execute(new Void[0]);
        } else if (!string.equals("notset") && string2.equals("0")) {
            edit.putString("SD_APP_OPTIN_SHOWN", IConstants.INVALID);
            edit.commit();
        } else if (sharedPreferences.getInt("SD_ICON_ALARM_" + this.f68t, -1) == 1) {
            AdLog.m108i(LB_LOG, "loadIcon called - need to initialize and start time");
            if (this.f64p) {
                m74n();
                return;
            }
            int i;
            AdLog.m108i(LB_LOG, "icon initializing...");
            if (this.ag != null) {
                AdLog.m108i(LB_LOG, "AdTask status - " + this.ag.getStatus());
                i = this.ag.getStatus() == Status.FINISHED ? 1 : 0;
            } else {
                i = 1;
            }
            if (i != 0) {
                this.ag = new AdTask(this, this.f49a, this.f68t, IConstants.ICON, this.aa);
                this.ag.setSubId(this.f30H);
                this.ag.setTokens(this.f31I);
                this.ag.setUseLocation(this.f61m);
                this.ag.execute(new String[]{""});
                return;
            }
            AdLog.m108i(LB_LOG, "No request to be made - request in progress");
        } else if (sharedPreferences.getLong("SD_ICON_WAKE_TIME_" + this.f68t, 0) == 0) {
            m76o();
        }
    }

    public void loadIdleAd() {
        SharedPreferences sharedPreferences = this.f51c.getSharedPreferences("Preference", 0);
        String string = sharedPreferences.getString("SD_APP_OPTIN_SHOWN", "notset");
        String string2 = sharedPreferences.getString("SD_APP_OPTIN", "notset");
        if (string.equals("notset")) {
            AdLog.m108i(LB_LOG, "optin not set, do optin first...");
            new AdOptinRequest(null, this.f68t, this.f51c.getApplicationContext(), new C0207q(this), "0").execute(new Void[0]);
        } else if (string.equals("notset") || !string2.equals("0")) {
            AdLog.m108i(LB_LOG, "loadIdleAd called");
            if (this.f64p) {
                idleAdInitialized();
                return;
            }
            int i;
            AdLog.m108i(LB_LOG, "initializing...");
            if (this.ag != null) {
                AdLog.m108i(LB_LOG, "AdTask status - " + this.ag.getStatus());
                i = this.ag.getStatus() == Status.FINISHED ? 1 : 0;
            } else {
                i = 1;
            }
            if (i != 0) {
                this.ag = new AdTask(this, this.f51c, this.f68t, "idle");
                this.ag.setSubId(this.f30H);
                this.ag.setTokens(this.f31I);
                this.ag.setUseLocation(this.f61m);
                this.ag.execute(new String[]{""});
                return;
            }
            AdLog.m108i(LB_LOG, "No request to be made - Request in progress");
        } else {
            Editor edit = sharedPreferences.edit();
            edit.putString("SD_APP_OPTIN_SHOWN", IConstants.INVALID);
            edit.commit();
        }
    }

    public void loadNotification() {
        AdLog.m108i(LB_LOG, "loadNotification called");
        SharedPreferences sharedPreferences = this.f49a.getSharedPreferences("Preference", 0);
        String string = sharedPreferences.getString("SD_APP_OPTIN_SHOWN", "notset");
        String string2 = sharedPreferences.getString("SD_APP_OPTIN", "notset");
        if (string.equals("notset")) {
            AdLog.m108i(LB_LOG, "optin not set, do optin first...");
            new AdOptinRequest(null, this.f68t, this.f49a, new C0208r(this), "0").execute(new Void[0]);
        } else if (string.equals("notset") || !string2.equals("0")) {
            AdLog.m108i(LB_LOG, "optin already done - loadNotification");
            if (!this.f64p) {
                this.ab = true;
                this.aa = "App";
                this.ac = false;
                this.ad = false;
                m62h();
            }
        } else {
            Editor edit = sharedPreferences.edit();
            edit.putString("SD_APP_OPTIN_SHOWN", IConstants.INVALID);
            edit.commit();
        }
    }

    public void loadNotificationOnRequest(String str) {
        if (str.equals("App") || str.equals("Alarm")) {
            AdLog.m108i(LB_LOG, "loadNotificationOnRequest called");
            this.aa = str;
            if (this.f64p) {
                AdLog.m108i(LB_LOG, "loadNotificationOnRequest initialized");
                m69l();
                return;
            }
            AdLog.m108i(LB_LOG, "loadNotificationOnRequest not initialized - going to initialize first");
            this.ab = true;
            this.ad = true;
            this.ac = false;
            m62h();
            return;
        }
        AdLog.m107e(LB_LOG, "Illegal use of loadNotificationOnRequest. LaunchType used = " + str);
    }

    public void loadOptin(Activity activity, String str, AdOptinListener adOptinListener) {
        if (activity == null) {
            return;
        }
        if (activity instanceof Activity) {
            new AdOptinRequest(activity, str, null, adOptinListener, "1").execute(new Void[0]);
            return;
        }
        AdLog.m107e(LB_LOG, "Activity required for loadOptin - incorrect value passed");
    }

    public void loadStartAd(String str, String str2) {
        loadOptin(this.f51c, this.f68t, new C0206i(this, str, str2));
    }

    public void notificationInitialized() {
        AdLog.m106d(LB_LOG, "notification initialized.." + this.f57i.toString());
        this.f64p = true;
        if (this.f57i != null) {
            try {
                if (this.f57i.getString("show").equals("0")) {
                    return;
                }
            } catch (Exception e) {
            }
            Editor edit = (this.f49a != null ? this.f49a : this.f51c).getSharedPreferences("Preference", 0).edit();
            if (this.ab) {
                edit.putLong("SD_NOTIFICATION_REQUESTED_" + this.f68t, System.currentTimeMillis());
                edit.commit();
            }
            if (!this.f57i.isNull("remindertype")) {
                m80q();
            }
            if (!this.f57i.isNull("invalidateoptin")) {
                m78p();
            }
            AdLog.m106d(LB_LOG, "setNotification called");
            if (this.f57i == null) {
                AdLog.m107e(LB_LOG, "Results are null - no notification will be loaded");
                return;
            }
            try {
                if (this.ad) {
                    m69l();
                    return;
                } else if (this.f57i.getString("show").equals("1")) {
                    String string = this.f57i.getString("notificationtype");
                    if (string.equals("Immediate")) {
                        AdLog.m108i(LB_LOG, "Immediate notification to be fired");
                        loadNotificationOnRequest("App");
                        return;
                    } else if (string.equals("Recurring")) {
                        AdLog.m108i(LB_LOG, "Recurring notification to be created");
                        AdLog.m108i(LB_LOG, "loadNotificationOnTimer called");
                        if (this.f64p) {
                            m64i();
                            return;
                        }
                        this.ab = true;
                        this.ad = true;
                        this.ac = false;
                        m62h();
                        return;
                    } else {
                        return;
                    }
                } else {
                    AdLog.m108i(LB_LOG, "Notification not be set for this user");
                    return;
                }
            } catch (Exception e2) {
                AdLog.printStackTrace(LB_LOG, e2);
                return;
            }
        }
        m65j();
    }

    public boolean onBackPressed() {
        if (!this.f60l) {
            return false;
        }
        loadAd();
        return true;
    }

    public void onLinkClicked() {
        m50c();
    }

    public void pauseAd() {
        Editor edit = (this.f51c != null ? this.f51c : this.f49a).getSharedPreferences("Preference", 0).edit();
        if (this.aq == null) {
            this.aq = this.f68t;
        }
        edit.putString("SD_ADSTATUS_" + this.aq, IMraid.STATE_HIDDEN);
        edit.commit();
        if (this.ak != null) {
            try {
                this.ak.onAdPaused();
            } catch (Exception e) {
                AdLog.printStackTrace(LB_LOG, e);
                AdLog.m107e(LB_LOG, "Error while triggering onAdPaused - " + e.getMessage());
            }
        }
    }

    public void pauseNotification() {
        Editor edit = this.f49a.getSharedPreferences("Preference", 0).edit();
        edit.putString("SD_ADSTATUS_" + this.f68t, IMraid.STATE_HIDDEN);
        edit.commit();
        setPauseAlarm();
        if (this.au != null) {
            try {
                this.au.onAdNotificationPaused();
            } catch (Exception e) {
                AdLog.printStackTrace(LB_LOG, e);
                AdLog.m107e(LB_LOG, "Error with notification listener " + e.getMessage());
            }
        }
    }

    public void resumeAd() {
        Editor edit = (this.f51c != null ? this.f51c : this.f49a).getSharedPreferences("Preference", 0).edit();
        if (this.aq == null) {
            this.aq = this.f68t;
        }
        edit.putString("SD_ADSTATUS_" + this.aq, IMraid.STATE_DEFAULT);
        edit.commit();
        if (this.ak != null) {
            try {
                this.ak.onAdResumed();
            } catch (Exception e) {
                AdLog.printStackTrace(LB_LOG, e);
                AdLog.m107e(LB_LOG, "Error while triggering onAdResumed - " + e.getMessage());
            }
        }
    }

    public void resumeNotification() {
        Editor edit = this.f49a.getSharedPreferences("Preference", 0).edit();
        edit.putString("SD_ADSTATUS_" + this.f68t, IMraid.STATE_DEFAULT);
        edit.commit();
        this.af = (AlarmManager) this.f49a.getSystemService("alarm");
        Intent intent = new Intent(this.f49a, AdNotification.class);
        intent.putExtra("sectionid", this.f68t);
        this.ae = PendingIntent.getBroadcast(this.f49a, 0, intent, 134217728);
        long currentTimeMillis = System.currentTimeMillis() + 1440000;
        try {
            this.af.cancel(this.ae);
            this.af.set(0, currentTimeMillis, this.ae);
        } catch (Exception e) {
            AdLog.printStackTrace(LB_LOG, e);
            AdLog.m106d(LB_LOG, "Error while trying to set pause alarm - " + e.getMessage());
        }
        if (this.au != null) {
            try {
                this.au.onAdNotificationResumed();
            } catch (Exception e2) {
                AdLog.printStackTrace(LB_LOG, e2);
                AdLog.m107e(LB_LOG, "Error with notification listener " + e2.getMessage());
            }
        }
    }

    public void retrieveAudioAd() {
        Object obj = 1;
        try {
            if (this.f57i.get("show").equals("1")) {
                if (this.am != null && this.am.getStatus() == Status.FINISHED) {
                    obj = null;
                }
                if (obj != null) {
                    this.am = new AdAudioTask(this, this.f51c);
                    this.am.execute(new String[]{this.f57i.getString("adaudiourl")});
                    return;
                }
                return;
            }
            this.ao = false;
        } catch (JSONException e) {
            AdLog.m106d(LB_LOG, "JSONException - " + e.getMessage());
        }
    }

    public void setAdDestroyed(boolean z) {
        this.f36N = z;
    }

    public void setAdLoaded(boolean z) {
        this.f35M = z;
    }

    public void setAdditionalDockingMargin(int i) {
        this.f26D = i;
        AdLog.m108i(LB_LOG, "setAdditionalDockingMargin: " + i);
    }

    public void setCompleted(boolean z) {
        this.f58j = z;
    }

    public void setHTML(String str) {
        if (this.f50b != null) {
            this.f50b.loadHTMLWrap("<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\"><html xmlns=\"http://www.w3.org/1999/xhtml\" xml:lang=\"en\" lang=\"en\">" + str + "</html>");
        }
    }

    public void setHTMLAds(boolean z) {
        this.as = z;
    }

    public void setHomeLoaded(boolean z) {
        this.f59k = z;
    }

    public void setLayout(RelativeLayout relativeLayout) {
        this.f65q = relativeLayout;
    }

    public void setLoadInBackground(boolean z) {
        this.ar = z;
    }

    public void setLoading(boolean z) {
        this.f56h = z;
    }

    public void setOnAdLoaded(boolean z) {
        this.f40R = z;
        if (this.ar && !this.f36N) {
            this.f51c.runOnUiThread(new C0121n(this));
        }
    }

    public void setOnProgressInterval(int i) {
        this.f32J = i;
    }

    public void setPauseAlarm() {
        this.af = (AlarmManager) this.f49a.getSystemService("alarm");
        Intent intent = new Intent(this.f49a, AdNotification.class);
        intent.putExtra("sectionid", this.f68t);
        this.ae = PendingIntent.getBroadcast(this.f49a, 0, intent, 134217728);
        long currentTimeMillis = System.currentTimeMillis() + 1515098112;
        try {
            this.af.cancel(this.ae);
            this.af.set(0, currentTimeMillis, this.ae);
        } catch (Exception e) {
            AdLog.printStackTrace(LB_LOG, e);
            AdLog.m106d(LB_LOG, "Error while trying to set pause alarm - " + e.getMessage());
        }
    }

    public void setResults(JSONObject jSONObject) {
        if (jSONObject != null) {
            this.f57i = jSONObject;
        }
    }

    public void setSubId(String str) {
        this.f30H = str;
    }

    public void setTokens(List list) {
        this.f31I = list;
    }

    public void setUseLocation(boolean z) {
        this.f61m = z;
        AdLog.m108i(LB_LOG, "setUseLocation: " + z);
    }

    public void stopAllListeners() {
    }

    public void triggerAdCompleted() {
        if (this.ak != null) {
            try {
                AdLog.m108i(LB_LOG, "onAdCompleted triggered");
                this.ak.onAdCompleted();
            } catch (Exception e) {
                AdLog.m107e(LB_LOG, "error when onAdCompleted triggered");
                AdLog.printStackTrace(LB_LOG, e);
            }
        }
    }

    public void triggerAdFailed() {
        AdLog.m107e(LB_LOG, "No Internet connection detected. No Ads loaded");
        if (this.ak != null) {
            try {
                AdLog.m108i(LB_LOG, "onAdFailed triggered");
                this.ak.onAdFailed();
                this.f35M = true;
            } catch (Exception e) {
                AdLog.m108i(LB_LOG, "Error while calling onAdFailed");
                AdLog.printStackTrace(LB_LOG, e);
            }
        }
        if (this.an != null) {
            this.an.onAdFailed();
            this.ap = true;
        }
    }
}
