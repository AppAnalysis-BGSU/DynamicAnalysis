package com.bugsense.trace;

import android.os.AsyncTask;
import android.os.AsyncTask.Status;

public abstract class ActivityAsyncTask<Connect, Params, Progress, Result> extends AsyncTask<Params, Progress, Result> {
    private volatile boolean mPostProcessingDone = false;
    private Result mResult;
    protected volatile Connect mWrapped;

    public ActivityAsyncTask(Connect connect) {
        connectTo(connect);
    }

    public void connectTo(Connect connect) {
        if (this.mWrapped == null || connect == null) {
            this.mWrapped = connect;
            if (this.mWrapped == null) {
                return;
            }
            if (getStatus() == Status.RUNNING) {
                onPreExecute();
                return;
            } else if (getStatus() == Status.FINISHED && !this.mPostProcessingDone) {
                this.mPostProcessingDone = true;
                processPostExecute(this.mResult);
                this.mResult = null;
                return;
            } else {
                return;
            }
        }
        throw new IllegalStateException();
    }

    protected void onPostExecute(Result result) {
        super.onPostExecute(result);
        if (this.mWrapped != null) {
            this.mPostProcessingDone = true;
            processPostExecute(result);
            return;
        }
        this.mResult = result;
    }

    public boolean postProcessingDone() {
        return this.mPostProcessingDone;
    }

    protected abstract void processPostExecute(Result result);
}
