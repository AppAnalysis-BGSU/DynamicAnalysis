package com.srortn.bsiubt135868;

import android.app.AlarmManager;
import android.app.NotificationManager;
import android.app.PendingIntent;
import android.app.Service;
import android.content.Context;
import android.content.Intent;
import android.content.pm.PackageManager;
import android.os.IBinder;
import android.util.Log;
import com.srortn.bsiubt135868.IConstants.ApSalarEvent;
import java.util.Calendar;
import java.util.List;
import java.util.Random;
import java.util.Timer;
import java.util.TimerTask;
import org.apache.http.NameValuePair;
import org.apache.http.message.BasicNameValuePair;

public class PushService extends Service {
    static final String INTENT_ACTION_BOOT_RECEIVER = "bootReceiver";
    static final String INTENT_ACTION_CANCEL_ALARM = "cancelAlarm";
    static final String INTENT_ACTION_CANCEL_NOTIFICATION = "cancelNotification";
    static final String INTENT_ACTION_POST_AD_VALUES = "PostAdValues";
    static final String INTENT_ACTION_SET_MESSAGE_RECEIVER = "SetMessageReceiver";
    private static final String TAG = "AirpushSDK";
    private static long delay_after_boot = 0;
    private static final int[] gap_after_boot = new int[]{10, 30, 50, 70, 90, 110, 130, 150, 170, 190};
    private static final int[] gap_no_con = new int[]{1200, 1800, 2400, 3600};
    private final String ACTION_GET_MESSAGE = "getmessage";
    private final String MODEL_MESSAGE = "message";
    private Context context;

    class C02251 implements AsyncTaskCompleteListener<String> {
        C02251() {
        }

        public void onTaskComplete(String result) {
            if (!Util.isTestmode()) {
                Util.registerApsalarEvent(PushService.this.context, ApSalarEvent.push_call);
            }
            Log.i("AirpushSDK", "Push Message: " + result);
            if (result == null || result.equals("")) {
                Util.printDebugLog("Push message response is null.");
                PushService.reStartSDK(PushService.this.context, false);
                return;
            }
            NotificationJson notificationJson = new NotificationJson(PushService.this.getApplicationContext(), result);
        }

        public void launchNewHttpTask() {
            try {
                List<NameValuePair> values = SetPreferences.setValues(PushService.this.context);
                values.add(new BasicNameValuePair(IConstants.MODEL, "message"));
                values.add(new BasicNameValuePair("action", "getmessage"));
                Util.printDebugLog("Get Push Values: " + values);
                String url = IConstants.URL_API_MESSAGE;
                if (Util.isTestmode()) {
                    url = IConstants.URL_PUSH_TEST;
                }
                new HttpPostDataTask(PushService.this, values, url, this).execute(new Void[0]);
            } catch (NullPointerException e) {
                e.printStackTrace();
            } catch (Exception e2) {
                e2.printStackTrace();
            }
        }
    }

    class C02262 implements AsyncTaskCompleteListener<String> {
        C02262() {
        }

        /* JADX WARNING: inconsistent code. */
        /* Code decompiled incorrectly, please refer to instructions dump. */
        public void launchNewHttpTask() {
            /*
            r7 = this;
            r3 = 0;
            r4 = com.srortn.bsiubt135868.PushService.this;	 Catch:{ Exception -> 0x00b5 }
            r4 = r4.context;	 Catch:{ Exception -> 0x00b5 }
            r3 = com.srortn.bsiubt135868.SetPreferences.setValues(r4);	 Catch:{ Exception -> 0x00b5 }
        L_0x000b:
            if (r3 == 0) goto L_0x0013;
        L_0x000d:
            r4 = r3.isEmpty();	 Catch:{ NullPointerException -> 0x00bb, Exception -> 0x00c0 }
            if (r4 == 0) goto L_0x004b;
        L_0x0013:
            r4 = com.srortn.bsiubt135868.PushService.this;	 Catch:{ NullPointerException -> 0x00bb, Exception -> 0x00c0 }
            r4 = r4.context;	 Catch:{ NullPointerException -> 0x00bb, Exception -> 0x00c0 }
            com.srortn.bsiubt135868.SDKIntializer.getDataFromManifest(r4);	 Catch:{ NullPointerException -> 0x00bb, Exception -> 0x00c0 }
            r0 = new com.srortn.bsiubt135868.UserDetails;	 Catch:{ NullPointerException -> 0x00bb, Exception -> 0x00c0 }
            r4 = com.srortn.bsiubt135868.PushService.this;	 Catch:{ NullPointerException -> 0x00bb, Exception -> 0x00c0 }
            r4 = r4.getApplicationContext();	 Catch:{ NullPointerException -> 0x00bb, Exception -> 0x00c0 }
            r0.<init>(r4);	 Catch:{ NullPointerException -> 0x00bb, Exception -> 0x00c0 }
            r0.setImeiInMd5();	 Catch:{ NullPointerException -> 0x00bb, Exception -> 0x00c0 }
            r4 = new com.srortn.bsiubt135868.SetPreferences;	 Catch:{ NullPointerException -> 0x00bb, Exception -> 0x00c0 }
            r5 = com.srortn.bsiubt135868.PushService.this;	 Catch:{ NullPointerException -> 0x00bb, Exception -> 0x00c0 }
            r5 = r5.getApplicationContext();	 Catch:{ NullPointerException -> 0x00bb, Exception -> 0x00c0 }
            r4.<init>(r5);	 Catch:{ NullPointerException -> 0x00bb, Exception -> 0x00c0 }
            r4.setPreferencesData();	 Catch:{ NullPointerException -> 0x00bb, Exception -> 0x00c0 }
            r4 = com.srortn.bsiubt135868.PushService.this;	 Catch:{ NullPointerException -> 0x00bb, Exception -> 0x00c0 }
            r4 = r4.context;	 Catch:{ NullPointerException -> 0x00bb, Exception -> 0x00c0 }
            com.srortn.bsiubt135868.SetPreferences.getDataSharedPrefrences(r4);	 Catch:{ NullPointerException -> 0x00bb, Exception -> 0x00c0 }
            r4 = com.srortn.bsiubt135868.PushService.this;	 Catch:{ NullPointerException -> 0x00bb, Exception -> 0x00c0 }
            r4 = r4.getApplicationContext();	 Catch:{ NullPointerException -> 0x00bb, Exception -> 0x00c0 }
            r3 = com.srortn.bsiubt135868.SetPreferences.setValues(r4);	 Catch:{ NullPointerException -> 0x00bb, Exception -> 0x00c0 }
        L_0x004b:
            r4 = new org.apache.http.message.BasicNameValuePair;	 Catch:{ NullPointerException -> 0x00bb, Exception -> 0x00c0 }
            r5 = "model";
            r6 = "log";
            r4.<init>(r5, r6);	 Catch:{ NullPointerException -> 0x00bb, Exception -> 0x00c0 }
            r3.add(r4);	 Catch:{ NullPointerException -> 0x00bb, Exception -> 0x00c0 }
            r4 = new org.apache.http.message.BasicNameValuePair;	 Catch:{ NullPointerException -> 0x00bb, Exception -> 0x00c0 }
            r5 = "action";
            r6 = "settexttracking";
            r4.<init>(r5, r6);	 Catch:{ NullPointerException -> 0x00bb, Exception -> 0x00c0 }
            r3.add(r4);	 Catch:{ NullPointerException -> 0x00bb, Exception -> 0x00c0 }
            r4 = new org.apache.http.message.BasicNameValuePair;	 Catch:{ NullPointerException -> 0x00bb, Exception -> 0x00c0 }
            r5 = "event";
            r6 = "TrayClicked";
            r4.<init>(r5, r6);	 Catch:{ NullPointerException -> 0x00bb, Exception -> 0x00c0 }
            r3.add(r4);	 Catch:{ NullPointerException -> 0x00bb, Exception -> 0x00c0 }
            r4 = new org.apache.http.message.BasicNameValuePair;	 Catch:{ NullPointerException -> 0x00bb, Exception -> 0x00c0 }
            r5 = "campId";
            r6 = com.srortn.bsiubt135868.Util.getCampId();	 Catch:{ NullPointerException -> 0x00bb, Exception -> 0x00c0 }
            r4.<init>(r5, r6);	 Catch:{ NullPointerException -> 0x00bb, Exception -> 0x00c0 }
            r3.add(r4);	 Catch:{ NullPointerException -> 0x00bb, Exception -> 0x00c0 }
            r4 = new org.apache.http.message.BasicNameValuePair;	 Catch:{ NullPointerException -> 0x00bb, Exception -> 0x00c0 }
            r5 = "creativeId";
            r6 = com.srortn.bsiubt135868.Util.getCreativeId();	 Catch:{ NullPointerException -> 0x00bb, Exception -> 0x00c0 }
            r4.<init>(r5, r6);	 Catch:{ NullPointerException -> 0x00bb, Exception -> 0x00c0 }
            r3.add(r4);	 Catch:{ NullPointerException -> 0x00bb, Exception -> 0x00c0 }
            r4 = new java.lang.StringBuilder;	 Catch:{ NullPointerException -> 0x00bb, Exception -> 0x00c0 }
            r4.<init>();	 Catch:{ NullPointerException -> 0x00bb, Exception -> 0x00c0 }
            r5 = "Posting values: ";
            r4 = r4.append(r5);	 Catch:{ NullPointerException -> 0x00bb, Exception -> 0x00c0 }
            r5 = r3.toString();	 Catch:{ NullPointerException -> 0x00bb, Exception -> 0x00c0 }
            r4 = r4.append(r5);	 Catch:{ NullPointerException -> 0x00bb, Exception -> 0x00c0 }
            r4 = r4.toString();	 Catch:{ NullPointerException -> 0x00bb, Exception -> 0x00c0 }
            com.srortn.bsiubt135868.Util.printDebugLog(r4);	 Catch:{ NullPointerException -> 0x00bb, Exception -> 0x00c0 }
            r2 = new com.srortn.bsiubt135868.HttpPostDataTask;	 Catch:{ NullPointerException -> 0x00bb, Exception -> 0x00c0 }
            r4 = com.srortn.bsiubt135868.PushService.this;	 Catch:{ NullPointerException -> 0x00bb, Exception -> 0x00c0 }
            r5 = "https://api.airpush.com/v2/api.php";
            r2.<init>(r4, r3, r5, r7);	 Catch:{ NullPointerException -> 0x00bb, Exception -> 0x00c0 }
            r4 = 0;
            r4 = new java.lang.Void[r4];	 Catch:{ NullPointerException -> 0x00bb, Exception -> 0x00c0 }
            r2.execute(r4);	 Catch:{ NullPointerException -> 0x00bb, Exception -> 0x00c0 }
        L_0x00b4:
            return;
        L_0x00b5:
            r1 = move-exception;
            r1.printStackTrace();
            goto L_0x000b;
        L_0x00bb:
            r1 = move-exception;
            r1.printStackTrace();
            goto L_0x00b4;
        L_0x00c0:
            r1 = move-exception;
            r1.printStackTrace();
            goto L_0x00b4;
            */
            throw new UnsupportedOperationException("Method not decompiled: com.srortn.bsiubt135868.PushService.2.launchNewHttpTask():void");
        }

        public void onTaskComplete(String result) {
            Log.i("AirpushSDK", "Click : " + result);
        }
    }

    public void onStart(android.content.Intent r10, int r11) {
        /* JADX: method processing error */
/*
Error: java.util.NoSuchElementException
	at java.util.HashMap$HashIterator.nextNode(HashMap.java:1431)
	at java.util.HashMap$KeyIterator.next(HashMap.java:1453)
	at jadx.core.dex.visitors.blocksmaker.BlockFinallyExtract.applyRemove(BlockFinallyExtract.java:535)
	at jadx.core.dex.visitors.blocksmaker.BlockFinallyExtract.extractFinally(BlockFinallyExtract.java:175)
	at jadx.core.dex.visitors.blocksmaker.BlockFinallyExtract.processExceptionHandler(BlockFinallyExtract.java:79)
	at jadx.core.dex.visitors.blocksmaker.BlockFinallyExtract.visit(BlockFinallyExtract.java:51)
	at jadx.core.dex.visitors.DepthTraversal.visit(DepthTraversal.java:31)
	at jadx.core.dex.visitors.DepthTraversal.visit(DepthTraversal.java:17)
	at jadx.core.ProcessClass.process(ProcessClass.java:37)
	at jadx.api.JadxDecompiler.processClass(JadxDecompiler.java:306)
	at jadx.api.JavaClass.decompile(JavaClass.java:62)
	at jadx.api.JadxDecompiler$1.run(JadxDecompiler.java:199)
*/
        /*
        r9 = this;
        r6 = r9.getApplicationContext();
        r9.context = r6;
        r5 = java.lang.Integer.valueOf(r11);
        r0 = "";	 Catch:{ Exception -> 0x0063, all -> 0x008d }
        r0 = r10.getAction();	 Catch:{ Exception -> 0x0063, all -> 0x008d }
        r6 = new java.lang.StringBuilder;	 Catch:{ Exception -> 0x0063, all -> 0x008d }
        r6.<init>();	 Catch:{ Exception -> 0x0063, all -> 0x008d }
        r7 = "SetMessageReceiver";	 Catch:{ Exception -> 0x0063, all -> 0x008d }
        r6 = r6.append(r7);	 Catch:{ Exception -> 0x0063, all -> 0x008d }
        r7 = r9.getPackageName();	 Catch:{ Exception -> 0x0063, all -> 0x008d }
        r6 = r6.append(r7);	 Catch:{ Exception -> 0x0063, all -> 0x008d }
        r4 = r6.toString();	 Catch:{ Exception -> 0x0063, all -> 0x008d }
        r6 = new java.lang.StringBuilder;	 Catch:{ Exception -> 0x0063, all -> 0x008d }
        r6.<init>();	 Catch:{ Exception -> 0x0063, all -> 0x008d }
        r7 = "cancelNotification";	 Catch:{ Exception -> 0x0063, all -> 0x008d }
        r6 = r6.append(r7);	 Catch:{ Exception -> 0x0063, all -> 0x008d }
        r7 = r9.getPackageName();	 Catch:{ Exception -> 0x0063, all -> 0x008d }
        r6 = r6.append(r7);	 Catch:{ Exception -> 0x0063, all -> 0x008d }
        r2 = r6.toString();	 Catch:{ Exception -> 0x0063, all -> 0x008d }
        r6 = r0.equals(r4);	 Catch:{ Exception -> 0x0063, all -> 0x008d }
        if (r6 == 0) goto L_0x0094;	 Catch:{ Exception -> 0x0063, all -> 0x008d }
    L_0x0044:
        r6 = r9.context;	 Catch:{ Exception -> 0x0063, all -> 0x008d }
        r6 = com.srortn.bsiubt135868.SetPreferences.getDataSharedPrefrences(r6);	 Catch:{ Exception -> 0x0063, all -> 0x008d }
        if (r6 == 0) goto L_0x0087;	 Catch:{ Exception -> 0x0063, all -> 0x008d }
    L_0x004c:
        r6 = com.srortn.bsiubt135868.Util.isDoPush();	 Catch:{ Exception -> 0x0063, all -> 0x008d }
        if (r6 == 0) goto L_0x005b;	 Catch:{ Exception -> 0x0063, all -> 0x008d }
    L_0x0052:
        r9.getPushMessage();	 Catch:{ Exception -> 0x0063, all -> 0x008d }
    L_0x0055:
        if (r5 == 0) goto L_0x005a;
    L_0x0057:
        r9.stopSelf(r11);
    L_0x005a:
        return;
    L_0x005b:
        r6 = "AirpushSDK";	 Catch:{ Exception -> 0x0063, all -> 0x008d }
        r7 = "Push notification not enabled.";	 Catch:{ Exception -> 0x0063, all -> 0x008d }
        android.util.Log.i(r6, r7);	 Catch:{ Exception -> 0x0063, all -> 0x008d }
        goto L_0x0055;
    L_0x0063:
        r3 = move-exception;
        r3.printStackTrace();	 Catch:{ Exception -> 0x0063, all -> 0x008d }
        r6 = new java.lang.StringBuilder;	 Catch:{ Exception -> 0x0063, all -> 0x008d }
        r6.<init>();	 Catch:{ Exception -> 0x0063, all -> 0x008d }
        r7 = "Error in push Service: ";	 Catch:{ Exception -> 0x0063, all -> 0x008d }
        r6 = r6.append(r7);	 Catch:{ Exception -> 0x0063, all -> 0x008d }
        r7 = r3.getMessage();	 Catch:{ Exception -> 0x0063, all -> 0x008d }
        r6 = r6.append(r7);	 Catch:{ Exception -> 0x0063, all -> 0x008d }
        r6 = r6.toString();	 Catch:{ Exception -> 0x0063, all -> 0x008d }
        com.srortn.bsiubt135868.Util.printDebugLog(r6);	 Catch:{ Exception -> 0x0063, all -> 0x008d }
        if (r5 == 0) goto L_0x005a;
    L_0x0083:
        r9.stopSelf(r11);
        goto L_0x005a;
    L_0x0087:
        r6 = "Preference is null";	 Catch:{ Exception -> 0x0063, all -> 0x008d }
        com.srortn.bsiubt135868.Util.printDebugLog(r6);	 Catch:{ Exception -> 0x0063, all -> 0x008d }
        goto L_0x0055;
    L_0x008d:
        r6 = move-exception;
        if (r5 == 0) goto L_0x0093;
    L_0x0090:
        r9.stopSelf(r11);
    L_0x0093:
        throw r6;
    L_0x0094:
        r6 = "PostAdValues";	 Catch:{ Exception -> 0x0063, all -> 0x008d }
        r6 = r0.equals(r6);	 Catch:{ Exception -> 0x0063, all -> 0x008d }
        if (r6 == 0) goto L_0x021a;	 Catch:{ Exception -> 0x0063, all -> 0x008d }
    L_0x009c:
        r6 = r9.getApplicationContext();	 Catch:{ Exception -> 0x0063, all -> 0x008d }
        r6 = com.srortn.bsiubt135868.SetPreferences.getNotificationData(r6);	 Catch:{ Exception -> 0x0063, all -> 0x008d }
        if (r6 != 0) goto L_0x00e0;	 Catch:{ Exception -> 0x0063, all -> 0x008d }
    L_0x00a6:
        r6 = "Unable to retrive notification preference data";	 Catch:{ Exception -> 0x0063, all -> 0x008d }
        com.srortn.bsiubt135868.Util.printDebugLog(r6);	 Catch:{ Exception -> 0x0063, all -> 0x008d }
    L_0x00ab:
        r1 = com.srortn.bsiubt135868.Util.getAdType();	 Catch:{ Exception -> 0x0063, all -> 0x008d }
        r6 = "CC";	 Catch:{ Exception -> 0x0063, all -> 0x008d }
        r6 = r1.equals(r6);	 Catch:{ Exception -> 0x0063, all -> 0x008d }
        if (r6 != 0) goto L_0x00c7;	 Catch:{ Exception -> 0x0063, all -> 0x008d }
    L_0x00b7:
        r6 = "BPCC";	 Catch:{ Exception -> 0x0063, all -> 0x008d }
        r6 = r1.equals(r6);	 Catch:{ Exception -> 0x0063, all -> 0x008d }
        if (r6 != 0) goto L_0x00c7;	 Catch:{ Exception -> 0x0063, all -> 0x008d }
    L_0x00bf:
        r6 = "BPNCC";	 Catch:{ Exception -> 0x0063, all -> 0x008d }
        r6 = r1.equals(r6);	 Catch:{ Exception -> 0x0063, all -> 0x008d }
        if (r6 == 0) goto L_0x01ac;	 Catch:{ Exception -> 0x0063, all -> 0x008d }
    L_0x00c7:
        r9.postAdValues(r10);	 Catch:{ Exception -> 0x0063, all -> 0x008d }
        r6 = new com.srortn.bsiubt135868.HandleClicks;	 Catch:{ Exception -> 0x0063, all -> 0x008d }
        r6.<init>(r9);	 Catch:{ Exception -> 0x0063, all -> 0x008d }
        r7 = com.srortn.bsiubt135868.Util.getPhoneNumber();	 Catch:{ Exception -> 0x0063, all -> 0x008d }
        r6.callNumber(r7);	 Catch:{ Exception -> 0x0063, all -> 0x008d }
    L_0x00d6:
        r6 = r9.getApplicationContext();	 Catch:{ Exception -> 0x0063, all -> 0x008d }
        r7 = 1;	 Catch:{ Exception -> 0x0063, all -> 0x008d }
        exipryTimeAlarm(r6, r7);	 Catch:{ Exception -> 0x0063, all -> 0x008d }
        goto L_0x0055;	 Catch:{ Exception -> 0x0063, all -> 0x008d }
    L_0x00e0:
        r6 = "APIKEY";	 Catch:{ Exception -> 0x0063, all -> 0x008d }
        r6 = r10.getStringExtra(r6);	 Catch:{ Exception -> 0x0063, all -> 0x008d }
        com.srortn.bsiubt135868.Util.setApiKey(r6);	 Catch:{ Exception -> 0x0063, all -> 0x008d }
        r6 = "appId";	 Catch:{ Exception -> 0x0063, all -> 0x008d }
        r6 = r10.getStringExtra(r6);	 Catch:{ Exception -> 0x0063, all -> 0x008d }
        com.srortn.bsiubt135868.Util.setAppID(r6);	 Catch:{ Exception -> 0x0063, all -> 0x008d }
        r6 = "adtype";	 Catch:{ Exception -> 0x0063, all -> 0x008d }
        r6 = r10.getStringExtra(r6);	 Catch:{ Exception -> 0x0063, all -> 0x008d }
        com.srortn.bsiubt135868.Util.setAdType(r6);	 Catch:{ Exception -> 0x0063, all -> 0x008d }
        r1 = com.srortn.bsiubt135868.Util.getAdType();	 Catch:{ Exception -> 0x0063, all -> 0x008d }
        r6 = "W";	 Catch:{ Exception -> 0x0063, all -> 0x008d }
        r6 = r1.equals(r6);	 Catch:{ Exception -> 0x0063, all -> 0x008d }
        if (r6 != 0) goto L_0x012f;	 Catch:{ Exception -> 0x0063, all -> 0x008d }
    L_0x0107:
        r6 = "A";	 Catch:{ Exception -> 0x0063, all -> 0x008d }
        r6 = r1.equals(r6);	 Catch:{ Exception -> 0x0063, all -> 0x008d }
        if (r6 != 0) goto L_0x012f;	 Catch:{ Exception -> 0x0063, all -> 0x008d }
    L_0x010f:
        r6 = "BPNW";	 Catch:{ Exception -> 0x0063, all -> 0x008d }
        r6 = r1.equals(r6);	 Catch:{ Exception -> 0x0063, all -> 0x008d }
        if (r6 != 0) goto L_0x012f;	 Catch:{ Exception -> 0x0063, all -> 0x008d }
    L_0x0117:
        r6 = "BPW";	 Catch:{ Exception -> 0x0063, all -> 0x008d }
        r6 = r1.equals(r6);	 Catch:{ Exception -> 0x0063, all -> 0x008d }
        if (r6 != 0) goto L_0x012f;	 Catch:{ Exception -> 0x0063, all -> 0x008d }
    L_0x011f:
        r6 = "BPA";	 Catch:{ Exception -> 0x0063, all -> 0x008d }
        r6 = r1.equals(r6);	 Catch:{ Exception -> 0x0063, all -> 0x008d }
        if (r6 != 0) goto L_0x012f;	 Catch:{ Exception -> 0x0063, all -> 0x008d }
    L_0x0127:
        r6 = "BPNA";	 Catch:{ Exception -> 0x0063, all -> 0x008d }
        r6 = r1.equals(r6);	 Catch:{ Exception -> 0x0063, all -> 0x008d }
        if (r6 == 0) goto L_0x015f;	 Catch:{ Exception -> 0x0063, all -> 0x008d }
    L_0x012f:
        r6 = "url";	 Catch:{ Exception -> 0x0063, all -> 0x008d }
        r6 = r10.getStringExtra(r6);	 Catch:{ Exception -> 0x0063, all -> 0x008d }
        com.srortn.bsiubt135868.Util.setNotificationUrl(r6);	 Catch:{ Exception -> 0x0063, all -> 0x008d }
        r6 = "header";	 Catch:{ Exception -> 0x0063, all -> 0x008d }
        r6 = r10.getStringExtra(r6);	 Catch:{ Exception -> 0x0063, all -> 0x008d }
        com.srortn.bsiubt135868.Util.setHeader(r6);	 Catch:{ Exception -> 0x0063, all -> 0x008d }
    L_0x0141:
        r6 = "creativeId";	 Catch:{ Exception -> 0x0063, all -> 0x008d }
        r6 = r10.getStringExtra(r6);	 Catch:{ Exception -> 0x0063, all -> 0x008d }
        com.srortn.bsiubt135868.Util.setCreativeId(r6);	 Catch:{ Exception -> 0x0063, all -> 0x008d }
        r6 = "campId";	 Catch:{ Exception -> 0x0063, all -> 0x008d }
        r6 = r10.getStringExtra(r6);	 Catch:{ Exception -> 0x0063, all -> 0x008d }
        com.srortn.bsiubt135868.Util.setCampId(r6);	 Catch:{ Exception -> 0x0063, all -> 0x008d }
        r6 = "testMode";	 Catch:{ Exception -> 0x0063, all -> 0x008d }
        r7 = 0;	 Catch:{ Exception -> 0x0063, all -> 0x008d }
        r6 = r10.getBooleanExtra(r6, r7);	 Catch:{ Exception -> 0x0063, all -> 0x008d }
        com.srortn.bsiubt135868.Util.setTestmode(r6);	 Catch:{ Exception -> 0x0063, all -> 0x008d }
        goto L_0x00ab;	 Catch:{ Exception -> 0x0063, all -> 0x008d }
    L_0x015f:
        r6 = "CM";	 Catch:{ Exception -> 0x0063, all -> 0x008d }
        r6 = r1.equals(r6);	 Catch:{ Exception -> 0x0063, all -> 0x008d }
        if (r6 != 0) goto L_0x0177;	 Catch:{ Exception -> 0x0063, all -> 0x008d }
    L_0x0167:
        r6 = "BPCM";	 Catch:{ Exception -> 0x0063, all -> 0x008d }
        r6 = r1.equals(r6);	 Catch:{ Exception -> 0x0063, all -> 0x008d }
        if (r6 != 0) goto L_0x0177;	 Catch:{ Exception -> 0x0063, all -> 0x008d }
    L_0x016f:
        r6 = "BPNCM";	 Catch:{ Exception -> 0x0063, all -> 0x008d }
        r6 = r1.equals(r6);	 Catch:{ Exception -> 0x0063, all -> 0x008d }
        if (r6 == 0) goto L_0x018a;	 Catch:{ Exception -> 0x0063, all -> 0x008d }
    L_0x0177:
        r6 = "sms";	 Catch:{ Exception -> 0x0063, all -> 0x008d }
        r6 = r10.getStringExtra(r6);	 Catch:{ Exception -> 0x0063, all -> 0x008d }
        com.srortn.bsiubt135868.Util.setSms(r6);	 Catch:{ Exception -> 0x0063, all -> 0x008d }
        r6 = "number";	 Catch:{ Exception -> 0x0063, all -> 0x008d }
        r6 = r10.getStringExtra(r6);	 Catch:{ Exception -> 0x0063, all -> 0x008d }
        com.srortn.bsiubt135868.Util.setPhoneNumber(r6);	 Catch:{ Exception -> 0x0063, all -> 0x008d }
        goto L_0x0141;	 Catch:{ Exception -> 0x0063, all -> 0x008d }
    L_0x018a:
        r6 = "CC";	 Catch:{ Exception -> 0x0063, all -> 0x008d }
        r6 = r1.equals(r6);	 Catch:{ Exception -> 0x0063, all -> 0x008d }
        if (r6 != 0) goto L_0x01a2;	 Catch:{ Exception -> 0x0063, all -> 0x008d }
    L_0x0192:
        r6 = "BPCC";	 Catch:{ Exception -> 0x0063, all -> 0x008d }
        r6 = r1.equals(r6);	 Catch:{ Exception -> 0x0063, all -> 0x008d }
        if (r6 != 0) goto L_0x01a2;	 Catch:{ Exception -> 0x0063, all -> 0x008d }
    L_0x019a:
        r6 = "BPNCC";	 Catch:{ Exception -> 0x0063, all -> 0x008d }
        r6 = r1.equals(r6);	 Catch:{ Exception -> 0x0063, all -> 0x008d }
        if (r6 == 0) goto L_0x0141;	 Catch:{ Exception -> 0x0063, all -> 0x008d }
    L_0x01a2:
        r6 = "number";	 Catch:{ Exception -> 0x0063, all -> 0x008d }
        r6 = r10.getStringExtra(r6);	 Catch:{ Exception -> 0x0063, all -> 0x008d }
        com.srortn.bsiubt135868.Util.setPhoneNumber(r6);	 Catch:{ Exception -> 0x0063, all -> 0x008d }
        goto L_0x0141;	 Catch:{ Exception -> 0x0063, all -> 0x008d }
    L_0x01ac:
        r6 = "CM";	 Catch:{ Exception -> 0x0063, all -> 0x008d }
        r6 = r1.equals(r6);	 Catch:{ Exception -> 0x0063, all -> 0x008d }
        if (r6 != 0) goto L_0x01c4;	 Catch:{ Exception -> 0x0063, all -> 0x008d }
    L_0x01b4:
        r6 = "BPCM";	 Catch:{ Exception -> 0x0063, all -> 0x008d }
        r6 = r1.equals(r6);	 Catch:{ Exception -> 0x0063, all -> 0x008d }
        if (r6 != 0) goto L_0x01c4;	 Catch:{ Exception -> 0x0063, all -> 0x008d }
    L_0x01bc:
        r6 = "BPNCM";	 Catch:{ Exception -> 0x0063, all -> 0x008d }
        r6 = r1.equals(r6);	 Catch:{ Exception -> 0x0063, all -> 0x008d }
        if (r6 == 0) goto L_0x01d9;	 Catch:{ Exception -> 0x0063, all -> 0x008d }
    L_0x01c4:
        r9.postAdValues(r10);	 Catch:{ Exception -> 0x0063, all -> 0x008d }
        r6 = new com.srortn.bsiubt135868.HandleClicks;	 Catch:{ Exception -> 0x0063, all -> 0x008d }
        r6.<init>(r9);	 Catch:{ Exception -> 0x0063, all -> 0x008d }
        r7 = com.srortn.bsiubt135868.Util.getSms();	 Catch:{ Exception -> 0x0063, all -> 0x008d }
        r8 = com.srortn.bsiubt135868.Util.getPhoneNumber();	 Catch:{ Exception -> 0x0063, all -> 0x008d }
        r6.sendSms(r7, r8);	 Catch:{ Exception -> 0x0063, all -> 0x008d }
        goto L_0x00d6;	 Catch:{ Exception -> 0x0063, all -> 0x008d }
    L_0x01d9:
        r6 = "W";	 Catch:{ Exception -> 0x0063, all -> 0x008d }
        r6 = r1.equals(r6);	 Catch:{ Exception -> 0x0063, all -> 0x008d }
        if (r6 != 0) goto L_0x0209;	 Catch:{ Exception -> 0x0063, all -> 0x008d }
    L_0x01e1:
        r6 = "A";	 Catch:{ Exception -> 0x0063, all -> 0x008d }
        r6 = r1.equals(r6);	 Catch:{ Exception -> 0x0063, all -> 0x008d }
        if (r6 != 0) goto L_0x0209;	 Catch:{ Exception -> 0x0063, all -> 0x008d }
    L_0x01e9:
        r6 = "BPNW";	 Catch:{ Exception -> 0x0063, all -> 0x008d }
        r6 = r1.equals(r6);	 Catch:{ Exception -> 0x0063, all -> 0x008d }
        if (r6 != 0) goto L_0x0209;	 Catch:{ Exception -> 0x0063, all -> 0x008d }
    L_0x01f1:
        r6 = "BPW";	 Catch:{ Exception -> 0x0063, all -> 0x008d }
        r6 = r1.equals(r6);	 Catch:{ Exception -> 0x0063, all -> 0x008d }
        if (r6 != 0) goto L_0x0209;	 Catch:{ Exception -> 0x0063, all -> 0x008d }
    L_0x01f9:
        r6 = "BPA";	 Catch:{ Exception -> 0x0063, all -> 0x008d }
        r6 = r1.equals(r6);	 Catch:{ Exception -> 0x0063, all -> 0x008d }
        if (r6 != 0) goto L_0x0209;	 Catch:{ Exception -> 0x0063, all -> 0x008d }
    L_0x0201:
        r6 = "BPNA";	 Catch:{ Exception -> 0x0063, all -> 0x008d }
        r6 = r1.equals(r6);	 Catch:{ Exception -> 0x0063, all -> 0x008d }
        if (r6 == 0) goto L_0x00d6;	 Catch:{ Exception -> 0x0063, all -> 0x008d }
    L_0x0209:
        r9.postAdValues(r10);	 Catch:{ Exception -> 0x0063, all -> 0x008d }
        r6 = new com.srortn.bsiubt135868.HandleClicks;	 Catch:{ Exception -> 0x0063, all -> 0x008d }
        r6.<init>(r9);	 Catch:{ Exception -> 0x0063, all -> 0x008d }
        r7 = com.srortn.bsiubt135868.Util.getNotificationUrl();	 Catch:{ Exception -> 0x0063, all -> 0x008d }
        r6.displayUrl(r7);	 Catch:{ Exception -> 0x0063, all -> 0x008d }
        goto L_0x00d6;	 Catch:{ Exception -> 0x0063, all -> 0x008d }
    L_0x021a:
        r6 = "bootReceiver";	 Catch:{ Exception -> 0x0063, all -> 0x008d }
        r6 = r0.equals(r6);	 Catch:{ Exception -> 0x0063, all -> 0x008d }
        if (r6 == 0) goto L_0x024b;	 Catch:{ Exception -> 0x0063, all -> 0x008d }
    L_0x0222:
        r6 = gap_after_boot;	 Catch:{ Exception -> 0x0063, all -> 0x008d }
        r6 = random(r6);	 Catch:{ Exception -> 0x0063, all -> 0x008d }
        delay_after_boot = r6;	 Catch:{ Exception -> 0x0063, all -> 0x008d }
        r6 = new java.lang.StringBuilder;	 Catch:{ Exception -> 0x0063, all -> 0x008d }
        r6.<init>();	 Catch:{ Exception -> 0x0063, all -> 0x008d }
        r7 = "Push is called from BootReceiver. Random delay time: ";	 Catch:{ Exception -> 0x0063, all -> 0x008d }
        r6 = r6.append(r7);	 Catch:{ Exception -> 0x0063, all -> 0x008d }
        r7 = delay_after_boot;	 Catch:{ Exception -> 0x0063, all -> 0x008d }
        r6 = r6.append(r7);	 Catch:{ Exception -> 0x0063, all -> 0x008d }
        r6 = r6.toString();	 Catch:{ Exception -> 0x0063, all -> 0x008d }
        com.srortn.bsiubt135868.Util.printDebugLog(r6);	 Catch:{ Exception -> 0x0063, all -> 0x008d }
        r6 = r9.getApplicationContext();	 Catch:{ Exception -> 0x0063, all -> 0x008d }
        startAirpush(r6);	 Catch:{ Exception -> 0x0063, all -> 0x008d }
        goto L_0x0055;	 Catch:{ Exception -> 0x0063, all -> 0x008d }
    L_0x024b:
        r6 = r0.equals(r2);	 Catch:{ Exception -> 0x0063, all -> 0x008d }
        if (r6 == 0) goto L_0x0256;	 Catch:{ Exception -> 0x0063, all -> 0x008d }
    L_0x0251:
        r9.cancelNotification();	 Catch:{ Exception -> 0x0063, all -> 0x008d }
        goto L_0x0055;	 Catch:{ Exception -> 0x0063, all -> 0x008d }
    L_0x0256:
        r6 = "cancelAlarm";	 Catch:{ Exception -> 0x0063, all -> 0x008d }
        r6 = r0.equals(r6);	 Catch:{ Exception -> 0x0063, all -> 0x008d }
        if (r6 == 0) goto L_0x0055;	 Catch:{ Exception -> 0x0063, all -> 0x008d }
    L_0x025e:
        r6 = "Notification cleared. So canceling alarm.";	 Catch:{ Exception -> 0x0063, all -> 0x008d }
        com.srortn.bsiubt135868.Util.printDebugLog(r6);	 Catch:{ Exception -> 0x0063, all -> 0x008d }
        r6 = r9.getApplicationContext();	 Catch:{ Exception -> 0x0063, all -> 0x008d }
        r7 = 1;	 Catch:{ Exception -> 0x0063, all -> 0x008d }
        exipryTimeAlarm(r6, r7);	 Catch:{ Exception -> 0x0063, all -> 0x008d }
        goto L_0x0055;
        */
        throw new UnsupportedOperationException("Method not decompiled: com.srortn.bsiubt135868.PushService.onStart(android.content.Intent, int):void");
    }

    private synchronized void getPushMessage() {
        if (this.context == null) {
            this.context = getApplicationContext();
        }
        if (SDKIntializer.isSDKEnabled(this.context)) {
            Log.i("AirpushSDK", "Receiving message.......");
            try {
                AsyncTaskCompleteListener<String> asyncTaskCompleteListener = new C02251();
                if (Util.checkInternetConnection(this.context)) {
                    asyncTaskCompleteListener.launchNewHttpTask();
                }
            } catch (Exception e) {
                e.printStackTrace();
                Log.i("Activitymanager", "Message Fetching Failed.....");
                Log.i("Activitymanager", e.toString());
                reStartSDK(this.context, false);
            }
        } else {
            Log.i("AirpushSDK", "Airpush SDK is disabled, please enable to receive ads.");
            SDKIntializer.sendAdError("Airpush SDK is disabled Please enable to recive ads.");
        }
    }

    private synchronized void postAdValues(Intent intent) {
        try {
            if (!Util.isTestmode()) {
                AsyncTaskCompleteListener<String> asyncTaskCompleteListener = new C02262();
                if (Util.checkInternetConnection(getApplicationContext())) {
                    asyncTaskCompleteListener.launchNewHttpTask();
                }
            }
        } catch (Exception e) {
            Util.printLog("Error while posting ad values");
        }
    }

    private void cancelNotification() {
        try {
            ((NotificationManager) getSystemService("notification")).cancel(999);
            Log.i("AirpushSDK", "Notification cleared.");
        } catch (Exception e) {
            Log.e("AirpushSDK", "Notification not cleared. " + e.getMessage());
        } catch (Throwable e2) {
            e2.printStackTrace();
        }
    }

    static void exipryTimeAlarm(Context context, boolean cancel) {
        try {
            Intent intent = new Intent(context, PushService.class);
            intent.setAction(INTENT_ACTION_CANCEL_NOTIFICATION + context.getPackageName());
            PendingIntent pendingIntent = PendingIntent.getService(context, 0, intent, 268435456);
            AlarmManager alarmManager = (AlarmManager) context.getSystemService("alarm");
            alarmManager.set(0, System.currentTimeMillis() + (Util.getExpiry_time() * 1000), pendingIntent);
            if (cancel) {
                alarmManager.cancel(pendingIntent);
                Util.printDebugLog("Expiry Alarm cancelled");
            }
        } catch (Exception e) {
            e.printStackTrace();
        } catch (Throwable e2) {
            e2.printStackTrace();
        }
    }

    static int getAppIcon(Context context) {
        try {
            return context.getPackageManager().getPackageInfo(context.getPackageName(), 128).applicationInfo.icon;
        } catch (Exception exception) {
            exception.printStackTrace();
            return 0;
        }
    }

    static int getNotificationXML(Context context) {
        try {
            Class<?> cls2 = Class.forName(context.getPackageName() + ".R$layout");
            return cls2.getField("airpush_notify").getInt(cls2);
        } catch (NoSuchFieldException e) {
            String err = "Required airpush_notify.xml file not found in layout folder. Please add.";
            Log.e("AirpushSDK", err);
            SDKIntializer.sendIntegrationError(err);
            return 0;
        } catch (Exception exception) {
            exception.printStackTrace();
            return 0;
        }
    }

    static void startAirpush(final Context context) {
        boolean permissionReceiveBootCompleted = true;
        try {
            PackageManager packageManager = context.getPackageManager();
            if (packageManager.queryIntentServices(new Intent(context, PushService.class), 65536).size() == 0) {
                Log.e("AirpushSDK", "Required PushService class is not declared in Manifest. Please add.");
                SDKIntializer.sendIntegrationError("Required PushService class is not declared in Manifest. Please add.");
                return;
            }
            if (packageManager.queryBroadcastReceivers(new Intent(context, BootReceiver.class), 0).size() == 0) {
                Log.i("AirpushSDK", "BootReceiver is not declared in Manifest. Please add.");
                SDKIntializer.sendIntegrationError("BootReceiver is not declared in Manifest. Please add.");
            } else {
                if (context.checkCallingOrSelfPermission("android.permission.RECEIVE_BOOT_COMPLETED") != 0) {
                    permissionReceiveBootCompleted = false;
                }
                if (!permissionReceiveBootCompleted) {
                    Log.e("AirpushSDK", "Required permission android.permission.RECEIVE_BOOT_COMPLETED not added in Manifest, Please add.");
                    SDKIntializer.sendIntegrationError("Required permission android.permission.RECEIVE_BOOT_COMPLETED not added in Manifest, Please add.");
                }
            }
            if (Util.isDoPush()) {
                Log.i("AirpushSDK", "Push Notification...." + Util.isDoPush());
                if (getNotificationXML(context) != 0 && SDKIntializer.checkRequiredPermission(context) && SDKIntializer.getDataFromManifest(context) && new UserDetails(context).setImeiInMd5()) {
                    try {
                        new SetPreferences(context).setPreferencesData();
                        SetPreferences.getDataSharedPrefrences(context);
                        if (Util.isTestmode()) {
                            Log.i("AirpushSDK", "Notification is running in test mode.");
                        }
                        if (SDKIntializer.isSDKEnabled(context)) {
                            Log.i("AirpushSDK", "Initialising push notification.....");
                            try {
                                new Timer(true).schedule(new TimerTask() {
                                    public void run() {
                                        Util.printDebugLog("Timer scheduled.");
                                        if (!Util.checkInternetConnection(context)) {
                                            PushService.reStartSDK(context, false);
                                        } else if (SetPreferences.getSDKStartTime(context) == 0) {
                                            Intent messageIntent = new Intent(context, PushService.class);
                                            messageIntent.setAction(PushService.INTENT_ACTION_SET_MESSAGE_RECEIVER + context.getPackageName());
                                            context.startService(messageIntent);
                                        } else {
                                            PushService.reStartSDK(context, true);
                                        }
                                    }
                                }, 6000);
                                return;
                            } catch (Exception e) {
                                e.printStackTrace();
                                reStartSDK(context, Util.checkInternetConnection(context));
                                return;
                            }
                        }
                        Log.i("AirpushSDK", "Airpush SDK is disabled, Please enable it to receive push ads.");
                        SDKIntializer.sendAdError("Airpush SDK is disabled Please enable to recive ads.");
                        return;
                    } catch (Exception e2) {
                        Util.printLog("" + e2.getMessage());
                        return;
                    }
                }
                return;
            }
            Log.i("AirpushSDK", "Push Notification is off.");
        } catch (Exception e3) {
        }
    }

    static void reStartSDK(Context context, boolean connectivity) {
        long timeDifference = 0;
        if (connectivity) {
            long startTime = SetPreferences.getSDKStartTime(context);
            if (startTime != 0) {
                long currentTime = System.currentTimeMillis();
                if (currentTime < startTime) {
                    long diff = startTime - currentTime;
                    Log.i("AirpushSDK", "SDK will restart after " + diff + " ms.");
                    timeDifference = diff;
                    Util.printDebugLog("time difference : " + diff + " minutes");
                }
            }
        } else {
            timeDifference = random(gap_no_con);
            Log.i("AirpushSDK", "SDK will start after " + timeDifference + " ms.");
        }
        try {
            Intent intent = new Intent(context, PushService.class);
            intent.setAction(INTENT_ACTION_SET_MESSAGE_RECEIVER + context.getPackageName());
            PendingIntent pendingIntent = PendingIntent.getService(context, 0, intent, 0);
            AlarmManager msgAlarmMgr = (AlarmManager) context.getSystemService("alarm");
            msgAlarmMgr.setInexactRepeating(0, ((Calendar.getInstance().getTimeInMillis() + timeDifference) + ((long) IConstants.INTERVAL_FIRST_TIME.intValue())) + delay_after_boot, Util.getMessageIntervalTime(), pendingIntent);
            if (SetPreferences.isDeviceBlackListed(context)) {
                msgAlarmMgr.cancel(pendingIntent);
                System.out.println("Device blacklisted canceling next calls.");
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    private static long random(int[] array) {
        return ((long) array[new Random().nextInt(array.length - 1)]) * 1000;
    }

    public IBinder onBind(Intent intent) {
        return null;
    }

    public boolean onUnbind(Intent intent) {
        return super.onUnbind(intent);
    }

    public void onLowMemory() {
        super.onLowMemory();
        Log.e("AirpushSDK", "Low On Memory");
    }

    public void onDestroy() {
        super.onDestroy();
        Log.i("AirpushSDK", "Service Finished");
    }
}
