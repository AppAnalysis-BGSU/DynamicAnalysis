record `com.bugsense.trace.BugProfiler` @kind class @AccessFlag  {
  `java.lang.StringBuilder` `com.bugsense.trace.BugProfiler.trackCpu` @AccessFlag PRIVATE_FINAL;
  `java.lang.StringBuilder` `com.bugsense.trace.BugProfiler.trackMem` @AccessFlag PRIVATE_FINAL;
}
global `int` `@@com.bugsense.trace.BugProfiler.MAX_LIFETIME` @AccessFlag PRIVATE_STATIC_FINAL;
global `int` `@@com.bugsense.trace.BugProfiler.currentStep` @AccessFlag PRIVATE_STATIC;
global `java.lang.String` `@@com.bugsense.trace.BugProfiler.currentTag` @AccessFlag PRIVATE_STATIC;
global `com.bugsense.trace.BugProfiler` `@@com.bugsense.trace.BugProfiler.instance` @AccessFlag PRIVATE_STATIC;
global `boolean` `@@com.bugsense.trace.BugProfiler.running` @AccessFlag PRIVATE_STATIC;
global `int` `@@com.bugsense.trace.BugProfiler.runningFor` @AccessFlag PRIVATE_STATIC;
procedure `void` `com.bugsense.trace.BugProfiler.<clinit>`() @owner ^`com.bugsense.trace.BugProfiler` @signature `Lcom/bugsense/trace/BugProfiler;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {

  # return;
}
procedure `void` `com.bugsense.trace.BugProfiler.<init>`(`com.bugsense.trace.BugProfiler` v1 @kind this) @owner ^`com.bugsense.trace.BugProfiler` @signature `Lcom/bugsense/trace/BugProfiler;.<init>:()V` @AccessFlag CONSTRUCTOR {

  # return;
}
procedure `boolean` `com.bugsense.trace.BugProfiler.access$000`() @owner ^`com.bugsense.trace.BugProfiler` @signature `Lcom/bugsense/trace/BugProfiler;.access$000:()Z` @AccessFlag STATIC_SYNTHETIC {

  # return;
}
procedure `java.lang.StringBuilder` `com.bugsense.trace.BugProfiler.access$100`(`com.bugsense.trace.BugProfiler` v1 @kind object) @owner ^`com.bugsense.trace.BugProfiler` @signature `Lcom/bugsense/trace/BugProfiler;.access$100:(Lcom/bugsense/trace/BugProfiler;)Ljava/lang/StringBuilder;` @AccessFlag STATIC_SYNTHETIC {

  # return;
}
procedure `java.lang.StringBuilder` `com.bugsense.trace.BugProfiler.access$200`(`com.bugsense.trace.BugProfiler` v1 @kind object) @owner ^`com.bugsense.trace.BugProfiler` @signature `Lcom/bugsense/trace/BugProfiler;.access$200:(Lcom/bugsense/trace/BugProfiler;)Ljava/lang/StringBuilder;` @AccessFlag STATIC_SYNTHETIC {

  # return;
}
procedure `int` `com.bugsense.trace.BugProfiler.access$300`() @owner ^`com.bugsense.trace.BugProfiler` @signature `Lcom/bugsense/trace/BugProfiler;.access$300:()I` @AccessFlag STATIC_SYNTHETIC {

  # return;
}
procedure `int` `com.bugsense.trace.BugProfiler.access$400`() @owner ^`com.bugsense.trace.BugProfiler` @signature `Lcom/bugsense/trace/BugProfiler;.access$400:()I` @AccessFlag STATIC_SYNTHETIC {

  # return;
}
procedure `int` `com.bugsense.trace.BugProfiler.access$412`(`int` v1 ) @owner ^`com.bugsense.trace.BugProfiler` @signature `Lcom/bugsense/trace/BugProfiler;.access$412:(I)I` @AccessFlag STATIC_SYNTHETIC {

  # return;
}
procedure `java.lang.String` `com.bugsense.trace.BugProfiler.access$500`() @owner ^`com.bugsense.trace.BugProfiler` @signature `Lcom/bugsense/trace/BugProfiler;.access$500:()Ljava/lang/String;` @AccessFlag STATIC_SYNTHETIC {

  # return;
}
procedure `com.bugsense.trace.BugProfiler` `com.bugsense.trace.BugProfiler.getProfiler`() @owner ^`com.bugsense.trace.BugProfiler` @signature `Lcom/bugsense/trace/BugProfiler;.getProfiler:()Lcom/bugsense/trace/BugProfiler;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `void` `com.bugsense.trace.BugProfiler.startThread`(`com.bugsense.trace.BugProfiler` v2 @kind this) @owner ^`com.bugsense.trace.BugProfiler` @signature `Lcom/bugsense/trace/BugProfiler;.startThread:()V` @AccessFlag PRIVATE {

  # return;
}
procedure `void` `com.bugsense.trace.BugProfiler.startProfiling`(`com.bugsense.trace.BugProfiler` v4 @kind this, `java.lang.String` v5 @kind object, `int` v6 ) @owner ^`com.bugsense.trace.BugProfiler` @signature `Lcom/bugsense/trace/BugProfiler;.startProfiling:(Ljava/lang/String;I)V` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `com.bugsense.trace.BugProfiler.stopProfiling`(`com.bugsense.trace.BugProfiler` v3 @kind this, `java.lang.String` v4 @kind object) @owner ^`com.bugsense.trace.BugProfiler` @signature `Lcom/bugsense/trace/BugProfiler;.stopProfiling:(Ljava/lang/String;)V` @AccessFlag PUBLIC {

  # return;
}
