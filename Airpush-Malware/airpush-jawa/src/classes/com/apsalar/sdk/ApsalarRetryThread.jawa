record `com.apsalar.sdk.ApsalarRetryThread` @kind class @AccessFlag  extends `java.lang.Thread` @kind class {
    `java.util.concurrent.ArrayBlockingQueue` `com.apsalar.sdk.ApsalarRetryThread.events` @AccessFlag PROTECTED;
}
global `com.apsalar.sdk.ApsalarRetryThread` `@@com.apsalar.sdk.ApsalarRetryThread.singleton` @AccessFlag PRIVATE_STATIC;
procedure `void` `com.apsalar.sdk.ApsalarRetryThread.<clinit>`() @owner ^`com.apsalar.sdk.ApsalarRetryThread` @signature `Lcom/apsalar/sdk/ApsalarRetryThread;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    `com.apsalar.sdk.ApsalarRetryThread` ApsalarRetryThread_v0;

    #L04481c.  ApsalarRetryThread_v0:= null;
    #L04481e.  `@@com.apsalar.sdk.ApsalarRetryThread.singleton`:= ApsalarRetryThread_v0  @kind object @type ^`com.apsalar.sdk.ApsalarRetryThread`;
    #L044822.  return  @kind void;
}
procedure `void` `com.apsalar.sdk.ApsalarRetryThread.<init>`(`com.apsalar.sdk.ApsalarRetryThread` `this` @kind this) @owner ^`com.apsalar.sdk.ApsalarRetryThread` @signature `Lcom/apsalar/sdk/ApsalarRetryThread;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    `java.util.concurrent.ArrayBlockingQueue` ArrayBlockingQueue_v0;
    `int` int_v1;

    #L044834.  call `java.lang.Thread.<init>`(`this`) @signature `Ljava/lang/Thread;.<init>:()V` @classDescriptor ^`java.lang.Thread` @kind direct;
    #L04483a.  ArrayBlockingQueue_v0:= new `java.util.concurrent.ArrayBlockingQueue`;
    #L04483e.  int_v1:= 1I;
    #L044840.  call `java.util.concurrent.ArrayBlockingQueue.<init>`(ArrayBlockingQueue_v0, int_v1) @signature `Ljava/util/concurrent/ArrayBlockingQueue;.<init>:(I)V` @classDescriptor ^`java.util.concurrent.ArrayBlockingQueue` @kind direct;
    #L044846.  `this`.`com.apsalar.sdk.ApsalarRetryThread.events`:= ArrayBlockingQueue_v0  @kind object @type ^`java.util.concurrent.ArrayBlockingQueue`;
    #L04484a.  return  @kind void;
}
procedure `com.apsalar.sdk.ApsalarRetryThread` `com.apsalar.sdk.ApsalarRetryThread.getInstance`() @owner ^`com.apsalar.sdk.ApsalarRetryThread` @signature `Lcom/apsalar/sdk/ApsalarRetryThread;.getInstance:()Lcom/apsalar/sdk/ApsalarRetryThread;` @AccessFlag PROTECTED_STATIC {
    `boolean` boolean_v0;
    `boolean` boolean_temp;
    `com.apsalar.sdk.ApsalarRetryThread` ApsalarRetryThread_v0;

    #L04485c.  ApsalarRetryThread_v0:= `@@com.apsalar.sdk.ApsalarRetryThread.singleton`  @kind object @type ^`com.apsalar.sdk.ApsalarRetryThread`;
    #L044860.  if ApsalarRetryThread_v0 != null then goto L044872;
    #L044864.  ApsalarRetryThread_v0:= new `com.apsalar.sdk.ApsalarRetryThread`;
    #L044868.  call `com.apsalar.sdk.ApsalarRetryThread.<init>`(ApsalarRetryThread_v0) @signature `Lcom/apsalar/sdk/ApsalarRetryThread;.<init>:()V` @classDescriptor ^`com.apsalar.sdk.ApsalarRetryThread` @kind direct;
    #L04486e.  `@@com.apsalar.sdk.ApsalarRetryThread.singleton`:= ApsalarRetryThread_v0  @kind object @type ^`com.apsalar.sdk.ApsalarRetryThread`;
    #L044872.  ApsalarRetryThread_v0:= `@@com.apsalar.sdk.ApsalarRetryThread.singleton`  @kind object @type ^`com.apsalar.sdk.ApsalarRetryThread`;
    #L044876.  call boolean_temp:=  `com.apsalar.sdk.ApsalarRetryThread.isAlive`(ApsalarRetryThread_v0) @signature `Lcom/apsalar/sdk/ApsalarRetryThread;.isAlive:()Z` @classDescriptor ^`com.apsalar.sdk.ApsalarRetryThread` @kind virtual;
    #L04487c.  boolean_v0:= boolean_temp;
    #L04487e.  if boolean_v0 != 0 then goto L04488c;
    #L044882.  ApsalarRetryThread_v0:= `@@com.apsalar.sdk.ApsalarRetryThread.singleton`  @kind object @type ^`com.apsalar.sdk.ApsalarRetryThread`;
    #L044886.  call `com.apsalar.sdk.ApsalarRetryThread.start`(ApsalarRetryThread_v0) @signature `Lcom/apsalar/sdk/ApsalarRetryThread;.start:()V` @classDescriptor ^`com.apsalar.sdk.ApsalarRetryThread` @kind virtual;
    #L04488c.  ApsalarRetryThread_v0:= `@@com.apsalar.sdk.ApsalarRetryThread.singleton`  @kind object @type ^`com.apsalar.sdk.ApsalarRetryThread`;
    #L044890.  return ApsalarRetryThread_v0  @kind object;
}
procedure `void` `com.apsalar.sdk.ApsalarRetryThread.run`(`com.apsalar.sdk.ApsalarRetryThread` `this` @kind this) @owner ^`com.apsalar.sdk.ApsalarRetryThread` @signature `Lcom/apsalar/sdk/ApsalarRetryThread;.run:()V` @AccessFlag PUBLIC {
    `long` long_v1;
    `com.apsalar.sdk.ApsalarThread` ApsalarThread_temp;
    `java.lang.Object` Object_v0;
    `com.apsalar.sdk.ApsalarAPI` ApsalarAPI_v0;
    `boolean` boolean_temp;
    `com.apsalar.sdk.ApsalarThread` ApsalarThread_v1;
    `java.util.concurrent.ArrayBlockingQueue` ArrayBlockingQueue_v0;
    `java.lang.Object` Object_temp;
    `java.util.concurrent.ArrayBlockingQueue` ArrayBlockingQueue_v1;
    `java.util.concurrent.TimeUnit` TimeUnit_v3;
    `int` int_temp;
    `java.lang.InterruptedException` InterruptedException_v0;
    `int` int_v1;

    #Try_start0.
    #L0448a4.  ArrayBlockingQueue_v0:= `this`.`com.apsalar.sdk.ApsalarRetryThread.events`  @kind object @type ^`java.util.concurrent.ArrayBlockingQueue`;
    #L0448a8.  long_v1:= 9223372036854775807L;
    #L0448b2.  TimeUnit_v3:= `@@java.util.concurrent.TimeUnit.MILLISECONDS`  @kind object @type ^`java.util.concurrent.TimeUnit`;
    #L0448b6.  call Object_temp:=  `java.util.concurrent.ArrayBlockingQueue.poll`(ArrayBlockingQueue_v0, long_v1, TimeUnit_v3) @signature `Ljava/util/concurrent/ArrayBlockingQueue;.poll:(JLjava/util/concurrent/TimeUnit;)Ljava/lang/Object;` @classDescriptor ^`java.util.concurrent.ArrayBlockingQueue` @kind virtual;
    #L0448bc.  Object_v0:= Object_temp  @kind object;
    #L0448be.  ApsalarAPI_v0:= (`com.apsalar.sdk.ApsalarAPI`)Object_v0  @kind object;
    #L0448c2.  if ApsalarAPI_v0 == null then goto L0448f2;
    #L0448c6.  call int_temp:=  `com.apsalar.sdk.ApsalarAPI.REST`(ApsalarAPI_v0) @signature `Lcom/apsalar/sdk/ApsalarAPI;.REST:()I` @classDescriptor ^`com.apsalar.sdk.ApsalarAPI` @kind interface;
    #L0448cc.  int_v1:= int_temp;
    #L0448ce.  goto L0448f8;
    #L0448d4.  goto L0448a4;
    #L0448d6.  call ApsalarThread_temp:=  `com.apsalar.sdk.ApsalarThread.getInstance`() @signature `Lcom/apsalar/sdk/ApsalarThread;.getInstance:()Lcom/apsalar/sdk/ApsalarThread;` @classDescriptor ^`com.apsalar.sdk.ApsalarThread` @kind static;
    #L0448dc.  ApsalarThread_v1:= ApsalarThread_temp  @kind object;
    #L0448de.  if ApsalarThread_v1 == null then goto L0448a4;
    #L0448e2.  ArrayBlockingQueue_v1:= ApsalarThread_v1.`com.apsalar.sdk.ApsalarThread.events`  @kind object @type ^`java.util.concurrent.ArrayBlockingQueue`;
    #L0448e6.  call boolean_temp:=  `java.util.concurrent.ArrayBlockingQueue.offer`(ArrayBlockingQueue_v1, ApsalarAPI_v0) @signature `Ljava/util/concurrent/ArrayBlockingQueue;.offer:(Ljava/lang/Object;)Z` @classDescriptor ^`java.util.concurrent.ArrayBlockingQueue` @kind virtual;
    #Try_end0.
    #L0448ec.  goto L0448a4;
    #L0448ee.  InterruptedException_v0:= Exception  @kind object @type ^`java.lang.InterruptedException`;
    #L0448f0.  goto L0448a4;
    #L0448f2.  int_v1:= -1I;
    #L0448f4.  goto L0448ce;
    #L0448f6.
    #L0448f8.  switch int_v1
                    | 1 => goto L0448d6
                    | else => goto L0448d4;
    catch `java.lang.InterruptedException` @[Try_start0..Try_end0] goto L0448ee;
}
